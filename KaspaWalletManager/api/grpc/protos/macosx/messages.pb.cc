// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace protowire {
constexpr KaspadMessage::KaspadMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct KaspadMessageDefaultTypeInternal {
  constexpr KaspadMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KaspadMessageDefaultTypeInternal() {}
  union {
    KaspadMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KaspadMessageDefaultTypeInternal _KaspadMessage_default_instance_;
}  // namespace protowire
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_messages_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_messages_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_messages_2eproto = nullptr;

const uint32_t TableStruct_messages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::KaspadMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::protowire::KaspadMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::protowire::KaspadMessage, payload_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::protowire::KaspadMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_KaspadMessage_default_instance_),
};

const char descriptor_table_protodef_messages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016messages.proto\022\tprotowire\032\tp2p.proto\032\t"
  "rpc.proto\"\321R\n\rKaspadMessage\0220\n\taddresses"
  "\030\001 \001(\0132\033.protowire.AddressesMessageH\000\022(\n"
  "\005block\030\002 \001(\0132\027.protowire.BlockMessageH\000\022"
  "4\n\013transaction\030\003 \001(\0132\035.protowire.Transac"
  "tionMessageH\000\0226\n\014blockLocator\030\005 \001(\0132\036.pr"
  "otowire.BlockLocatorMessageH\000\022>\n\020request"
  "Addresses\030\006 \001(\0132\".protowire.RequestAddre"
  "ssesMessageH\000\022B\n\022requestRelayBlocks\030\n \001("
  "\0132$.protowire.RequestRelayBlocksMessageH"
  "\000\022D\n\023requestTransactions\030\014 \001(\0132%.protowi"
  "re.RequestTransactionsMessageH\000\022+\n\010ibdBl"
  "ock\030\r \001(\0132\027.protowire.BlockMessageH\000\0228\n\r"
  "invRelayBlock\030\016 \001(\0132\037.protowire.InvRelay"
  "BlockMessageH\000\022<\n\017invTransactions\030\017 \001(\0132"
  "!.protowire.InvTransactionsMessageH\000\022&\n\004"
  "ping\030\020 \001(\0132\026.protowire.PingMessageH\000\022&\n\004"
  "pong\030\021 \001(\0132\026.protowire.PongMessageH\000\022*\n\006"
  "verack\030\023 \001(\0132\030.protowire.VerackMessageH\000"
  "\022,\n\007version\030\024 \001(\0132\031.protowire.VersionMes"
  "sageH\000\022D\n\023transactionNotFound\030\025 \001(\0132%.pr"
  "otowire.TransactionNotFoundMessageH\000\022*\n\006"
  "reject\030\026 \001(\0132\030.protowire.RejectMessageH\000"
  "\022N\n\030pruningPointUtxoSetChunk\030\031 \001(\0132*.pro"
  "towire.PruningPointUtxoSetChunkMessageH\000"
  "\022>\n\020requestIBDBlocks\030\032 \001(\0132\".protowire.R"
  "equestIBDBlocksMessageH\000\022J\n\026unexpectedPr"
  "uningPoint\030\033 \001(\0132(.protowire.UnexpectedP"
  "runingPointMessageH\000\022<\n\017ibdBlockLocator\030"
  "\036 \001(\0132!.protowire.IbdBlockLocatorMessage"
  "H\000\022R\n\032ibdBlockLocatorHighestHash\030\037 \001(\0132,"
  ".protowire.IbdBlockLocatorHighestHashMes"
  "sageH\000\022d\n#requestNextPruningPointUtxoSet"
  "Chunk\030! \001(\01325.protowire.RequestNextPruni"
  "ngPointUtxoSetChunkMessageH\000\022X\n\035donePrun"
  "ingPointUtxoSetChunks\030\" \001(\0132/.protowire."
  "DonePruningPointUtxoSetChunksMessageH\000\022b"
  "\n\"ibdBlockLocatorHighestHashNotFound\030# \001"
  "(\01324.protowire.IbdBlockLocatorHighestHas"
  "hNotFoundMessageH\000\022F\n\024blockWithTrustedDa"
  "ta\030$ \001(\0132&.protowire.BlockWithTrustedDat"
  "aMessageH\000\022P\n\031doneBlocksWithTrustedData\030"
  "% \001(\0132+.protowire.DoneBlocksWithTrustedD"
  "ataMessageH\000\022`\n!requestPruningPointAndIt"
  "sAnticone\030( \001(\01323.protowire.RequestPruni"
  "ngPointAndItsAnticoneMessageH\000\0226\n\014blockH"
  "eaders\030) \001(\0132\036.protowire.BlockHeadersMes"
  "sageH\000\022B\n\022requestNextHeaders\030* \001(\0132$.pro"
  "towire.RequestNextHeadersMessageH\000\0224\n\013Do"
  "neHeaders\030+ \001(\0132\035.protowire.DoneHeadersM"
  "essageH\000\022R\n\032requestPruningPointUTXOSet\030,"
  " \001(\0132,.protowire.RequestPruningPointUTXO"
  "SetMessageH\000\022:\n\016requestHeaders\030- \001(\0132 .p"
  "rotowire.RequestHeadersMessageH\000\022D\n\023requ"
  "estBlockLocator\030. \001(\0132%.protowire.Reques"
  "tBlockLocatorMessageH\000\0228\n\rpruningPoints\030"
  "/ \001(\0132\037.protowire.PruningPointsMessageH\000"
  "\022N\n\030requestPruningPointProof\0300 \001(\0132*.pro"
  "towire.RequestPruningPointProofMessageH\000"
  "\022@\n\021pruningPointProof\0301 \001(\0132#.protowire."
  "PruningPointProofMessageH\000\022(\n\005ready\0302 \001("
  "\0132\027.protowire.ReadyMessageH\000\022J\n\026blockWit"
  "hTrustedDataV4\0303 \001(\0132(.protowire.BlockWi"
  "thTrustedDataV4MessageH\000\0224\n\013trustedData\030"
  "4 \001(\0132\035.protowire.TrustedDataMessageH\000\022T"
  "\n\033requestIBDChainBlockLocator\0305 \001(\0132-.pr"
  "otowire.RequestIBDChainBlockLocatorMessa"
  "geH\000\022F\n\024ibdChainBlockLocator\0306 \001(\0132&.pro"
  "towire.IbdChainBlockLocatorMessageH\000\022<\n\017"
  "requestAnticone\0307 \001(\0132!.protowire.Reques"
  "tAnticoneMessageH\000\022t\n+requestNextPruning"
  "PointAndItsAnticoneBlocks\0308 \001(\0132=.protow"
  "ire.RequestNextPruningPointAndItsAnticon"
  "eBlocksMessageH\000\022O\n\030getCurrentNetworkReq"
  "uest\030\351\007 \001(\0132*.protowire.GetCurrentNetwor"
  "kRequestMessageH\000\022Q\n\031getCurrentNetworkRe"
  "sponse\030\352\007 \001(\0132+.protowire.GetCurrentNetw"
  "orkResponseMessageH\000\022C\n\022submitBlockReque"
  "st\030\353\007 \001(\0132$.protowire.SubmitBlockRequest"
  "MessageH\000\022E\n\023submitBlockResponse\030\354\007 \001(\0132"
  "%.protowire.SubmitBlockResponseMessageH\000"
  "\022M\n\027getBlockTemplateRequest\030\355\007 \001(\0132).pro"
  "towire.GetBlockTemplateRequestMessageH\000\022"
  "O\n\030getBlockTemplateResponse\030\356\007 \001(\0132*.pro"
  "towire.GetBlockTemplateResponseMessageH\000"
  "\022M\n\027notifyBlockAddedRequest\030\357\007 \001(\0132).pro"
  "towire.NotifyBlockAddedRequestMessageH\000\022"
  "O\n\030notifyBlockAddedResponse\030\360\007 \001(\0132*.pro"
  "towire.NotifyBlockAddedResponseMessageH\000"
  "\022K\n\026blockAddedNotification\030\361\007 \001(\0132(.prot"
  "owire.BlockAddedNotificationMessageH\000\022M\n"
  "\027getPeerAddressesRequest\030\362\007 \001(\0132).protow"
  "ire.GetPeerAddressesRequestMessageH\000\022O\n\030"
  "getPeerAddressesResponse\030\363\007 \001(\0132*.protow"
  "ire.GetPeerAddressesResponseMessageH\000\022Q\n"
  "\031getSelectedTipHashRequest\030\364\007 \001(\0132+.prot"
  "owire.GetSelectedTipHashRequestMessageH\000"
  "\022S\n\032getSelectedTipHashResponse\030\365\007 \001(\0132,."
  "protowire.GetSelectedTipHashResponseMess"
  "ageH\000\022K\n\026getMempoolEntryRequest\030\366\007 \001(\0132("
  ".protowire.GetMempoolEntryRequestMessage"
  "H\000\022M\n\027getMempoolEntryResponse\030\367\007 \001(\0132).p"
  "rotowire.GetMempoolEntryResponseMessageH"
  "\000\022U\n\033getConnectedPeerInfoRequest\030\370\007 \001(\0132"
  "-.protowire.GetConnectedPeerInfoRequestM"
  "essageH\000\022W\n\034getConnectedPeerInfoResponse"
  "\030\371\007 \001(\0132..protowire.GetConnectedPeerInfo"
  "ResponseMessageH\000\022;\n\016addPeerRequest\030\372\007 \001"
  "(\0132 .protowire.AddPeerRequestMessageH\000\022="
  "\n\017addPeerResponse\030\373\007 \001(\0132!.protowire.Add"
  "PeerResponseMessageH\000\022O\n\030submitTransacti"
  "onRequest\030\374\007 \001(\0132*.protowire.SubmitTrans"
  "actionRequestMessageH\000\022Q\n\031submitTransact"
  "ionResponse\030\375\007 \001(\0132+.protowire.SubmitTra"
  "nsactionResponseMessageH\000\022{\n.notifyVirtu"
  "alSelectedParentChainChangedRequest\030\376\007 \001"
  "(\0132@.protowire.NotifyVirtualSelectedPare"
  "ntChainChangedRequestMessageH\000\022}\n/notify"
  "VirtualSelectedParentChainChangedRespons"
  "e\030\377\007 \001(\0132A.protowire.NotifyVirtualSelect"
  "edParentChainChangedResponseMessageH\000\022y\n"
  "-virtualSelectedParentChainChangedNotifi"
  "cation\030\200\010 \001(\0132\?.protowire.VirtualSelecte"
  "dParentChainChangedNotificationMessageH\000"
  "\022=\n\017getBlockRequest\030\201\010 \001(\0132!.protowire.G"
  "etBlockRequestMessageH\000\022\?\n\020getBlockRespo"
  "nse\030\202\010 \001(\0132\".protowire.GetBlockResponseM"
  "essageH\000\022G\n\024getSubnetworkRequest\030\203\010 \001(\0132"
  "&.protowire.GetSubnetworkRequestMessageH"
  "\000\022I\n\025getSubnetworkResponse\030\204\010 \001(\0132\'.prot"
  "owire.GetSubnetworkResponseMessageH\000\022y\n-"
  "getVirtualSelectedParentChainFromBlockRe"
  "quest\030\205\010 \001(\0132\?.protowire.GetVirtualSelec"
  "tedParentChainFromBlockRequestMessageH\000\022"
  "{\n.getVirtualSelectedParentChainFromBloc"
  "kResponse\030\206\010 \001(\0132@.protowire.GetVirtualS"
  "electedParentChainFromBlockResponseMessa"
  "geH\000\022\?\n\020getBlocksRequest\030\207\010 \001(\0132\".protow"
  "ire.GetBlocksRequestMessageH\000\022A\n\021getBloc"
  "ksResponse\030\210\010 \001(\0132#.protowire.GetBlocksR"
  "esponseMessageH\000\022G\n\024getBlockCountRequest"
  "\030\211\010 \001(\0132&.protowire.GetBlockCountRequest"
  "MessageH\000\022I\n\025getBlockCountResponse\030\212\010 \001("
  "\0132\'.protowire.GetBlockCountResponseMessa"
  "geH\000\022K\n\026getBlockDagInfoRequest\030\213\010 \001(\0132(."
  "protowire.GetBlockDagInfoRequestMessageH"
  "\000\022M\n\027getBlockDagInfoResponse\030\214\010 \001(\0132).pr"
  "otowire.GetBlockDagInfoResponseMessageH\000"
  "\022[\n\036resolveFinalityConflictRequest\030\215\010 \001("
  "\01320.protowire.ResolveFinalityConflictReq"
  "uestMessageH\000\022]\n\037resolveFinalityConflict"
  "Response\030\216\010 \001(\01321.protowire.ResolveFinal"
  "ityConflictResponseMessageH\000\022[\n\036notifyFi"
  "nalityConflictsRequest\030\217\010 \001(\01320.protowir"
  "e.NotifyFinalityConflictsRequestMessageH"
  "\000\022]\n\037notifyFinalityConflictsResponse\030\220\010 "
  "\001(\01321.protowire.NotifyFinalityConflictsR"
  "esponseMessageH\000\022W\n\034finalityConflictNoti"
  "fication\030\221\010 \001(\0132..protowire.FinalityConf"
  "lictNotificationMessageH\000\022g\n$finalityCon"
  "flictResolvedNotification\030\222\010 \001(\01326.proto"
  "wire.FinalityConflictResolvedNotificatio"
  "nMessageH\000\022O\n\030getMempoolEntriesRequest\030\223"
  "\010 \001(\0132*.protowire.GetMempoolEntriesReque"
  "stMessageH\000\022Q\n\031getMempoolEntriesResponse"
  "\030\224\010 \001(\0132+.protowire.GetMempoolEntriesRes"
  "ponseMessageH\000\022=\n\017shutDownRequest\030\225\010 \001(\013"
  "2!.protowire.ShutDownRequestMessageH\000\022\?\n"
  "\020shutDownResponse\030\226\010 \001(\0132\".protowire.Shu"
  "tDownResponseMessageH\000\022A\n\021getHeadersRequ"
  "est\030\227\010 \001(\0132#.protowire.GetHeadersRequest"
  "MessageH\000\022C\n\022getHeadersResponse\030\230\010 \001(\0132$"
  ".protowire.GetHeadersResponseMessageH\000\022Q"
  "\n\031notifyUtxosChangedRequest\030\231\010 \001(\0132+.pro"
  "towire.NotifyUtxosChangedRequestMessageH"
  "\000\022S\n\032notifyUtxosChangedResponse\030\232\010 \001(\0132,"
  ".protowire.NotifyUtxosChangedResponseMes"
  "sageH\000\022O\n\030utxosChangedNotification\030\233\010 \001("
  "\0132*.protowire.UtxosChangedNotificationMe"
  "ssageH\000\022S\n\032getUtxosByAddressesRequest\030\234\010"
  " \001(\0132,.protowire.GetUtxosByAddressesRequ"
  "estMessageH\000\022U\n\033getUtxosByAddressesRespo"
  "nse\030\235\010 \001(\0132-.protowire.GetUtxosByAddress"
  "esResponseMessageH\000\022o\n(getVirtualSelecte"
  "dParentBlueScoreRequest\030\236\010 \001(\0132:.protowi"
  "re.GetVirtualSelectedParentBlueScoreRequ"
  "estMessageH\000\022q\n)getVirtualSelectedParent"
  "BlueScoreResponse\030\237\010 \001(\0132;.protowire.Get"
  "VirtualSelectedParentBlueScoreResponseMe"
  "ssageH\000\022\203\001\n2notifyVirtualSelectedParentB"
  "lueScoreChangedRequest\030\240\010 \001(\0132D.protowir"
  "e.NotifyVirtualSelectedParentBlueScoreCh"
  "angedRequestMessageH\000\022\205\001\n3notifyVirtualS"
  "electedParentBlueScoreChangedResponse\030\241\010"
  " \001(\0132E.protowire.NotifyVirtualSelectedPa"
  "rentBlueScoreChangedResponseMessageH\000\022\201\001"
  "\n1virtualSelectedParentBlueScoreChangedN"
  "otification\030\242\010 \001(\0132C.protowire.VirtualSe"
  "lectedParentBlueScoreChangedNotification"
  "MessageH\000\0223\n\nbanRequest\030\243\010 \001(\0132\034.protowi"
  "re.BanRequestMessageH\000\0225\n\013banResponse\030\244\010"
  " \001(\0132\035.protowire.BanResponseMessageH\000\0227\n"
  "\014unbanRequest\030\245\010 \001(\0132\036.protowire.UnbanRe"
  "questMessageH\000\0229\n\runbanResponse\030\246\010 \001(\0132\037"
  ".protowire.UnbanResponseMessageH\000\022;\n\016get"
  "InfoRequest\030\247\010 \001(\0132 .protowire.GetInfoRe"
  "questMessageH\000\022=\n\017getInfoResponse\030\250\010 \001(\013"
  "2!.protowire.GetInfoResponseMessageH\000\022_\n"
  " stopNotifyingUtxosChangedRequest\030\251\010 \001(\013"
  "22.protowire.StopNotifyingUtxosChangedRe"
  "questMessageH\000\022a\n!stopNotifyingUtxosChan"
  "gedResponse\030\252\010 \001(\01323.protowire.StopNotif"
  "yingUtxosChangedResponseMessageH\000\022o\n(not"
  "ifyPruningPointUTXOSetOverrideRequest\030\253\010"
  " \001(\0132:.protowire.NotifyPruningPointUTXOS"
  "etOverrideRequestMessageH\000\022q\n)notifyPrun"
  "ingPointUTXOSetOverrideResponse\030\254\010 \001(\0132;"
  ".protowire.NotifyPruningPointUTXOSetOver"
  "rideResponseMessageH\000\022m\n\'pruningPointUTX"
  "OSetOverrideNotification\030\255\010 \001(\01329.protow"
  "ire.PruningPointUTXOSetOverrideNotificat"
  "ionMessageH\000\022}\n/stopNotifyingPruningPoin"
  "tUTXOSetOverrideRequest\030\256\010 \001(\0132A.protowi"
  "re.StopNotifyingPruningPointUTXOSetOverr"
  "ideRequestMessageH\000\022\177\n0stopNotifyingPrun"
  "ingPointUTXOSetOverrideResponse\030\257\010 \001(\0132B"
  ".protowire.StopNotifyingPruningPointUTXO"
  "SetOverrideResponseMessageH\000\022i\n%estimate"
  "NetworkHashesPerSecondRequest\030\260\010 \001(\01327.p"
  "rotowire.EstimateNetworkHashesPerSecondR"
  "equestMessageH\000\022k\n&estimateNetworkHashes"
  "PerSecondResponse\030\261\010 \001(\01328.protowire.Est"
  "imateNetworkHashesPerSecondResponseMessa"
  "geH\000\022e\n#notifyVirtualDaaScoreChangedRequ"
  "est\030\262\010 \001(\01325.protowire.NotifyVirtualDaaS"
  "coreChangedRequestMessageH\000\022g\n$notifyVir"
  "tualDaaScoreChangedResponse\030\263\010 \001(\01326.pro"
  "towire.NotifyVirtualDaaScoreChangedRespo"
  "nseMessageH\000\022c\n\"virtualDaaScoreChangedNo"
  "tification\030\264\010 \001(\01324.protowire.VirtualDaa"
  "ScoreChangedNotificationMessageH\000\022S\n\032get"
  "BalanceByAddressRequest\030\265\010 \001(\0132,.protowi"
  "re.GetBalanceByAddressRequestMessageH\000\022U"
  "\n\033getBalanceByAddressResponse\030\266\010 \001(\0132-.p"
  "rotowire.GetBalanceByAddressResponseMess"
  "ageH\000\022Y\n\035getBalancesByAddressesRequest\030\267"
  "\010 \001(\0132/.protowire.GetBalancesByAddresses"
  "RequestMessageH\000\022[\n\036getBalancesByAddress"
  "esResponse\030\270\010 \001(\01320.protowire.GetBalance"
  "sByAddressesResponseMessageH\000\022Y\n\035notifyN"
  "ewBlockTemplateRequest\030\271\010 \001(\0132/.protowir"
  "e.NotifyNewBlockTemplateRequestMessageH\000"
  "\022[\n\036notifyNewBlockTemplateResponse\030\272\010 \001("
  "\01320.protowire.NotifyNewBlockTemplateResp"
  "onseMessageH\000\022W\n\034newBlockTemplateNotific"
  "ation\030\273\010 \001(\0132..protowire.NewBlockTemplat"
  "eNotificationMessageH\000\022e\n#getMempoolEntr"
  "iesByAddressesRequest\030\274\010 \001(\01325.protowire"
  ".GetMempoolEntriesByAddressesRequestMess"
  "ageH\000\022g\n$getMempoolEntriesByAddressesRes"
  "ponse\030\275\010 \001(\01326.protowire.GetMempoolEntri"
  "esByAddressesResponseMessageH\000\022G\n\024getCoi"
  "nSupplyRequest\030\276\010 \001(\0132&.protowire.GetCoi"
  "nSupplyRequestMessageH\000\022I\n\025getCoinSupply"
  "Response\030\277\010 \001(\0132\'.protowire.GetCoinSuppl"
  "yResponseMessageH\000B\t\n\007payload2P\n\003P2P\022I\n\r"
  "MessageStream\022\030.protowire.KaspadMessage\032"
  "\030.protowire.KaspadMessage\"\000(\0010\0012P\n\003RPC\022I"
  "\n\rMessageStream\022\030.protowire.KaspadMessag"
  "e\032\030.protowire.KaspadMessage\"\000(\0010\001B&Z$git"
  "hub.com/kaspanet/kaspad/protowireb\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_messages_2eproto_deps[2] = {
  &::descriptor_table_p2p_2eproto,
  &::descriptor_table_rpc_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_messages_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messages_2eproto = {
  false, false, 10841, descriptor_table_protodef_messages_2eproto, "messages.proto", 
  &descriptor_table_messages_2eproto_once, descriptor_table_messages_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_messages_2eproto::offsets,
  file_level_metadata_messages_2eproto, file_level_enum_descriptors_messages_2eproto, file_level_service_descriptors_messages_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_messages_2eproto_getter() {
  return &descriptor_table_messages_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_messages_2eproto(&descriptor_table_messages_2eproto);
namespace protowire {

// ===================================================================

class KaspadMessage::_Internal {
 public:
  static const ::protowire::AddressesMessage& addresses(const KaspadMessage* msg);
  static const ::protowire::BlockMessage& block(const KaspadMessage* msg);
  static const ::protowire::TransactionMessage& transaction(const KaspadMessage* msg);
  static const ::protowire::BlockLocatorMessage& blocklocator(const KaspadMessage* msg);
  static const ::protowire::RequestAddressesMessage& requestaddresses(const KaspadMessage* msg);
  static const ::protowire::RequestRelayBlocksMessage& requestrelayblocks(const KaspadMessage* msg);
  static const ::protowire::RequestTransactionsMessage& requesttransactions(const KaspadMessage* msg);
  static const ::protowire::BlockMessage& ibdblock(const KaspadMessage* msg);
  static const ::protowire::InvRelayBlockMessage& invrelayblock(const KaspadMessage* msg);
  static const ::protowire::InvTransactionsMessage& invtransactions(const KaspadMessage* msg);
  static const ::protowire::PingMessage& ping(const KaspadMessage* msg);
  static const ::protowire::PongMessage& pong(const KaspadMessage* msg);
  static const ::protowire::VerackMessage& verack(const KaspadMessage* msg);
  static const ::protowire::VersionMessage& version(const KaspadMessage* msg);
  static const ::protowire::TransactionNotFoundMessage& transactionnotfound(const KaspadMessage* msg);
  static const ::protowire::RejectMessage& reject(const KaspadMessage* msg);
  static const ::protowire::PruningPointUtxoSetChunkMessage& pruningpointutxosetchunk(const KaspadMessage* msg);
  static const ::protowire::RequestIBDBlocksMessage& requestibdblocks(const KaspadMessage* msg);
  static const ::protowire::UnexpectedPruningPointMessage& unexpectedpruningpoint(const KaspadMessage* msg);
  static const ::protowire::IbdBlockLocatorMessage& ibdblocklocator(const KaspadMessage* msg);
  static const ::protowire::IbdBlockLocatorHighestHashMessage& ibdblocklocatorhighesthash(const KaspadMessage* msg);
  static const ::protowire::RequestNextPruningPointUtxoSetChunkMessage& requestnextpruningpointutxosetchunk(const KaspadMessage* msg);
  static const ::protowire::DonePruningPointUtxoSetChunksMessage& donepruningpointutxosetchunks(const KaspadMessage* msg);
  static const ::protowire::IbdBlockLocatorHighestHashNotFoundMessage& ibdblocklocatorhighesthashnotfound(const KaspadMessage* msg);
  static const ::protowire::BlockWithTrustedDataMessage& blockwithtrusteddata(const KaspadMessage* msg);
  static const ::protowire::DoneBlocksWithTrustedDataMessage& doneblockswithtrusteddata(const KaspadMessage* msg);
  static const ::protowire::RequestPruningPointAndItsAnticoneMessage& requestpruningpointanditsanticone(const KaspadMessage* msg);
  static const ::protowire::BlockHeadersMessage& blockheaders(const KaspadMessage* msg);
  static const ::protowire::RequestNextHeadersMessage& requestnextheaders(const KaspadMessage* msg);
  static const ::protowire::DoneHeadersMessage& doneheaders(const KaspadMessage* msg);
  static const ::protowire::RequestPruningPointUTXOSetMessage& requestpruningpointutxoset(const KaspadMessage* msg);
  static const ::protowire::RequestHeadersMessage& requestheaders(const KaspadMessage* msg);
  static const ::protowire::RequestBlockLocatorMessage& requestblocklocator(const KaspadMessage* msg);
  static const ::protowire::PruningPointsMessage& pruningpoints(const KaspadMessage* msg);
  static const ::protowire::RequestPruningPointProofMessage& requestpruningpointproof(const KaspadMessage* msg);
  static const ::protowire::PruningPointProofMessage& pruningpointproof(const KaspadMessage* msg);
  static const ::protowire::ReadyMessage& ready(const KaspadMessage* msg);
  static const ::protowire::BlockWithTrustedDataV4Message& blockwithtrusteddatav4(const KaspadMessage* msg);
  static const ::protowire::TrustedDataMessage& trusteddata(const KaspadMessage* msg);
  static const ::protowire::RequestIBDChainBlockLocatorMessage& requestibdchainblocklocator(const KaspadMessage* msg);
  static const ::protowire::IbdChainBlockLocatorMessage& ibdchainblocklocator(const KaspadMessage* msg);
  static const ::protowire::RequestAnticoneMessage& requestanticone(const KaspadMessage* msg);
  static const ::protowire::RequestNextPruningPointAndItsAnticoneBlocksMessage& requestnextpruningpointanditsanticoneblocks(const KaspadMessage* msg);
  static const ::protowire::GetCurrentNetworkRequestMessage& getcurrentnetworkrequest(const KaspadMessage* msg);
  static const ::protowire::GetCurrentNetworkResponseMessage& getcurrentnetworkresponse(const KaspadMessage* msg);
  static const ::protowire::SubmitBlockRequestMessage& submitblockrequest(const KaspadMessage* msg);
  static const ::protowire::SubmitBlockResponseMessage& submitblockresponse(const KaspadMessage* msg);
  static const ::protowire::GetBlockTemplateRequestMessage& getblocktemplaterequest(const KaspadMessage* msg);
  static const ::protowire::GetBlockTemplateResponseMessage& getblocktemplateresponse(const KaspadMessage* msg);
  static const ::protowire::NotifyBlockAddedRequestMessage& notifyblockaddedrequest(const KaspadMessage* msg);
  static const ::protowire::NotifyBlockAddedResponseMessage& notifyblockaddedresponse(const KaspadMessage* msg);
  static const ::protowire::BlockAddedNotificationMessage& blockaddednotification(const KaspadMessage* msg);
  static const ::protowire::GetPeerAddressesRequestMessage& getpeeraddressesrequest(const KaspadMessage* msg);
  static const ::protowire::GetPeerAddressesResponseMessage& getpeeraddressesresponse(const KaspadMessage* msg);
  static const ::protowire::GetSelectedTipHashRequestMessage& getselectedtiphashrequest(const KaspadMessage* msg);
  static const ::protowire::GetSelectedTipHashResponseMessage& getselectedtiphashresponse(const KaspadMessage* msg);
  static const ::protowire::GetMempoolEntryRequestMessage& getmempoolentryrequest(const KaspadMessage* msg);
  static const ::protowire::GetMempoolEntryResponseMessage& getmempoolentryresponse(const KaspadMessage* msg);
  static const ::protowire::GetConnectedPeerInfoRequestMessage& getconnectedpeerinforequest(const KaspadMessage* msg);
  static const ::protowire::GetConnectedPeerInfoResponseMessage& getconnectedpeerinforesponse(const KaspadMessage* msg);
  static const ::protowire::AddPeerRequestMessage& addpeerrequest(const KaspadMessage* msg);
  static const ::protowire::AddPeerResponseMessage& addpeerresponse(const KaspadMessage* msg);
  static const ::protowire::SubmitTransactionRequestMessage& submittransactionrequest(const KaspadMessage* msg);
  static const ::protowire::SubmitTransactionResponseMessage& submittransactionresponse(const KaspadMessage* msg);
  static const ::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage& notifyvirtualselectedparentchainchangedrequest(const KaspadMessage* msg);
  static const ::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage& notifyvirtualselectedparentchainchangedresponse(const KaspadMessage* msg);
  static const ::protowire::VirtualSelectedParentChainChangedNotificationMessage& virtualselectedparentchainchangednotification(const KaspadMessage* msg);
  static const ::protowire::GetBlockRequestMessage& getblockrequest(const KaspadMessage* msg);
  static const ::protowire::GetBlockResponseMessage& getblockresponse(const KaspadMessage* msg);
  static const ::protowire::GetSubnetworkRequestMessage& getsubnetworkrequest(const KaspadMessage* msg);
  static const ::protowire::GetSubnetworkResponseMessage& getsubnetworkresponse(const KaspadMessage* msg);
  static const ::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage& getvirtualselectedparentchainfromblockrequest(const KaspadMessage* msg);
  static const ::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage& getvirtualselectedparentchainfromblockresponse(const KaspadMessage* msg);
  static const ::protowire::GetBlocksRequestMessage& getblocksrequest(const KaspadMessage* msg);
  static const ::protowire::GetBlocksResponseMessage& getblocksresponse(const KaspadMessage* msg);
  static const ::protowire::GetBlockCountRequestMessage& getblockcountrequest(const KaspadMessage* msg);
  static const ::protowire::GetBlockCountResponseMessage& getblockcountresponse(const KaspadMessage* msg);
  static const ::protowire::GetBlockDagInfoRequestMessage& getblockdaginforequest(const KaspadMessage* msg);
  static const ::protowire::GetBlockDagInfoResponseMessage& getblockdaginforesponse(const KaspadMessage* msg);
  static const ::protowire::ResolveFinalityConflictRequestMessage& resolvefinalityconflictrequest(const KaspadMessage* msg);
  static const ::protowire::ResolveFinalityConflictResponseMessage& resolvefinalityconflictresponse(const KaspadMessage* msg);
  static const ::protowire::NotifyFinalityConflictsRequestMessage& notifyfinalityconflictsrequest(const KaspadMessage* msg);
  static const ::protowire::NotifyFinalityConflictsResponseMessage& notifyfinalityconflictsresponse(const KaspadMessage* msg);
  static const ::protowire::FinalityConflictNotificationMessage& finalityconflictnotification(const KaspadMessage* msg);
  static const ::protowire::FinalityConflictResolvedNotificationMessage& finalityconflictresolvednotification(const KaspadMessage* msg);
  static const ::protowire::GetMempoolEntriesRequestMessage& getmempoolentriesrequest(const KaspadMessage* msg);
  static const ::protowire::GetMempoolEntriesResponseMessage& getmempoolentriesresponse(const KaspadMessage* msg);
  static const ::protowire::ShutDownRequestMessage& shutdownrequest(const KaspadMessage* msg);
  static const ::protowire::ShutDownResponseMessage& shutdownresponse(const KaspadMessage* msg);
  static const ::protowire::GetHeadersRequestMessage& getheadersrequest(const KaspadMessage* msg);
  static const ::protowire::GetHeadersResponseMessage& getheadersresponse(const KaspadMessage* msg);
  static const ::protowire::NotifyUtxosChangedRequestMessage& notifyutxoschangedrequest(const KaspadMessage* msg);
  static const ::protowire::NotifyUtxosChangedResponseMessage& notifyutxoschangedresponse(const KaspadMessage* msg);
  static const ::protowire::UtxosChangedNotificationMessage& utxoschangednotification(const KaspadMessage* msg);
  static const ::protowire::GetUtxosByAddressesRequestMessage& getutxosbyaddressesrequest(const KaspadMessage* msg);
  static const ::protowire::GetUtxosByAddressesResponseMessage& getutxosbyaddressesresponse(const KaspadMessage* msg);
  static const ::protowire::GetVirtualSelectedParentBlueScoreRequestMessage& getvirtualselectedparentbluescorerequest(const KaspadMessage* msg);
  static const ::protowire::GetVirtualSelectedParentBlueScoreResponseMessage& getvirtualselectedparentbluescoreresponse(const KaspadMessage* msg);
  static const ::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage& notifyvirtualselectedparentbluescorechangedrequest(const KaspadMessage* msg);
  static const ::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage& notifyvirtualselectedparentbluescorechangedresponse(const KaspadMessage* msg);
  static const ::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage& virtualselectedparentbluescorechangednotification(const KaspadMessage* msg);
  static const ::protowire::BanRequestMessage& banrequest(const KaspadMessage* msg);
  static const ::protowire::BanResponseMessage& banresponse(const KaspadMessage* msg);
  static const ::protowire::UnbanRequestMessage& unbanrequest(const KaspadMessage* msg);
  static const ::protowire::UnbanResponseMessage& unbanresponse(const KaspadMessage* msg);
  static const ::protowire::GetInfoRequestMessage& getinforequest(const KaspadMessage* msg);
  static const ::protowire::GetInfoResponseMessage& getinforesponse(const KaspadMessage* msg);
  static const ::protowire::StopNotifyingUtxosChangedRequestMessage& stopnotifyingutxoschangedrequest(const KaspadMessage* msg);
  static const ::protowire::StopNotifyingUtxosChangedResponseMessage& stopnotifyingutxoschangedresponse(const KaspadMessage* msg);
  static const ::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage& notifypruningpointutxosetoverriderequest(const KaspadMessage* msg);
  static const ::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage& notifypruningpointutxosetoverrideresponse(const KaspadMessage* msg);
  static const ::protowire::PruningPointUTXOSetOverrideNotificationMessage& pruningpointutxosetoverridenotification(const KaspadMessage* msg);
  static const ::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage& stopnotifyingpruningpointutxosetoverriderequest(const KaspadMessage* msg);
  static const ::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage& stopnotifyingpruningpointutxosetoverrideresponse(const KaspadMessage* msg);
  static const ::protowire::EstimateNetworkHashesPerSecondRequestMessage& estimatenetworkhashespersecondrequest(const KaspadMessage* msg);
  static const ::protowire::EstimateNetworkHashesPerSecondResponseMessage& estimatenetworkhashespersecondresponse(const KaspadMessage* msg);
  static const ::protowire::NotifyVirtualDaaScoreChangedRequestMessage& notifyvirtualdaascorechangedrequest(const KaspadMessage* msg);
  static const ::protowire::NotifyVirtualDaaScoreChangedResponseMessage& notifyvirtualdaascorechangedresponse(const KaspadMessage* msg);
  static const ::protowire::VirtualDaaScoreChangedNotificationMessage& virtualdaascorechangednotification(const KaspadMessage* msg);
  static const ::protowire::GetBalanceByAddressRequestMessage& getbalancebyaddressrequest(const KaspadMessage* msg);
  static const ::protowire::GetBalanceByAddressResponseMessage& getbalancebyaddressresponse(const KaspadMessage* msg);
  static const ::protowire::GetBalancesByAddressesRequestMessage& getbalancesbyaddressesrequest(const KaspadMessage* msg);
  static const ::protowire::GetBalancesByAddressesResponseMessage& getbalancesbyaddressesresponse(const KaspadMessage* msg);
  static const ::protowire::NotifyNewBlockTemplateRequestMessage& notifynewblocktemplaterequest(const KaspadMessage* msg);
  static const ::protowire::NotifyNewBlockTemplateResponseMessage& notifynewblocktemplateresponse(const KaspadMessage* msg);
  static const ::protowire::NewBlockTemplateNotificationMessage& newblocktemplatenotification(const KaspadMessage* msg);
  static const ::protowire::GetMempoolEntriesByAddressesRequestMessage& getmempoolentriesbyaddressesrequest(const KaspadMessage* msg);
  static const ::protowire::GetMempoolEntriesByAddressesResponseMessage& getmempoolentriesbyaddressesresponse(const KaspadMessage* msg);
  static const ::protowire::GetCoinSupplyRequestMessage& getcoinsupplyrequest(const KaspadMessage* msg);
  static const ::protowire::GetCoinSupplyResponseMessage& getcoinsupplyresponse(const KaspadMessage* msg);
};

const ::protowire::AddressesMessage&
KaspadMessage::_Internal::addresses(const KaspadMessage* msg) {
  return *msg->payload_.addresses_;
}
const ::protowire::BlockMessage&
KaspadMessage::_Internal::block(const KaspadMessage* msg) {
  return *msg->payload_.block_;
}
const ::protowire::TransactionMessage&
KaspadMessage::_Internal::transaction(const KaspadMessage* msg) {
  return *msg->payload_.transaction_;
}
const ::protowire::BlockLocatorMessage&
KaspadMessage::_Internal::blocklocator(const KaspadMessage* msg) {
  return *msg->payload_.blocklocator_;
}
const ::protowire::RequestAddressesMessage&
KaspadMessage::_Internal::requestaddresses(const KaspadMessage* msg) {
  return *msg->payload_.requestaddresses_;
}
const ::protowire::RequestRelayBlocksMessage&
KaspadMessage::_Internal::requestrelayblocks(const KaspadMessage* msg) {
  return *msg->payload_.requestrelayblocks_;
}
const ::protowire::RequestTransactionsMessage&
KaspadMessage::_Internal::requesttransactions(const KaspadMessage* msg) {
  return *msg->payload_.requesttransactions_;
}
const ::protowire::BlockMessage&
KaspadMessage::_Internal::ibdblock(const KaspadMessage* msg) {
  return *msg->payload_.ibdblock_;
}
const ::protowire::InvRelayBlockMessage&
KaspadMessage::_Internal::invrelayblock(const KaspadMessage* msg) {
  return *msg->payload_.invrelayblock_;
}
const ::protowire::InvTransactionsMessage&
KaspadMessage::_Internal::invtransactions(const KaspadMessage* msg) {
  return *msg->payload_.invtransactions_;
}
const ::protowire::PingMessage&
KaspadMessage::_Internal::ping(const KaspadMessage* msg) {
  return *msg->payload_.ping_;
}
const ::protowire::PongMessage&
KaspadMessage::_Internal::pong(const KaspadMessage* msg) {
  return *msg->payload_.pong_;
}
const ::protowire::VerackMessage&
KaspadMessage::_Internal::verack(const KaspadMessage* msg) {
  return *msg->payload_.verack_;
}
const ::protowire::VersionMessage&
KaspadMessage::_Internal::version(const KaspadMessage* msg) {
  return *msg->payload_.version_;
}
const ::protowire::TransactionNotFoundMessage&
KaspadMessage::_Internal::transactionnotfound(const KaspadMessage* msg) {
  return *msg->payload_.transactionnotfound_;
}
const ::protowire::RejectMessage&
KaspadMessage::_Internal::reject(const KaspadMessage* msg) {
  return *msg->payload_.reject_;
}
const ::protowire::PruningPointUtxoSetChunkMessage&
KaspadMessage::_Internal::pruningpointutxosetchunk(const KaspadMessage* msg) {
  return *msg->payload_.pruningpointutxosetchunk_;
}
const ::protowire::RequestIBDBlocksMessage&
KaspadMessage::_Internal::requestibdblocks(const KaspadMessage* msg) {
  return *msg->payload_.requestibdblocks_;
}
const ::protowire::UnexpectedPruningPointMessage&
KaspadMessage::_Internal::unexpectedpruningpoint(const KaspadMessage* msg) {
  return *msg->payload_.unexpectedpruningpoint_;
}
const ::protowire::IbdBlockLocatorMessage&
KaspadMessage::_Internal::ibdblocklocator(const KaspadMessage* msg) {
  return *msg->payload_.ibdblocklocator_;
}
const ::protowire::IbdBlockLocatorHighestHashMessage&
KaspadMessage::_Internal::ibdblocklocatorhighesthash(const KaspadMessage* msg) {
  return *msg->payload_.ibdblocklocatorhighesthash_;
}
const ::protowire::RequestNextPruningPointUtxoSetChunkMessage&
KaspadMessage::_Internal::requestnextpruningpointutxosetchunk(const KaspadMessage* msg) {
  return *msg->payload_.requestnextpruningpointutxosetchunk_;
}
const ::protowire::DonePruningPointUtxoSetChunksMessage&
KaspadMessage::_Internal::donepruningpointutxosetchunks(const KaspadMessage* msg) {
  return *msg->payload_.donepruningpointutxosetchunks_;
}
const ::protowire::IbdBlockLocatorHighestHashNotFoundMessage&
KaspadMessage::_Internal::ibdblocklocatorhighesthashnotfound(const KaspadMessage* msg) {
  return *msg->payload_.ibdblocklocatorhighesthashnotfound_;
}
const ::protowire::BlockWithTrustedDataMessage&
KaspadMessage::_Internal::blockwithtrusteddata(const KaspadMessage* msg) {
  return *msg->payload_.blockwithtrusteddata_;
}
const ::protowire::DoneBlocksWithTrustedDataMessage&
KaspadMessage::_Internal::doneblockswithtrusteddata(const KaspadMessage* msg) {
  return *msg->payload_.doneblockswithtrusteddata_;
}
const ::protowire::RequestPruningPointAndItsAnticoneMessage&
KaspadMessage::_Internal::requestpruningpointanditsanticone(const KaspadMessage* msg) {
  return *msg->payload_.requestpruningpointanditsanticone_;
}
const ::protowire::BlockHeadersMessage&
KaspadMessage::_Internal::blockheaders(const KaspadMessage* msg) {
  return *msg->payload_.blockheaders_;
}
const ::protowire::RequestNextHeadersMessage&
KaspadMessage::_Internal::requestnextheaders(const KaspadMessage* msg) {
  return *msg->payload_.requestnextheaders_;
}
const ::protowire::DoneHeadersMessage&
KaspadMessage::_Internal::doneheaders(const KaspadMessage* msg) {
  return *msg->payload_.doneheaders_;
}
const ::protowire::RequestPruningPointUTXOSetMessage&
KaspadMessage::_Internal::requestpruningpointutxoset(const KaspadMessage* msg) {
  return *msg->payload_.requestpruningpointutxoset_;
}
const ::protowire::RequestHeadersMessage&
KaspadMessage::_Internal::requestheaders(const KaspadMessage* msg) {
  return *msg->payload_.requestheaders_;
}
const ::protowire::RequestBlockLocatorMessage&
KaspadMessage::_Internal::requestblocklocator(const KaspadMessage* msg) {
  return *msg->payload_.requestblocklocator_;
}
const ::protowire::PruningPointsMessage&
KaspadMessage::_Internal::pruningpoints(const KaspadMessage* msg) {
  return *msg->payload_.pruningpoints_;
}
const ::protowire::RequestPruningPointProofMessage&
KaspadMessage::_Internal::requestpruningpointproof(const KaspadMessage* msg) {
  return *msg->payload_.requestpruningpointproof_;
}
const ::protowire::PruningPointProofMessage&
KaspadMessage::_Internal::pruningpointproof(const KaspadMessage* msg) {
  return *msg->payload_.pruningpointproof_;
}
const ::protowire::ReadyMessage&
KaspadMessage::_Internal::ready(const KaspadMessage* msg) {
  return *msg->payload_.ready_;
}
const ::protowire::BlockWithTrustedDataV4Message&
KaspadMessage::_Internal::blockwithtrusteddatav4(const KaspadMessage* msg) {
  return *msg->payload_.blockwithtrusteddatav4_;
}
const ::protowire::TrustedDataMessage&
KaspadMessage::_Internal::trusteddata(const KaspadMessage* msg) {
  return *msg->payload_.trusteddata_;
}
const ::protowire::RequestIBDChainBlockLocatorMessage&
KaspadMessage::_Internal::requestibdchainblocklocator(const KaspadMessage* msg) {
  return *msg->payload_.requestibdchainblocklocator_;
}
const ::protowire::IbdChainBlockLocatorMessage&
KaspadMessage::_Internal::ibdchainblocklocator(const KaspadMessage* msg) {
  return *msg->payload_.ibdchainblocklocator_;
}
const ::protowire::RequestAnticoneMessage&
KaspadMessage::_Internal::requestanticone(const KaspadMessage* msg) {
  return *msg->payload_.requestanticone_;
}
const ::protowire::RequestNextPruningPointAndItsAnticoneBlocksMessage&
KaspadMessage::_Internal::requestnextpruningpointanditsanticoneblocks(const KaspadMessage* msg) {
  return *msg->payload_.requestnextpruningpointanditsanticoneblocks_;
}
const ::protowire::GetCurrentNetworkRequestMessage&
KaspadMessage::_Internal::getcurrentnetworkrequest(const KaspadMessage* msg) {
  return *msg->payload_.getcurrentnetworkrequest_;
}
const ::protowire::GetCurrentNetworkResponseMessage&
KaspadMessage::_Internal::getcurrentnetworkresponse(const KaspadMessage* msg) {
  return *msg->payload_.getcurrentnetworkresponse_;
}
const ::protowire::SubmitBlockRequestMessage&
KaspadMessage::_Internal::submitblockrequest(const KaspadMessage* msg) {
  return *msg->payload_.submitblockrequest_;
}
const ::protowire::SubmitBlockResponseMessage&
KaspadMessage::_Internal::submitblockresponse(const KaspadMessage* msg) {
  return *msg->payload_.submitblockresponse_;
}
const ::protowire::GetBlockTemplateRequestMessage&
KaspadMessage::_Internal::getblocktemplaterequest(const KaspadMessage* msg) {
  return *msg->payload_.getblocktemplaterequest_;
}
const ::protowire::GetBlockTemplateResponseMessage&
KaspadMessage::_Internal::getblocktemplateresponse(const KaspadMessage* msg) {
  return *msg->payload_.getblocktemplateresponse_;
}
const ::protowire::NotifyBlockAddedRequestMessage&
KaspadMessage::_Internal::notifyblockaddedrequest(const KaspadMessage* msg) {
  return *msg->payload_.notifyblockaddedrequest_;
}
const ::protowire::NotifyBlockAddedResponseMessage&
KaspadMessage::_Internal::notifyblockaddedresponse(const KaspadMessage* msg) {
  return *msg->payload_.notifyblockaddedresponse_;
}
const ::protowire::BlockAddedNotificationMessage&
KaspadMessage::_Internal::blockaddednotification(const KaspadMessage* msg) {
  return *msg->payload_.blockaddednotification_;
}
const ::protowire::GetPeerAddressesRequestMessage&
KaspadMessage::_Internal::getpeeraddressesrequest(const KaspadMessage* msg) {
  return *msg->payload_.getpeeraddressesrequest_;
}
const ::protowire::GetPeerAddressesResponseMessage&
KaspadMessage::_Internal::getpeeraddressesresponse(const KaspadMessage* msg) {
  return *msg->payload_.getpeeraddressesresponse_;
}
const ::protowire::GetSelectedTipHashRequestMessage&
KaspadMessage::_Internal::getselectedtiphashrequest(const KaspadMessage* msg) {
  return *msg->payload_.getselectedtiphashrequest_;
}
const ::protowire::GetSelectedTipHashResponseMessage&
KaspadMessage::_Internal::getselectedtiphashresponse(const KaspadMessage* msg) {
  return *msg->payload_.getselectedtiphashresponse_;
}
const ::protowire::GetMempoolEntryRequestMessage&
KaspadMessage::_Internal::getmempoolentryrequest(const KaspadMessage* msg) {
  return *msg->payload_.getmempoolentryrequest_;
}
const ::protowire::GetMempoolEntryResponseMessage&
KaspadMessage::_Internal::getmempoolentryresponse(const KaspadMessage* msg) {
  return *msg->payload_.getmempoolentryresponse_;
}
const ::protowire::GetConnectedPeerInfoRequestMessage&
KaspadMessage::_Internal::getconnectedpeerinforequest(const KaspadMessage* msg) {
  return *msg->payload_.getconnectedpeerinforequest_;
}
const ::protowire::GetConnectedPeerInfoResponseMessage&
KaspadMessage::_Internal::getconnectedpeerinforesponse(const KaspadMessage* msg) {
  return *msg->payload_.getconnectedpeerinforesponse_;
}
const ::protowire::AddPeerRequestMessage&
KaspadMessage::_Internal::addpeerrequest(const KaspadMessage* msg) {
  return *msg->payload_.addpeerrequest_;
}
const ::protowire::AddPeerResponseMessage&
KaspadMessage::_Internal::addpeerresponse(const KaspadMessage* msg) {
  return *msg->payload_.addpeerresponse_;
}
const ::protowire::SubmitTransactionRequestMessage&
KaspadMessage::_Internal::submittransactionrequest(const KaspadMessage* msg) {
  return *msg->payload_.submittransactionrequest_;
}
const ::protowire::SubmitTransactionResponseMessage&
KaspadMessage::_Internal::submittransactionresponse(const KaspadMessage* msg) {
  return *msg->payload_.submittransactionresponse_;
}
const ::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage&
KaspadMessage::_Internal::notifyvirtualselectedparentchainchangedrequest(const KaspadMessage* msg) {
  return *msg->payload_.notifyvirtualselectedparentchainchangedrequest_;
}
const ::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage&
KaspadMessage::_Internal::notifyvirtualselectedparentchainchangedresponse(const KaspadMessage* msg) {
  return *msg->payload_.notifyvirtualselectedparentchainchangedresponse_;
}
const ::protowire::VirtualSelectedParentChainChangedNotificationMessage&
KaspadMessage::_Internal::virtualselectedparentchainchangednotification(const KaspadMessage* msg) {
  return *msg->payload_.virtualselectedparentchainchangednotification_;
}
const ::protowire::GetBlockRequestMessage&
KaspadMessage::_Internal::getblockrequest(const KaspadMessage* msg) {
  return *msg->payload_.getblockrequest_;
}
const ::protowire::GetBlockResponseMessage&
KaspadMessage::_Internal::getblockresponse(const KaspadMessage* msg) {
  return *msg->payload_.getblockresponse_;
}
const ::protowire::GetSubnetworkRequestMessage&
KaspadMessage::_Internal::getsubnetworkrequest(const KaspadMessage* msg) {
  return *msg->payload_.getsubnetworkrequest_;
}
const ::protowire::GetSubnetworkResponseMessage&
KaspadMessage::_Internal::getsubnetworkresponse(const KaspadMessage* msg) {
  return *msg->payload_.getsubnetworkresponse_;
}
const ::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage&
KaspadMessage::_Internal::getvirtualselectedparentchainfromblockrequest(const KaspadMessage* msg) {
  return *msg->payload_.getvirtualselectedparentchainfromblockrequest_;
}
const ::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage&
KaspadMessage::_Internal::getvirtualselectedparentchainfromblockresponse(const KaspadMessage* msg) {
  return *msg->payload_.getvirtualselectedparentchainfromblockresponse_;
}
const ::protowire::GetBlocksRequestMessage&
KaspadMessage::_Internal::getblocksrequest(const KaspadMessage* msg) {
  return *msg->payload_.getblocksrequest_;
}
const ::protowire::GetBlocksResponseMessage&
KaspadMessage::_Internal::getblocksresponse(const KaspadMessage* msg) {
  return *msg->payload_.getblocksresponse_;
}
const ::protowire::GetBlockCountRequestMessage&
KaspadMessage::_Internal::getblockcountrequest(const KaspadMessage* msg) {
  return *msg->payload_.getblockcountrequest_;
}
const ::protowire::GetBlockCountResponseMessage&
KaspadMessage::_Internal::getblockcountresponse(const KaspadMessage* msg) {
  return *msg->payload_.getblockcountresponse_;
}
const ::protowire::GetBlockDagInfoRequestMessage&
KaspadMessage::_Internal::getblockdaginforequest(const KaspadMessage* msg) {
  return *msg->payload_.getblockdaginforequest_;
}
const ::protowire::GetBlockDagInfoResponseMessage&
KaspadMessage::_Internal::getblockdaginforesponse(const KaspadMessage* msg) {
  return *msg->payload_.getblockdaginforesponse_;
}
const ::protowire::ResolveFinalityConflictRequestMessage&
KaspadMessage::_Internal::resolvefinalityconflictrequest(const KaspadMessage* msg) {
  return *msg->payload_.resolvefinalityconflictrequest_;
}
const ::protowire::ResolveFinalityConflictResponseMessage&
KaspadMessage::_Internal::resolvefinalityconflictresponse(const KaspadMessage* msg) {
  return *msg->payload_.resolvefinalityconflictresponse_;
}
const ::protowire::NotifyFinalityConflictsRequestMessage&
KaspadMessage::_Internal::notifyfinalityconflictsrequest(const KaspadMessage* msg) {
  return *msg->payload_.notifyfinalityconflictsrequest_;
}
const ::protowire::NotifyFinalityConflictsResponseMessage&
KaspadMessage::_Internal::notifyfinalityconflictsresponse(const KaspadMessage* msg) {
  return *msg->payload_.notifyfinalityconflictsresponse_;
}
const ::protowire::FinalityConflictNotificationMessage&
KaspadMessage::_Internal::finalityconflictnotification(const KaspadMessage* msg) {
  return *msg->payload_.finalityconflictnotification_;
}
const ::protowire::FinalityConflictResolvedNotificationMessage&
KaspadMessage::_Internal::finalityconflictresolvednotification(const KaspadMessage* msg) {
  return *msg->payload_.finalityconflictresolvednotification_;
}
const ::protowire::GetMempoolEntriesRequestMessage&
KaspadMessage::_Internal::getmempoolentriesrequest(const KaspadMessage* msg) {
  return *msg->payload_.getmempoolentriesrequest_;
}
const ::protowire::GetMempoolEntriesResponseMessage&
KaspadMessage::_Internal::getmempoolentriesresponse(const KaspadMessage* msg) {
  return *msg->payload_.getmempoolentriesresponse_;
}
const ::protowire::ShutDownRequestMessage&
KaspadMessage::_Internal::shutdownrequest(const KaspadMessage* msg) {
  return *msg->payload_.shutdownrequest_;
}
const ::protowire::ShutDownResponseMessage&
KaspadMessage::_Internal::shutdownresponse(const KaspadMessage* msg) {
  return *msg->payload_.shutdownresponse_;
}
const ::protowire::GetHeadersRequestMessage&
KaspadMessage::_Internal::getheadersrequest(const KaspadMessage* msg) {
  return *msg->payload_.getheadersrequest_;
}
const ::protowire::GetHeadersResponseMessage&
KaspadMessage::_Internal::getheadersresponse(const KaspadMessage* msg) {
  return *msg->payload_.getheadersresponse_;
}
const ::protowire::NotifyUtxosChangedRequestMessage&
KaspadMessage::_Internal::notifyutxoschangedrequest(const KaspadMessage* msg) {
  return *msg->payload_.notifyutxoschangedrequest_;
}
const ::protowire::NotifyUtxosChangedResponseMessage&
KaspadMessage::_Internal::notifyutxoschangedresponse(const KaspadMessage* msg) {
  return *msg->payload_.notifyutxoschangedresponse_;
}
const ::protowire::UtxosChangedNotificationMessage&
KaspadMessage::_Internal::utxoschangednotification(const KaspadMessage* msg) {
  return *msg->payload_.utxoschangednotification_;
}
const ::protowire::GetUtxosByAddressesRequestMessage&
KaspadMessage::_Internal::getutxosbyaddressesrequest(const KaspadMessage* msg) {
  return *msg->payload_.getutxosbyaddressesrequest_;
}
const ::protowire::GetUtxosByAddressesResponseMessage&
KaspadMessage::_Internal::getutxosbyaddressesresponse(const KaspadMessage* msg) {
  return *msg->payload_.getutxosbyaddressesresponse_;
}
const ::protowire::GetVirtualSelectedParentBlueScoreRequestMessage&
KaspadMessage::_Internal::getvirtualselectedparentbluescorerequest(const KaspadMessage* msg) {
  return *msg->payload_.getvirtualselectedparentbluescorerequest_;
}
const ::protowire::GetVirtualSelectedParentBlueScoreResponseMessage&
KaspadMessage::_Internal::getvirtualselectedparentbluescoreresponse(const KaspadMessage* msg) {
  return *msg->payload_.getvirtualselectedparentbluescoreresponse_;
}
const ::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage&
KaspadMessage::_Internal::notifyvirtualselectedparentbluescorechangedrequest(const KaspadMessage* msg) {
  return *msg->payload_.notifyvirtualselectedparentbluescorechangedrequest_;
}
const ::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage&
KaspadMessage::_Internal::notifyvirtualselectedparentbluescorechangedresponse(const KaspadMessage* msg) {
  return *msg->payload_.notifyvirtualselectedparentbluescorechangedresponse_;
}
const ::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage&
KaspadMessage::_Internal::virtualselectedparentbluescorechangednotification(const KaspadMessage* msg) {
  return *msg->payload_.virtualselectedparentbluescorechangednotification_;
}
const ::protowire::BanRequestMessage&
KaspadMessage::_Internal::banrequest(const KaspadMessage* msg) {
  return *msg->payload_.banrequest_;
}
const ::protowire::BanResponseMessage&
KaspadMessage::_Internal::banresponse(const KaspadMessage* msg) {
  return *msg->payload_.banresponse_;
}
const ::protowire::UnbanRequestMessage&
KaspadMessage::_Internal::unbanrequest(const KaspadMessage* msg) {
  return *msg->payload_.unbanrequest_;
}
const ::protowire::UnbanResponseMessage&
KaspadMessage::_Internal::unbanresponse(const KaspadMessage* msg) {
  return *msg->payload_.unbanresponse_;
}
const ::protowire::GetInfoRequestMessage&
KaspadMessage::_Internal::getinforequest(const KaspadMessage* msg) {
  return *msg->payload_.getinforequest_;
}
const ::protowire::GetInfoResponseMessage&
KaspadMessage::_Internal::getinforesponse(const KaspadMessage* msg) {
  return *msg->payload_.getinforesponse_;
}
const ::protowire::StopNotifyingUtxosChangedRequestMessage&
KaspadMessage::_Internal::stopnotifyingutxoschangedrequest(const KaspadMessage* msg) {
  return *msg->payload_.stopnotifyingutxoschangedrequest_;
}
const ::protowire::StopNotifyingUtxosChangedResponseMessage&
KaspadMessage::_Internal::stopnotifyingutxoschangedresponse(const KaspadMessage* msg) {
  return *msg->payload_.stopnotifyingutxoschangedresponse_;
}
const ::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage&
KaspadMessage::_Internal::notifypruningpointutxosetoverriderequest(const KaspadMessage* msg) {
  return *msg->payload_.notifypruningpointutxosetoverriderequest_;
}
const ::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage&
KaspadMessage::_Internal::notifypruningpointutxosetoverrideresponse(const KaspadMessage* msg) {
  return *msg->payload_.notifypruningpointutxosetoverrideresponse_;
}
const ::protowire::PruningPointUTXOSetOverrideNotificationMessage&
KaspadMessage::_Internal::pruningpointutxosetoverridenotification(const KaspadMessage* msg) {
  return *msg->payload_.pruningpointutxosetoverridenotification_;
}
const ::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage&
KaspadMessage::_Internal::stopnotifyingpruningpointutxosetoverriderequest(const KaspadMessage* msg) {
  return *msg->payload_.stopnotifyingpruningpointutxosetoverriderequest_;
}
const ::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage&
KaspadMessage::_Internal::stopnotifyingpruningpointutxosetoverrideresponse(const KaspadMessage* msg) {
  return *msg->payload_.stopnotifyingpruningpointutxosetoverrideresponse_;
}
const ::protowire::EstimateNetworkHashesPerSecondRequestMessage&
KaspadMessage::_Internal::estimatenetworkhashespersecondrequest(const KaspadMessage* msg) {
  return *msg->payload_.estimatenetworkhashespersecondrequest_;
}
const ::protowire::EstimateNetworkHashesPerSecondResponseMessage&
KaspadMessage::_Internal::estimatenetworkhashespersecondresponse(const KaspadMessage* msg) {
  return *msg->payload_.estimatenetworkhashespersecondresponse_;
}
const ::protowire::NotifyVirtualDaaScoreChangedRequestMessage&
KaspadMessage::_Internal::notifyvirtualdaascorechangedrequest(const KaspadMessage* msg) {
  return *msg->payload_.notifyvirtualdaascorechangedrequest_;
}
const ::protowire::NotifyVirtualDaaScoreChangedResponseMessage&
KaspadMessage::_Internal::notifyvirtualdaascorechangedresponse(const KaspadMessage* msg) {
  return *msg->payload_.notifyvirtualdaascorechangedresponse_;
}
const ::protowire::VirtualDaaScoreChangedNotificationMessage&
KaspadMessage::_Internal::virtualdaascorechangednotification(const KaspadMessage* msg) {
  return *msg->payload_.virtualdaascorechangednotification_;
}
const ::protowire::GetBalanceByAddressRequestMessage&
KaspadMessage::_Internal::getbalancebyaddressrequest(const KaspadMessage* msg) {
  return *msg->payload_.getbalancebyaddressrequest_;
}
const ::protowire::GetBalanceByAddressResponseMessage&
KaspadMessage::_Internal::getbalancebyaddressresponse(const KaspadMessage* msg) {
  return *msg->payload_.getbalancebyaddressresponse_;
}
const ::protowire::GetBalancesByAddressesRequestMessage&
KaspadMessage::_Internal::getbalancesbyaddressesrequest(const KaspadMessage* msg) {
  return *msg->payload_.getbalancesbyaddressesrequest_;
}
const ::protowire::GetBalancesByAddressesResponseMessage&
KaspadMessage::_Internal::getbalancesbyaddressesresponse(const KaspadMessage* msg) {
  return *msg->payload_.getbalancesbyaddressesresponse_;
}
const ::protowire::NotifyNewBlockTemplateRequestMessage&
KaspadMessage::_Internal::notifynewblocktemplaterequest(const KaspadMessage* msg) {
  return *msg->payload_.notifynewblocktemplaterequest_;
}
const ::protowire::NotifyNewBlockTemplateResponseMessage&
KaspadMessage::_Internal::notifynewblocktemplateresponse(const KaspadMessage* msg) {
  return *msg->payload_.notifynewblocktemplateresponse_;
}
const ::protowire::NewBlockTemplateNotificationMessage&
KaspadMessage::_Internal::newblocktemplatenotification(const KaspadMessage* msg) {
  return *msg->payload_.newblocktemplatenotification_;
}
const ::protowire::GetMempoolEntriesByAddressesRequestMessage&
KaspadMessage::_Internal::getmempoolentriesbyaddressesrequest(const KaspadMessage* msg) {
  return *msg->payload_.getmempoolentriesbyaddressesrequest_;
}
const ::protowire::GetMempoolEntriesByAddressesResponseMessage&
KaspadMessage::_Internal::getmempoolentriesbyaddressesresponse(const KaspadMessage* msg) {
  return *msg->payload_.getmempoolentriesbyaddressesresponse_;
}
const ::protowire::GetCoinSupplyRequestMessage&
KaspadMessage::_Internal::getcoinsupplyrequest(const KaspadMessage* msg) {
  return *msg->payload_.getcoinsupplyrequest_;
}
const ::protowire::GetCoinSupplyResponseMessage&
KaspadMessage::_Internal::getcoinsupplyresponse(const KaspadMessage* msg) {
  return *msg->payload_.getcoinsupplyresponse_;
}
void KaspadMessage::set_allocated_addresses(::protowire::AddressesMessage* addresses) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (addresses) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(addresses));
    if (message_arena != submessage_arena) {
      addresses = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, addresses, submessage_arena);
    }
    set_has_addresses();
    payload_.addresses_ = addresses;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.addresses)
}
void KaspadMessage::clear_addresses() {
  if (_internal_has_addresses()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.addresses_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_block(::protowire::BlockMessage* block) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (block) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(block));
    if (message_arena != submessage_arena) {
      block = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, block, submessage_arena);
    }
    set_has_block();
    payload_.block_ = block;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.block)
}
void KaspadMessage::clear_block() {
  if (_internal_has_block()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.block_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_transaction(::protowire::TransactionMessage* transaction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (transaction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction));
    if (message_arena != submessage_arena) {
      transaction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction, submessage_arena);
    }
    set_has_transaction();
    payload_.transaction_ = transaction;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.transaction)
}
void KaspadMessage::clear_transaction() {
  if (_internal_has_transaction()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.transaction_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_blocklocator(::protowire::BlockLocatorMessage* blocklocator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (blocklocator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blocklocator));
    if (message_arena != submessage_arena) {
      blocklocator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blocklocator, submessage_arena);
    }
    set_has_blocklocator();
    payload_.blocklocator_ = blocklocator;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.blockLocator)
}
void KaspadMessage::clear_blocklocator() {
  if (_internal_has_blocklocator()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.blocklocator_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestaddresses(::protowire::RequestAddressesMessage* requestaddresses) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestaddresses) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestaddresses));
    if (message_arena != submessage_arena) {
      requestaddresses = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestaddresses, submessage_arena);
    }
    set_has_requestaddresses();
    payload_.requestaddresses_ = requestaddresses;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestAddresses)
}
void KaspadMessage::clear_requestaddresses() {
  if (_internal_has_requestaddresses()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestaddresses_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestrelayblocks(::protowire::RequestRelayBlocksMessage* requestrelayblocks) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestrelayblocks) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestrelayblocks));
    if (message_arena != submessage_arena) {
      requestrelayblocks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestrelayblocks, submessage_arena);
    }
    set_has_requestrelayblocks();
    payload_.requestrelayblocks_ = requestrelayblocks;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestRelayBlocks)
}
void KaspadMessage::clear_requestrelayblocks() {
  if (_internal_has_requestrelayblocks()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestrelayblocks_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requesttransactions(::protowire::RequestTransactionsMessage* requesttransactions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requesttransactions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requesttransactions));
    if (message_arena != submessage_arena) {
      requesttransactions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requesttransactions, submessage_arena);
    }
    set_has_requesttransactions();
    payload_.requesttransactions_ = requesttransactions;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestTransactions)
}
void KaspadMessage::clear_requesttransactions() {
  if (_internal_has_requesttransactions()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requesttransactions_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_ibdblock(::protowire::BlockMessage* ibdblock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (ibdblock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ibdblock));
    if (message_arena != submessage_arena) {
      ibdblock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ibdblock, submessage_arena);
    }
    set_has_ibdblock();
    payload_.ibdblock_ = ibdblock;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.ibdBlock)
}
void KaspadMessage::clear_ibdblock() {
  if (_internal_has_ibdblock()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.ibdblock_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_invrelayblock(::protowire::InvRelayBlockMessage* invrelayblock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (invrelayblock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(invrelayblock));
    if (message_arena != submessage_arena) {
      invrelayblock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invrelayblock, submessage_arena);
    }
    set_has_invrelayblock();
    payload_.invrelayblock_ = invrelayblock;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.invRelayBlock)
}
void KaspadMessage::clear_invrelayblock() {
  if (_internal_has_invrelayblock()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.invrelayblock_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_invtransactions(::protowire::InvTransactionsMessage* invtransactions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (invtransactions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(invtransactions));
    if (message_arena != submessage_arena) {
      invtransactions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invtransactions, submessage_arena);
    }
    set_has_invtransactions();
    payload_.invtransactions_ = invtransactions;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.invTransactions)
}
void KaspadMessage::clear_invtransactions() {
  if (_internal_has_invtransactions()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.invtransactions_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_ping(::protowire::PingMessage* ping) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (ping) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ping));
    if (message_arena != submessage_arena) {
      ping = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping, submessage_arena);
    }
    set_has_ping();
    payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.ping)
}
void KaspadMessage::clear_ping() {
  if (_internal_has_ping()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.ping_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_pong(::protowire::PongMessage* pong) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (pong) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pong));
    if (message_arena != submessage_arena) {
      pong = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pong, submessage_arena);
    }
    set_has_pong();
    payload_.pong_ = pong;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.pong)
}
void KaspadMessage::clear_pong() {
  if (_internal_has_pong()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.pong_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_verack(::protowire::VerackMessage* verack) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (verack) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(verack));
    if (message_arena != submessage_arena) {
      verack = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, verack, submessage_arena);
    }
    set_has_verack();
    payload_.verack_ = verack;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.verack)
}
void KaspadMessage::clear_verack() {
  if (_internal_has_verack()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.verack_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_version(::protowire::VersionMessage* version) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (version) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(version));
    if (message_arena != submessage_arena) {
      version = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    set_has_version();
    payload_.version_ = version;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.version)
}
void KaspadMessage::clear_version() {
  if (_internal_has_version()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.version_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_transactionnotfound(::protowire::TransactionNotFoundMessage* transactionnotfound) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (transactionnotfound) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transactionnotfound));
    if (message_arena != submessage_arena) {
      transactionnotfound = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transactionnotfound, submessage_arena);
    }
    set_has_transactionnotfound();
    payload_.transactionnotfound_ = transactionnotfound;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.transactionNotFound)
}
void KaspadMessage::clear_transactionnotfound() {
  if (_internal_has_transactionnotfound()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.transactionnotfound_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_reject(::protowire::RejectMessage* reject) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (reject) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reject));
    if (message_arena != submessage_arena) {
      reject = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reject, submessage_arena);
    }
    set_has_reject();
    payload_.reject_ = reject;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.reject)
}
void KaspadMessage::clear_reject() {
  if (_internal_has_reject()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.reject_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_pruningpointutxosetchunk(::protowire::PruningPointUtxoSetChunkMessage* pruningpointutxosetchunk) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (pruningpointutxosetchunk) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pruningpointutxosetchunk));
    if (message_arena != submessage_arena) {
      pruningpointutxosetchunk = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pruningpointutxosetchunk, submessage_arena);
    }
    set_has_pruningpointutxosetchunk();
    payload_.pruningpointutxosetchunk_ = pruningpointutxosetchunk;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.pruningPointUtxoSetChunk)
}
void KaspadMessage::clear_pruningpointutxosetchunk() {
  if (_internal_has_pruningpointutxosetchunk()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.pruningpointutxosetchunk_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestibdblocks(::protowire::RequestIBDBlocksMessage* requestibdblocks) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestibdblocks) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestibdblocks));
    if (message_arena != submessage_arena) {
      requestibdblocks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestibdblocks, submessage_arena);
    }
    set_has_requestibdblocks();
    payload_.requestibdblocks_ = requestibdblocks;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestIBDBlocks)
}
void KaspadMessage::clear_requestibdblocks() {
  if (_internal_has_requestibdblocks()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestibdblocks_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_unexpectedpruningpoint(::protowire::UnexpectedPruningPointMessage* unexpectedpruningpoint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (unexpectedpruningpoint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unexpectedpruningpoint));
    if (message_arena != submessage_arena) {
      unexpectedpruningpoint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unexpectedpruningpoint, submessage_arena);
    }
    set_has_unexpectedpruningpoint();
    payload_.unexpectedpruningpoint_ = unexpectedpruningpoint;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.unexpectedPruningPoint)
}
void KaspadMessage::clear_unexpectedpruningpoint() {
  if (_internal_has_unexpectedpruningpoint()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.unexpectedpruningpoint_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_ibdblocklocator(::protowire::IbdBlockLocatorMessage* ibdblocklocator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (ibdblocklocator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ibdblocklocator));
    if (message_arena != submessage_arena) {
      ibdblocklocator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ibdblocklocator, submessage_arena);
    }
    set_has_ibdblocklocator();
    payload_.ibdblocklocator_ = ibdblocklocator;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.ibdBlockLocator)
}
void KaspadMessage::clear_ibdblocklocator() {
  if (_internal_has_ibdblocklocator()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.ibdblocklocator_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_ibdblocklocatorhighesthash(::protowire::IbdBlockLocatorHighestHashMessage* ibdblocklocatorhighesthash) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (ibdblocklocatorhighesthash) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ibdblocklocatorhighesthash));
    if (message_arena != submessage_arena) {
      ibdblocklocatorhighesthash = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ibdblocklocatorhighesthash, submessage_arena);
    }
    set_has_ibdblocklocatorhighesthash();
    payload_.ibdblocklocatorhighesthash_ = ibdblocklocatorhighesthash;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.ibdBlockLocatorHighestHash)
}
void KaspadMessage::clear_ibdblocklocatorhighesthash() {
  if (_internal_has_ibdblocklocatorhighesthash()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.ibdblocklocatorhighesthash_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestnextpruningpointutxosetchunk(::protowire::RequestNextPruningPointUtxoSetChunkMessage* requestnextpruningpointutxosetchunk) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestnextpruningpointutxosetchunk) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestnextpruningpointutxosetchunk));
    if (message_arena != submessage_arena) {
      requestnextpruningpointutxosetchunk = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestnextpruningpointutxosetchunk, submessage_arena);
    }
    set_has_requestnextpruningpointutxosetchunk();
    payload_.requestnextpruningpointutxosetchunk_ = requestnextpruningpointutxosetchunk;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestNextPruningPointUtxoSetChunk)
}
void KaspadMessage::clear_requestnextpruningpointutxosetchunk() {
  if (_internal_has_requestnextpruningpointutxosetchunk()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestnextpruningpointutxosetchunk_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_donepruningpointutxosetchunks(::protowire::DonePruningPointUtxoSetChunksMessage* donepruningpointutxosetchunks) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (donepruningpointutxosetchunks) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(donepruningpointutxosetchunks));
    if (message_arena != submessage_arena) {
      donepruningpointutxosetchunks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, donepruningpointutxosetchunks, submessage_arena);
    }
    set_has_donepruningpointutxosetchunks();
    payload_.donepruningpointutxosetchunks_ = donepruningpointutxosetchunks;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.donePruningPointUtxoSetChunks)
}
void KaspadMessage::clear_donepruningpointutxosetchunks() {
  if (_internal_has_donepruningpointutxosetchunks()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.donepruningpointutxosetchunks_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_ibdblocklocatorhighesthashnotfound(::protowire::IbdBlockLocatorHighestHashNotFoundMessage* ibdblocklocatorhighesthashnotfound) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (ibdblocklocatorhighesthashnotfound) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ibdblocklocatorhighesthashnotfound));
    if (message_arena != submessage_arena) {
      ibdblocklocatorhighesthashnotfound = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ibdblocklocatorhighesthashnotfound, submessage_arena);
    }
    set_has_ibdblocklocatorhighesthashnotfound();
    payload_.ibdblocklocatorhighesthashnotfound_ = ibdblocklocatorhighesthashnotfound;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.ibdBlockLocatorHighestHashNotFound)
}
void KaspadMessage::clear_ibdblocklocatorhighesthashnotfound() {
  if (_internal_has_ibdblocklocatorhighesthashnotfound()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.ibdblocklocatorhighesthashnotfound_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_blockwithtrusteddata(::protowire::BlockWithTrustedDataMessage* blockwithtrusteddata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (blockwithtrusteddata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockwithtrusteddata));
    if (message_arena != submessage_arena) {
      blockwithtrusteddata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blockwithtrusteddata, submessage_arena);
    }
    set_has_blockwithtrusteddata();
    payload_.blockwithtrusteddata_ = blockwithtrusteddata;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.blockWithTrustedData)
}
void KaspadMessage::clear_blockwithtrusteddata() {
  if (_internal_has_blockwithtrusteddata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.blockwithtrusteddata_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_doneblockswithtrusteddata(::protowire::DoneBlocksWithTrustedDataMessage* doneblockswithtrusteddata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (doneblockswithtrusteddata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(doneblockswithtrusteddata));
    if (message_arena != submessage_arena) {
      doneblockswithtrusteddata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, doneblockswithtrusteddata, submessage_arena);
    }
    set_has_doneblockswithtrusteddata();
    payload_.doneblockswithtrusteddata_ = doneblockswithtrusteddata;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.doneBlocksWithTrustedData)
}
void KaspadMessage::clear_doneblockswithtrusteddata() {
  if (_internal_has_doneblockswithtrusteddata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.doneblockswithtrusteddata_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestpruningpointanditsanticone(::protowire::RequestPruningPointAndItsAnticoneMessage* requestpruningpointanditsanticone) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestpruningpointanditsanticone) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestpruningpointanditsanticone));
    if (message_arena != submessage_arena) {
      requestpruningpointanditsanticone = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestpruningpointanditsanticone, submessage_arena);
    }
    set_has_requestpruningpointanditsanticone();
    payload_.requestpruningpointanditsanticone_ = requestpruningpointanditsanticone;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestPruningPointAndItsAnticone)
}
void KaspadMessage::clear_requestpruningpointanditsanticone() {
  if (_internal_has_requestpruningpointanditsanticone()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestpruningpointanditsanticone_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_blockheaders(::protowire::BlockHeadersMessage* blockheaders) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (blockheaders) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockheaders));
    if (message_arena != submessage_arena) {
      blockheaders = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blockheaders, submessage_arena);
    }
    set_has_blockheaders();
    payload_.blockheaders_ = blockheaders;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.blockHeaders)
}
void KaspadMessage::clear_blockheaders() {
  if (_internal_has_blockheaders()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.blockheaders_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestnextheaders(::protowire::RequestNextHeadersMessage* requestnextheaders) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestnextheaders) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestnextheaders));
    if (message_arena != submessage_arena) {
      requestnextheaders = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestnextheaders, submessage_arena);
    }
    set_has_requestnextheaders();
    payload_.requestnextheaders_ = requestnextheaders;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestNextHeaders)
}
void KaspadMessage::clear_requestnextheaders() {
  if (_internal_has_requestnextheaders()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestnextheaders_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_doneheaders(::protowire::DoneHeadersMessage* doneheaders) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (doneheaders) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(doneheaders));
    if (message_arena != submessage_arena) {
      doneheaders = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, doneheaders, submessage_arena);
    }
    set_has_doneheaders();
    payload_.doneheaders_ = doneheaders;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.DoneHeaders)
}
void KaspadMessage::clear_doneheaders() {
  if (_internal_has_doneheaders()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.doneheaders_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestpruningpointutxoset(::protowire::RequestPruningPointUTXOSetMessage* requestpruningpointutxoset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestpruningpointutxoset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestpruningpointutxoset));
    if (message_arena != submessage_arena) {
      requestpruningpointutxoset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestpruningpointutxoset, submessage_arena);
    }
    set_has_requestpruningpointutxoset();
    payload_.requestpruningpointutxoset_ = requestpruningpointutxoset;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestPruningPointUTXOSet)
}
void KaspadMessage::clear_requestpruningpointutxoset() {
  if (_internal_has_requestpruningpointutxoset()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestpruningpointutxoset_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestheaders(::protowire::RequestHeadersMessage* requestheaders) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestheaders) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestheaders));
    if (message_arena != submessage_arena) {
      requestheaders = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestheaders, submessage_arena);
    }
    set_has_requestheaders();
    payload_.requestheaders_ = requestheaders;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestHeaders)
}
void KaspadMessage::clear_requestheaders() {
  if (_internal_has_requestheaders()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestheaders_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestblocklocator(::protowire::RequestBlockLocatorMessage* requestblocklocator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestblocklocator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestblocklocator));
    if (message_arena != submessage_arena) {
      requestblocklocator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestblocklocator, submessage_arena);
    }
    set_has_requestblocklocator();
    payload_.requestblocklocator_ = requestblocklocator;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestBlockLocator)
}
void KaspadMessage::clear_requestblocklocator() {
  if (_internal_has_requestblocklocator()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestblocklocator_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_pruningpoints(::protowire::PruningPointsMessage* pruningpoints) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (pruningpoints) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pruningpoints));
    if (message_arena != submessage_arena) {
      pruningpoints = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pruningpoints, submessage_arena);
    }
    set_has_pruningpoints();
    payload_.pruningpoints_ = pruningpoints;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.pruningPoints)
}
void KaspadMessage::clear_pruningpoints() {
  if (_internal_has_pruningpoints()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.pruningpoints_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestpruningpointproof(::protowire::RequestPruningPointProofMessage* requestpruningpointproof) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestpruningpointproof) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestpruningpointproof));
    if (message_arena != submessage_arena) {
      requestpruningpointproof = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestpruningpointproof, submessage_arena);
    }
    set_has_requestpruningpointproof();
    payload_.requestpruningpointproof_ = requestpruningpointproof;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestPruningPointProof)
}
void KaspadMessage::clear_requestpruningpointproof() {
  if (_internal_has_requestpruningpointproof()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestpruningpointproof_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_pruningpointproof(::protowire::PruningPointProofMessage* pruningpointproof) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (pruningpointproof) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pruningpointproof));
    if (message_arena != submessage_arena) {
      pruningpointproof = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pruningpointproof, submessage_arena);
    }
    set_has_pruningpointproof();
    payload_.pruningpointproof_ = pruningpointproof;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.pruningPointProof)
}
void KaspadMessage::clear_pruningpointproof() {
  if (_internal_has_pruningpointproof()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.pruningpointproof_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_ready(::protowire::ReadyMessage* ready) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (ready) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ready));
    if (message_arena != submessage_arena) {
      ready = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ready, submessage_arena);
    }
    set_has_ready();
    payload_.ready_ = ready;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.ready)
}
void KaspadMessage::clear_ready() {
  if (_internal_has_ready()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.ready_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_blockwithtrusteddatav4(::protowire::BlockWithTrustedDataV4Message* blockwithtrusteddatav4) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (blockwithtrusteddatav4) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockwithtrusteddatav4));
    if (message_arena != submessage_arena) {
      blockwithtrusteddatav4 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blockwithtrusteddatav4, submessage_arena);
    }
    set_has_blockwithtrusteddatav4();
    payload_.blockwithtrusteddatav4_ = blockwithtrusteddatav4;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.blockWithTrustedDataV4)
}
void KaspadMessage::clear_blockwithtrusteddatav4() {
  if (_internal_has_blockwithtrusteddatav4()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.blockwithtrusteddatav4_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_trusteddata(::protowire::TrustedDataMessage* trusteddata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (trusteddata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(trusteddata));
    if (message_arena != submessage_arena) {
      trusteddata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, trusteddata, submessage_arena);
    }
    set_has_trusteddata();
    payload_.trusteddata_ = trusteddata;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.trustedData)
}
void KaspadMessage::clear_trusteddata() {
  if (_internal_has_trusteddata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.trusteddata_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestibdchainblocklocator(::protowire::RequestIBDChainBlockLocatorMessage* requestibdchainblocklocator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestibdchainblocklocator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestibdchainblocklocator));
    if (message_arena != submessage_arena) {
      requestibdchainblocklocator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestibdchainblocklocator, submessage_arena);
    }
    set_has_requestibdchainblocklocator();
    payload_.requestibdchainblocklocator_ = requestibdchainblocklocator;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestIBDChainBlockLocator)
}
void KaspadMessage::clear_requestibdchainblocklocator() {
  if (_internal_has_requestibdchainblocklocator()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestibdchainblocklocator_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_ibdchainblocklocator(::protowire::IbdChainBlockLocatorMessage* ibdchainblocklocator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (ibdchainblocklocator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ibdchainblocklocator));
    if (message_arena != submessage_arena) {
      ibdchainblocklocator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ibdchainblocklocator, submessage_arena);
    }
    set_has_ibdchainblocklocator();
    payload_.ibdchainblocklocator_ = ibdchainblocklocator;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.ibdChainBlockLocator)
}
void KaspadMessage::clear_ibdchainblocklocator() {
  if (_internal_has_ibdchainblocklocator()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.ibdchainblocklocator_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestanticone(::protowire::RequestAnticoneMessage* requestanticone) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestanticone) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestanticone));
    if (message_arena != submessage_arena) {
      requestanticone = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestanticone, submessage_arena);
    }
    set_has_requestanticone();
    payload_.requestanticone_ = requestanticone;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestAnticone)
}
void KaspadMessage::clear_requestanticone() {
  if (_internal_has_requestanticone()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestanticone_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_requestnextpruningpointanditsanticoneblocks(::protowire::RequestNextPruningPointAndItsAnticoneBlocksMessage* requestnextpruningpointanditsanticoneblocks) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (requestnextpruningpointanditsanticoneblocks) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestnextpruningpointanditsanticoneblocks));
    if (message_arena != submessage_arena) {
      requestnextpruningpointanditsanticoneblocks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestnextpruningpointanditsanticoneblocks, submessage_arena);
    }
    set_has_requestnextpruningpointanditsanticoneblocks();
    payload_.requestnextpruningpointanditsanticoneblocks_ = requestnextpruningpointanditsanticoneblocks;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.requestNextPruningPointAndItsAnticoneBlocks)
}
void KaspadMessage::clear_requestnextpruningpointanditsanticoneblocks() {
  if (_internal_has_requestnextpruningpointanditsanticoneblocks()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.requestnextpruningpointanditsanticoneblocks_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getcurrentnetworkrequest(::protowire::GetCurrentNetworkRequestMessage* getcurrentnetworkrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getcurrentnetworkrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getcurrentnetworkrequest));
    if (message_arena != submessage_arena) {
      getcurrentnetworkrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getcurrentnetworkrequest, submessage_arena);
    }
    set_has_getcurrentnetworkrequest();
    payload_.getcurrentnetworkrequest_ = getcurrentnetworkrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getCurrentNetworkRequest)
}
void KaspadMessage::clear_getcurrentnetworkrequest() {
  if (_internal_has_getcurrentnetworkrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getcurrentnetworkrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getcurrentnetworkresponse(::protowire::GetCurrentNetworkResponseMessage* getcurrentnetworkresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getcurrentnetworkresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getcurrentnetworkresponse));
    if (message_arena != submessage_arena) {
      getcurrentnetworkresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getcurrentnetworkresponse, submessage_arena);
    }
    set_has_getcurrentnetworkresponse();
    payload_.getcurrentnetworkresponse_ = getcurrentnetworkresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getCurrentNetworkResponse)
}
void KaspadMessage::clear_getcurrentnetworkresponse() {
  if (_internal_has_getcurrentnetworkresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getcurrentnetworkresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_submitblockrequest(::protowire::SubmitBlockRequestMessage* submitblockrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (submitblockrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(submitblockrequest));
    if (message_arena != submessage_arena) {
      submitblockrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, submitblockrequest, submessage_arena);
    }
    set_has_submitblockrequest();
    payload_.submitblockrequest_ = submitblockrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.submitBlockRequest)
}
void KaspadMessage::clear_submitblockrequest() {
  if (_internal_has_submitblockrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.submitblockrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_submitblockresponse(::protowire::SubmitBlockResponseMessage* submitblockresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (submitblockresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(submitblockresponse));
    if (message_arena != submessage_arena) {
      submitblockresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, submitblockresponse, submessage_arena);
    }
    set_has_submitblockresponse();
    payload_.submitblockresponse_ = submitblockresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.submitBlockResponse)
}
void KaspadMessage::clear_submitblockresponse() {
  if (_internal_has_submitblockresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.submitblockresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblocktemplaterequest(::protowire::GetBlockTemplateRequestMessage* getblocktemplaterequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblocktemplaterequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblocktemplaterequest));
    if (message_arena != submessage_arena) {
      getblocktemplaterequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblocktemplaterequest, submessage_arena);
    }
    set_has_getblocktemplaterequest();
    payload_.getblocktemplaterequest_ = getblocktemplaterequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlockTemplateRequest)
}
void KaspadMessage::clear_getblocktemplaterequest() {
  if (_internal_has_getblocktemplaterequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblocktemplaterequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblocktemplateresponse(::protowire::GetBlockTemplateResponseMessage* getblocktemplateresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblocktemplateresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblocktemplateresponse));
    if (message_arena != submessage_arena) {
      getblocktemplateresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblocktemplateresponse, submessage_arena);
    }
    set_has_getblocktemplateresponse();
    payload_.getblocktemplateresponse_ = getblocktemplateresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlockTemplateResponse)
}
void KaspadMessage::clear_getblocktemplateresponse() {
  if (_internal_has_getblocktemplateresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblocktemplateresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyblockaddedrequest(::protowire::NotifyBlockAddedRequestMessage* notifyblockaddedrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyblockaddedrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyblockaddedrequest));
    if (message_arena != submessage_arena) {
      notifyblockaddedrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyblockaddedrequest, submessage_arena);
    }
    set_has_notifyblockaddedrequest();
    payload_.notifyblockaddedrequest_ = notifyblockaddedrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyBlockAddedRequest)
}
void KaspadMessage::clear_notifyblockaddedrequest() {
  if (_internal_has_notifyblockaddedrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyblockaddedrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyblockaddedresponse(::protowire::NotifyBlockAddedResponseMessage* notifyblockaddedresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyblockaddedresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyblockaddedresponse));
    if (message_arena != submessage_arena) {
      notifyblockaddedresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyblockaddedresponse, submessage_arena);
    }
    set_has_notifyblockaddedresponse();
    payload_.notifyblockaddedresponse_ = notifyblockaddedresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyBlockAddedResponse)
}
void KaspadMessage::clear_notifyblockaddedresponse() {
  if (_internal_has_notifyblockaddedresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyblockaddedresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_blockaddednotification(::protowire::BlockAddedNotificationMessage* blockaddednotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (blockaddednotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockaddednotification));
    if (message_arena != submessage_arena) {
      blockaddednotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blockaddednotification, submessage_arena);
    }
    set_has_blockaddednotification();
    payload_.blockaddednotification_ = blockaddednotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.blockAddedNotification)
}
void KaspadMessage::clear_blockaddednotification() {
  if (_internal_has_blockaddednotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.blockaddednotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getpeeraddressesrequest(::protowire::GetPeerAddressesRequestMessage* getpeeraddressesrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getpeeraddressesrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getpeeraddressesrequest));
    if (message_arena != submessage_arena) {
      getpeeraddressesrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getpeeraddressesrequest, submessage_arena);
    }
    set_has_getpeeraddressesrequest();
    payload_.getpeeraddressesrequest_ = getpeeraddressesrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getPeerAddressesRequest)
}
void KaspadMessage::clear_getpeeraddressesrequest() {
  if (_internal_has_getpeeraddressesrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getpeeraddressesrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getpeeraddressesresponse(::protowire::GetPeerAddressesResponseMessage* getpeeraddressesresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getpeeraddressesresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getpeeraddressesresponse));
    if (message_arena != submessage_arena) {
      getpeeraddressesresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getpeeraddressesresponse, submessage_arena);
    }
    set_has_getpeeraddressesresponse();
    payload_.getpeeraddressesresponse_ = getpeeraddressesresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getPeerAddressesResponse)
}
void KaspadMessage::clear_getpeeraddressesresponse() {
  if (_internal_has_getpeeraddressesresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getpeeraddressesresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getselectedtiphashrequest(::protowire::GetSelectedTipHashRequestMessage* getselectedtiphashrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getselectedtiphashrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getselectedtiphashrequest));
    if (message_arena != submessage_arena) {
      getselectedtiphashrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getselectedtiphashrequest, submessage_arena);
    }
    set_has_getselectedtiphashrequest();
    payload_.getselectedtiphashrequest_ = getselectedtiphashrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getSelectedTipHashRequest)
}
void KaspadMessage::clear_getselectedtiphashrequest() {
  if (_internal_has_getselectedtiphashrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getselectedtiphashrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getselectedtiphashresponse(::protowire::GetSelectedTipHashResponseMessage* getselectedtiphashresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getselectedtiphashresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getselectedtiphashresponse));
    if (message_arena != submessage_arena) {
      getselectedtiphashresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getselectedtiphashresponse, submessage_arena);
    }
    set_has_getselectedtiphashresponse();
    payload_.getselectedtiphashresponse_ = getselectedtiphashresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getSelectedTipHashResponse)
}
void KaspadMessage::clear_getselectedtiphashresponse() {
  if (_internal_has_getselectedtiphashresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getselectedtiphashresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getmempoolentryrequest(::protowire::GetMempoolEntryRequestMessage* getmempoolentryrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getmempoolentryrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getmempoolentryrequest));
    if (message_arena != submessage_arena) {
      getmempoolentryrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getmempoolentryrequest, submessage_arena);
    }
    set_has_getmempoolentryrequest();
    payload_.getmempoolentryrequest_ = getmempoolentryrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getMempoolEntryRequest)
}
void KaspadMessage::clear_getmempoolentryrequest() {
  if (_internal_has_getmempoolentryrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getmempoolentryrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getmempoolentryresponse(::protowire::GetMempoolEntryResponseMessage* getmempoolentryresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getmempoolentryresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getmempoolentryresponse));
    if (message_arena != submessage_arena) {
      getmempoolentryresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getmempoolentryresponse, submessage_arena);
    }
    set_has_getmempoolentryresponse();
    payload_.getmempoolentryresponse_ = getmempoolentryresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getMempoolEntryResponse)
}
void KaspadMessage::clear_getmempoolentryresponse() {
  if (_internal_has_getmempoolentryresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getmempoolentryresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getconnectedpeerinforequest(::protowire::GetConnectedPeerInfoRequestMessage* getconnectedpeerinforequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getconnectedpeerinforequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getconnectedpeerinforequest));
    if (message_arena != submessage_arena) {
      getconnectedpeerinforequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getconnectedpeerinforequest, submessage_arena);
    }
    set_has_getconnectedpeerinforequest();
    payload_.getconnectedpeerinforequest_ = getconnectedpeerinforequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getConnectedPeerInfoRequest)
}
void KaspadMessage::clear_getconnectedpeerinforequest() {
  if (_internal_has_getconnectedpeerinforequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getconnectedpeerinforequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getconnectedpeerinforesponse(::protowire::GetConnectedPeerInfoResponseMessage* getconnectedpeerinforesponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getconnectedpeerinforesponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getconnectedpeerinforesponse));
    if (message_arena != submessage_arena) {
      getconnectedpeerinforesponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getconnectedpeerinforesponse, submessage_arena);
    }
    set_has_getconnectedpeerinforesponse();
    payload_.getconnectedpeerinforesponse_ = getconnectedpeerinforesponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getConnectedPeerInfoResponse)
}
void KaspadMessage::clear_getconnectedpeerinforesponse() {
  if (_internal_has_getconnectedpeerinforesponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getconnectedpeerinforesponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_addpeerrequest(::protowire::AddPeerRequestMessage* addpeerrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (addpeerrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(addpeerrequest));
    if (message_arena != submessage_arena) {
      addpeerrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, addpeerrequest, submessage_arena);
    }
    set_has_addpeerrequest();
    payload_.addpeerrequest_ = addpeerrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.addPeerRequest)
}
void KaspadMessage::clear_addpeerrequest() {
  if (_internal_has_addpeerrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.addpeerrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_addpeerresponse(::protowire::AddPeerResponseMessage* addpeerresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (addpeerresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(addpeerresponse));
    if (message_arena != submessage_arena) {
      addpeerresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, addpeerresponse, submessage_arena);
    }
    set_has_addpeerresponse();
    payload_.addpeerresponse_ = addpeerresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.addPeerResponse)
}
void KaspadMessage::clear_addpeerresponse() {
  if (_internal_has_addpeerresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.addpeerresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_submittransactionrequest(::protowire::SubmitTransactionRequestMessage* submittransactionrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (submittransactionrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(submittransactionrequest));
    if (message_arena != submessage_arena) {
      submittransactionrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, submittransactionrequest, submessage_arena);
    }
    set_has_submittransactionrequest();
    payload_.submittransactionrequest_ = submittransactionrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.submitTransactionRequest)
}
void KaspadMessage::clear_submittransactionrequest() {
  if (_internal_has_submittransactionrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.submittransactionrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_submittransactionresponse(::protowire::SubmitTransactionResponseMessage* submittransactionresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (submittransactionresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(submittransactionresponse));
    if (message_arena != submessage_arena) {
      submittransactionresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, submittransactionresponse, submessage_arena);
    }
    set_has_submittransactionresponse();
    payload_.submittransactionresponse_ = submittransactionresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.submitTransactionResponse)
}
void KaspadMessage::clear_submittransactionresponse() {
  if (_internal_has_submittransactionresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.submittransactionresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyvirtualselectedparentchainchangedrequest(::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage* notifyvirtualselectedparentchainchangedrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyvirtualselectedparentchainchangedrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyvirtualselectedparentchainchangedrequest));
    if (message_arena != submessage_arena) {
      notifyvirtualselectedparentchainchangedrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyvirtualselectedparentchainchangedrequest, submessage_arena);
    }
    set_has_notifyvirtualselectedparentchainchangedrequest();
    payload_.notifyvirtualselectedparentchainchangedrequest_ = notifyvirtualselectedparentchainchangedrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyVirtualSelectedParentChainChangedRequest)
}
void KaspadMessage::clear_notifyvirtualselectedparentchainchangedrequest() {
  if (_internal_has_notifyvirtualselectedparentchainchangedrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyvirtualselectedparentchainchangedrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyvirtualselectedparentchainchangedresponse(::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage* notifyvirtualselectedparentchainchangedresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyvirtualselectedparentchainchangedresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyvirtualselectedparentchainchangedresponse));
    if (message_arena != submessage_arena) {
      notifyvirtualselectedparentchainchangedresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyvirtualselectedparentchainchangedresponse, submessage_arena);
    }
    set_has_notifyvirtualselectedparentchainchangedresponse();
    payload_.notifyvirtualselectedparentchainchangedresponse_ = notifyvirtualselectedparentchainchangedresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyVirtualSelectedParentChainChangedResponse)
}
void KaspadMessage::clear_notifyvirtualselectedparentchainchangedresponse() {
  if (_internal_has_notifyvirtualselectedparentchainchangedresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyvirtualselectedparentchainchangedresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_virtualselectedparentchainchangednotification(::protowire::VirtualSelectedParentChainChangedNotificationMessage* virtualselectedparentchainchangednotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (virtualselectedparentchainchangednotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(virtualselectedparentchainchangednotification));
    if (message_arena != submessage_arena) {
      virtualselectedparentchainchangednotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, virtualselectedparentchainchangednotification, submessage_arena);
    }
    set_has_virtualselectedparentchainchangednotification();
    payload_.virtualselectedparentchainchangednotification_ = virtualselectedparentchainchangednotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.virtualSelectedParentChainChangedNotification)
}
void KaspadMessage::clear_virtualselectedparentchainchangednotification() {
  if (_internal_has_virtualselectedparentchainchangednotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.virtualselectedparentchainchangednotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblockrequest(::protowire::GetBlockRequestMessage* getblockrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblockrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblockrequest));
    if (message_arena != submessage_arena) {
      getblockrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblockrequest, submessage_arena);
    }
    set_has_getblockrequest();
    payload_.getblockrequest_ = getblockrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlockRequest)
}
void KaspadMessage::clear_getblockrequest() {
  if (_internal_has_getblockrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblockrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblockresponse(::protowire::GetBlockResponseMessage* getblockresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblockresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblockresponse));
    if (message_arena != submessage_arena) {
      getblockresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblockresponse, submessage_arena);
    }
    set_has_getblockresponse();
    payload_.getblockresponse_ = getblockresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlockResponse)
}
void KaspadMessage::clear_getblockresponse() {
  if (_internal_has_getblockresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblockresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getsubnetworkrequest(::protowire::GetSubnetworkRequestMessage* getsubnetworkrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getsubnetworkrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getsubnetworkrequest));
    if (message_arena != submessage_arena) {
      getsubnetworkrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getsubnetworkrequest, submessage_arena);
    }
    set_has_getsubnetworkrequest();
    payload_.getsubnetworkrequest_ = getsubnetworkrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getSubnetworkRequest)
}
void KaspadMessage::clear_getsubnetworkrequest() {
  if (_internal_has_getsubnetworkrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getsubnetworkrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getsubnetworkresponse(::protowire::GetSubnetworkResponseMessage* getsubnetworkresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getsubnetworkresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getsubnetworkresponse));
    if (message_arena != submessage_arena) {
      getsubnetworkresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getsubnetworkresponse, submessage_arena);
    }
    set_has_getsubnetworkresponse();
    payload_.getsubnetworkresponse_ = getsubnetworkresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getSubnetworkResponse)
}
void KaspadMessage::clear_getsubnetworkresponse() {
  if (_internal_has_getsubnetworkresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getsubnetworkresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getvirtualselectedparentchainfromblockrequest(::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage* getvirtualselectedparentchainfromblockrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getvirtualselectedparentchainfromblockrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getvirtualselectedparentchainfromblockrequest));
    if (message_arena != submessage_arena) {
      getvirtualselectedparentchainfromblockrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getvirtualselectedparentchainfromblockrequest, submessage_arena);
    }
    set_has_getvirtualselectedparentchainfromblockrequest();
    payload_.getvirtualselectedparentchainfromblockrequest_ = getvirtualselectedparentchainfromblockrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getVirtualSelectedParentChainFromBlockRequest)
}
void KaspadMessage::clear_getvirtualselectedparentchainfromblockrequest() {
  if (_internal_has_getvirtualselectedparentchainfromblockrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getvirtualselectedparentchainfromblockrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getvirtualselectedparentchainfromblockresponse(::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage* getvirtualselectedparentchainfromblockresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getvirtualselectedparentchainfromblockresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getvirtualselectedparentchainfromblockresponse));
    if (message_arena != submessage_arena) {
      getvirtualselectedparentchainfromblockresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getvirtualselectedparentchainfromblockresponse, submessage_arena);
    }
    set_has_getvirtualselectedparentchainfromblockresponse();
    payload_.getvirtualselectedparentchainfromblockresponse_ = getvirtualselectedparentchainfromblockresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getVirtualSelectedParentChainFromBlockResponse)
}
void KaspadMessage::clear_getvirtualselectedparentchainfromblockresponse() {
  if (_internal_has_getvirtualselectedparentchainfromblockresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getvirtualselectedparentchainfromblockresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblocksrequest(::protowire::GetBlocksRequestMessage* getblocksrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblocksrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblocksrequest));
    if (message_arena != submessage_arena) {
      getblocksrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblocksrequest, submessage_arena);
    }
    set_has_getblocksrequest();
    payload_.getblocksrequest_ = getblocksrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlocksRequest)
}
void KaspadMessage::clear_getblocksrequest() {
  if (_internal_has_getblocksrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblocksrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblocksresponse(::protowire::GetBlocksResponseMessage* getblocksresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblocksresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblocksresponse));
    if (message_arena != submessage_arena) {
      getblocksresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblocksresponse, submessage_arena);
    }
    set_has_getblocksresponse();
    payload_.getblocksresponse_ = getblocksresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlocksResponse)
}
void KaspadMessage::clear_getblocksresponse() {
  if (_internal_has_getblocksresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblocksresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblockcountrequest(::protowire::GetBlockCountRequestMessage* getblockcountrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblockcountrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblockcountrequest));
    if (message_arena != submessage_arena) {
      getblockcountrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblockcountrequest, submessage_arena);
    }
    set_has_getblockcountrequest();
    payload_.getblockcountrequest_ = getblockcountrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlockCountRequest)
}
void KaspadMessage::clear_getblockcountrequest() {
  if (_internal_has_getblockcountrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblockcountrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblockcountresponse(::protowire::GetBlockCountResponseMessage* getblockcountresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblockcountresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblockcountresponse));
    if (message_arena != submessage_arena) {
      getblockcountresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblockcountresponse, submessage_arena);
    }
    set_has_getblockcountresponse();
    payload_.getblockcountresponse_ = getblockcountresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlockCountResponse)
}
void KaspadMessage::clear_getblockcountresponse() {
  if (_internal_has_getblockcountresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblockcountresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblockdaginforequest(::protowire::GetBlockDagInfoRequestMessage* getblockdaginforequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblockdaginforequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblockdaginforequest));
    if (message_arena != submessage_arena) {
      getblockdaginforequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblockdaginforequest, submessage_arena);
    }
    set_has_getblockdaginforequest();
    payload_.getblockdaginforequest_ = getblockdaginforequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlockDagInfoRequest)
}
void KaspadMessage::clear_getblockdaginforequest() {
  if (_internal_has_getblockdaginforequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblockdaginforequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getblockdaginforesponse(::protowire::GetBlockDagInfoResponseMessage* getblockdaginforesponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getblockdaginforesponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getblockdaginforesponse));
    if (message_arena != submessage_arena) {
      getblockdaginforesponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getblockdaginforesponse, submessage_arena);
    }
    set_has_getblockdaginforesponse();
    payload_.getblockdaginforesponse_ = getblockdaginforesponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBlockDagInfoResponse)
}
void KaspadMessage::clear_getblockdaginforesponse() {
  if (_internal_has_getblockdaginforesponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getblockdaginforesponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_resolvefinalityconflictrequest(::protowire::ResolveFinalityConflictRequestMessage* resolvefinalityconflictrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (resolvefinalityconflictrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(resolvefinalityconflictrequest));
    if (message_arena != submessage_arena) {
      resolvefinalityconflictrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resolvefinalityconflictrequest, submessage_arena);
    }
    set_has_resolvefinalityconflictrequest();
    payload_.resolvefinalityconflictrequest_ = resolvefinalityconflictrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.resolveFinalityConflictRequest)
}
void KaspadMessage::clear_resolvefinalityconflictrequest() {
  if (_internal_has_resolvefinalityconflictrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.resolvefinalityconflictrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_resolvefinalityconflictresponse(::protowire::ResolveFinalityConflictResponseMessage* resolvefinalityconflictresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (resolvefinalityconflictresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(resolvefinalityconflictresponse));
    if (message_arena != submessage_arena) {
      resolvefinalityconflictresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resolvefinalityconflictresponse, submessage_arena);
    }
    set_has_resolvefinalityconflictresponse();
    payload_.resolvefinalityconflictresponse_ = resolvefinalityconflictresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.resolveFinalityConflictResponse)
}
void KaspadMessage::clear_resolvefinalityconflictresponse() {
  if (_internal_has_resolvefinalityconflictresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.resolvefinalityconflictresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyfinalityconflictsrequest(::protowire::NotifyFinalityConflictsRequestMessage* notifyfinalityconflictsrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyfinalityconflictsrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyfinalityconflictsrequest));
    if (message_arena != submessage_arena) {
      notifyfinalityconflictsrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyfinalityconflictsrequest, submessage_arena);
    }
    set_has_notifyfinalityconflictsrequest();
    payload_.notifyfinalityconflictsrequest_ = notifyfinalityconflictsrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyFinalityConflictsRequest)
}
void KaspadMessage::clear_notifyfinalityconflictsrequest() {
  if (_internal_has_notifyfinalityconflictsrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyfinalityconflictsrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyfinalityconflictsresponse(::protowire::NotifyFinalityConflictsResponseMessage* notifyfinalityconflictsresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyfinalityconflictsresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyfinalityconflictsresponse));
    if (message_arena != submessage_arena) {
      notifyfinalityconflictsresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyfinalityconflictsresponse, submessage_arena);
    }
    set_has_notifyfinalityconflictsresponse();
    payload_.notifyfinalityconflictsresponse_ = notifyfinalityconflictsresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyFinalityConflictsResponse)
}
void KaspadMessage::clear_notifyfinalityconflictsresponse() {
  if (_internal_has_notifyfinalityconflictsresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyfinalityconflictsresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_finalityconflictnotification(::protowire::FinalityConflictNotificationMessage* finalityconflictnotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (finalityconflictnotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(finalityconflictnotification));
    if (message_arena != submessage_arena) {
      finalityconflictnotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, finalityconflictnotification, submessage_arena);
    }
    set_has_finalityconflictnotification();
    payload_.finalityconflictnotification_ = finalityconflictnotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.finalityConflictNotification)
}
void KaspadMessage::clear_finalityconflictnotification() {
  if (_internal_has_finalityconflictnotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.finalityconflictnotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_finalityconflictresolvednotification(::protowire::FinalityConflictResolvedNotificationMessage* finalityconflictresolvednotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (finalityconflictresolvednotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(finalityconflictresolvednotification));
    if (message_arena != submessage_arena) {
      finalityconflictresolvednotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, finalityconflictresolvednotification, submessage_arena);
    }
    set_has_finalityconflictresolvednotification();
    payload_.finalityconflictresolvednotification_ = finalityconflictresolvednotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.finalityConflictResolvedNotification)
}
void KaspadMessage::clear_finalityconflictresolvednotification() {
  if (_internal_has_finalityconflictresolvednotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.finalityconflictresolvednotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getmempoolentriesrequest(::protowire::GetMempoolEntriesRequestMessage* getmempoolentriesrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getmempoolentriesrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getmempoolentriesrequest));
    if (message_arena != submessage_arena) {
      getmempoolentriesrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getmempoolentriesrequest, submessage_arena);
    }
    set_has_getmempoolentriesrequest();
    payload_.getmempoolentriesrequest_ = getmempoolentriesrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getMempoolEntriesRequest)
}
void KaspadMessage::clear_getmempoolentriesrequest() {
  if (_internal_has_getmempoolentriesrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getmempoolentriesrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getmempoolentriesresponse(::protowire::GetMempoolEntriesResponseMessage* getmempoolentriesresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getmempoolentriesresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getmempoolentriesresponse));
    if (message_arena != submessage_arena) {
      getmempoolentriesresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getmempoolentriesresponse, submessage_arena);
    }
    set_has_getmempoolentriesresponse();
    payload_.getmempoolentriesresponse_ = getmempoolentriesresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getMempoolEntriesResponse)
}
void KaspadMessage::clear_getmempoolentriesresponse() {
  if (_internal_has_getmempoolentriesresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getmempoolentriesresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_shutdownrequest(::protowire::ShutDownRequestMessage* shutdownrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (shutdownrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shutdownrequest));
    if (message_arena != submessage_arena) {
      shutdownrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shutdownrequest, submessage_arena);
    }
    set_has_shutdownrequest();
    payload_.shutdownrequest_ = shutdownrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.shutDownRequest)
}
void KaspadMessage::clear_shutdownrequest() {
  if (_internal_has_shutdownrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.shutdownrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_shutdownresponse(::protowire::ShutDownResponseMessage* shutdownresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (shutdownresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shutdownresponse));
    if (message_arena != submessage_arena) {
      shutdownresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shutdownresponse, submessage_arena);
    }
    set_has_shutdownresponse();
    payload_.shutdownresponse_ = shutdownresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.shutDownResponse)
}
void KaspadMessage::clear_shutdownresponse() {
  if (_internal_has_shutdownresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.shutdownresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getheadersrequest(::protowire::GetHeadersRequestMessage* getheadersrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getheadersrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getheadersrequest));
    if (message_arena != submessage_arena) {
      getheadersrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getheadersrequest, submessage_arena);
    }
    set_has_getheadersrequest();
    payload_.getheadersrequest_ = getheadersrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getHeadersRequest)
}
void KaspadMessage::clear_getheadersrequest() {
  if (_internal_has_getheadersrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getheadersrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getheadersresponse(::protowire::GetHeadersResponseMessage* getheadersresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getheadersresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getheadersresponse));
    if (message_arena != submessage_arena) {
      getheadersresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getheadersresponse, submessage_arena);
    }
    set_has_getheadersresponse();
    payload_.getheadersresponse_ = getheadersresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getHeadersResponse)
}
void KaspadMessage::clear_getheadersresponse() {
  if (_internal_has_getheadersresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getheadersresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyutxoschangedrequest(::protowire::NotifyUtxosChangedRequestMessage* notifyutxoschangedrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyutxoschangedrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyutxoschangedrequest));
    if (message_arena != submessage_arena) {
      notifyutxoschangedrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyutxoschangedrequest, submessage_arena);
    }
    set_has_notifyutxoschangedrequest();
    payload_.notifyutxoschangedrequest_ = notifyutxoschangedrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyUtxosChangedRequest)
}
void KaspadMessage::clear_notifyutxoschangedrequest() {
  if (_internal_has_notifyutxoschangedrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyutxoschangedrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyutxoschangedresponse(::protowire::NotifyUtxosChangedResponseMessage* notifyutxoschangedresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyutxoschangedresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyutxoschangedresponse));
    if (message_arena != submessage_arena) {
      notifyutxoschangedresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyutxoschangedresponse, submessage_arena);
    }
    set_has_notifyutxoschangedresponse();
    payload_.notifyutxoschangedresponse_ = notifyutxoschangedresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyUtxosChangedResponse)
}
void KaspadMessage::clear_notifyutxoschangedresponse() {
  if (_internal_has_notifyutxoschangedresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyutxoschangedresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_utxoschangednotification(::protowire::UtxosChangedNotificationMessage* utxoschangednotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (utxoschangednotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(utxoschangednotification));
    if (message_arena != submessage_arena) {
      utxoschangednotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, utxoschangednotification, submessage_arena);
    }
    set_has_utxoschangednotification();
    payload_.utxoschangednotification_ = utxoschangednotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.utxosChangedNotification)
}
void KaspadMessage::clear_utxoschangednotification() {
  if (_internal_has_utxoschangednotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.utxoschangednotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getutxosbyaddressesrequest(::protowire::GetUtxosByAddressesRequestMessage* getutxosbyaddressesrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getutxosbyaddressesrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getutxosbyaddressesrequest));
    if (message_arena != submessage_arena) {
      getutxosbyaddressesrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getutxosbyaddressesrequest, submessage_arena);
    }
    set_has_getutxosbyaddressesrequest();
    payload_.getutxosbyaddressesrequest_ = getutxosbyaddressesrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getUtxosByAddressesRequest)
}
void KaspadMessage::clear_getutxosbyaddressesrequest() {
  if (_internal_has_getutxosbyaddressesrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getutxosbyaddressesrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getutxosbyaddressesresponse(::protowire::GetUtxosByAddressesResponseMessage* getutxosbyaddressesresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getutxosbyaddressesresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getutxosbyaddressesresponse));
    if (message_arena != submessage_arena) {
      getutxosbyaddressesresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getutxosbyaddressesresponse, submessage_arena);
    }
    set_has_getutxosbyaddressesresponse();
    payload_.getutxosbyaddressesresponse_ = getutxosbyaddressesresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getUtxosByAddressesResponse)
}
void KaspadMessage::clear_getutxosbyaddressesresponse() {
  if (_internal_has_getutxosbyaddressesresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getutxosbyaddressesresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getvirtualselectedparentbluescorerequest(::protowire::GetVirtualSelectedParentBlueScoreRequestMessage* getvirtualselectedparentbluescorerequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getvirtualselectedparentbluescorerequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getvirtualselectedparentbluescorerequest));
    if (message_arena != submessage_arena) {
      getvirtualselectedparentbluescorerequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getvirtualselectedparentbluescorerequest, submessage_arena);
    }
    set_has_getvirtualselectedparentbluescorerequest();
    payload_.getvirtualselectedparentbluescorerequest_ = getvirtualselectedparentbluescorerequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getVirtualSelectedParentBlueScoreRequest)
}
void KaspadMessage::clear_getvirtualselectedparentbluescorerequest() {
  if (_internal_has_getvirtualselectedparentbluescorerequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getvirtualselectedparentbluescorerequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getvirtualselectedparentbluescoreresponse(::protowire::GetVirtualSelectedParentBlueScoreResponseMessage* getvirtualselectedparentbluescoreresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getvirtualselectedparentbluescoreresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getvirtualselectedparentbluescoreresponse));
    if (message_arena != submessage_arena) {
      getvirtualselectedparentbluescoreresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getvirtualselectedparentbluescoreresponse, submessage_arena);
    }
    set_has_getvirtualselectedparentbluescoreresponse();
    payload_.getvirtualselectedparentbluescoreresponse_ = getvirtualselectedparentbluescoreresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getVirtualSelectedParentBlueScoreResponse)
}
void KaspadMessage::clear_getvirtualselectedparentbluescoreresponse() {
  if (_internal_has_getvirtualselectedparentbluescoreresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getvirtualselectedparentbluescoreresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyvirtualselectedparentbluescorechangedrequest(::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage* notifyvirtualselectedparentbluescorechangedrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyvirtualselectedparentbluescorechangedrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyvirtualselectedparentbluescorechangedrequest));
    if (message_arena != submessage_arena) {
      notifyvirtualselectedparentbluescorechangedrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyvirtualselectedparentbluescorechangedrequest, submessage_arena);
    }
    set_has_notifyvirtualselectedparentbluescorechangedrequest();
    payload_.notifyvirtualselectedparentbluescorechangedrequest_ = notifyvirtualselectedparentbluescorechangedrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyVirtualSelectedParentBlueScoreChangedRequest)
}
void KaspadMessage::clear_notifyvirtualselectedparentbluescorechangedrequest() {
  if (_internal_has_notifyvirtualselectedparentbluescorechangedrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyvirtualselectedparentbluescorechangedrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyvirtualselectedparentbluescorechangedresponse(::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage* notifyvirtualselectedparentbluescorechangedresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyvirtualselectedparentbluescorechangedresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyvirtualselectedparentbluescorechangedresponse));
    if (message_arena != submessage_arena) {
      notifyvirtualselectedparentbluescorechangedresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyvirtualselectedparentbluescorechangedresponse, submessage_arena);
    }
    set_has_notifyvirtualselectedparentbluescorechangedresponse();
    payload_.notifyvirtualselectedparentbluescorechangedresponse_ = notifyvirtualselectedparentbluescorechangedresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyVirtualSelectedParentBlueScoreChangedResponse)
}
void KaspadMessage::clear_notifyvirtualselectedparentbluescorechangedresponse() {
  if (_internal_has_notifyvirtualselectedparentbluescorechangedresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyvirtualselectedparentbluescorechangedresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_virtualselectedparentbluescorechangednotification(::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage* virtualselectedparentbluescorechangednotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (virtualselectedparentbluescorechangednotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(virtualselectedparentbluescorechangednotification));
    if (message_arena != submessage_arena) {
      virtualselectedparentbluescorechangednotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, virtualselectedparentbluescorechangednotification, submessage_arena);
    }
    set_has_virtualselectedparentbluescorechangednotification();
    payload_.virtualselectedparentbluescorechangednotification_ = virtualselectedparentbluescorechangednotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.virtualSelectedParentBlueScoreChangedNotification)
}
void KaspadMessage::clear_virtualselectedparentbluescorechangednotification() {
  if (_internal_has_virtualselectedparentbluescorechangednotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.virtualselectedparentbluescorechangednotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_banrequest(::protowire::BanRequestMessage* banrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (banrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(banrequest));
    if (message_arena != submessage_arena) {
      banrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, banrequest, submessage_arena);
    }
    set_has_banrequest();
    payload_.banrequest_ = banrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.banRequest)
}
void KaspadMessage::clear_banrequest() {
  if (_internal_has_banrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.banrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_banresponse(::protowire::BanResponseMessage* banresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (banresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(banresponse));
    if (message_arena != submessage_arena) {
      banresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, banresponse, submessage_arena);
    }
    set_has_banresponse();
    payload_.banresponse_ = banresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.banResponse)
}
void KaspadMessage::clear_banresponse() {
  if (_internal_has_banresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.banresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_unbanrequest(::protowire::UnbanRequestMessage* unbanrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (unbanrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unbanrequest));
    if (message_arena != submessage_arena) {
      unbanrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unbanrequest, submessage_arena);
    }
    set_has_unbanrequest();
    payload_.unbanrequest_ = unbanrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.unbanRequest)
}
void KaspadMessage::clear_unbanrequest() {
  if (_internal_has_unbanrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.unbanrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_unbanresponse(::protowire::UnbanResponseMessage* unbanresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (unbanresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(unbanresponse));
    if (message_arena != submessage_arena) {
      unbanresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unbanresponse, submessage_arena);
    }
    set_has_unbanresponse();
    payload_.unbanresponse_ = unbanresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.unbanResponse)
}
void KaspadMessage::clear_unbanresponse() {
  if (_internal_has_unbanresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.unbanresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getinforequest(::protowire::GetInfoRequestMessage* getinforequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getinforequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getinforequest));
    if (message_arena != submessage_arena) {
      getinforequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getinforequest, submessage_arena);
    }
    set_has_getinforequest();
    payload_.getinforequest_ = getinforequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getInfoRequest)
}
void KaspadMessage::clear_getinforequest() {
  if (_internal_has_getinforequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getinforequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getinforesponse(::protowire::GetInfoResponseMessage* getinforesponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getinforesponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getinforesponse));
    if (message_arena != submessage_arena) {
      getinforesponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getinforesponse, submessage_arena);
    }
    set_has_getinforesponse();
    payload_.getinforesponse_ = getinforesponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getInfoResponse)
}
void KaspadMessage::clear_getinforesponse() {
  if (_internal_has_getinforesponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getinforesponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_stopnotifyingutxoschangedrequest(::protowire::StopNotifyingUtxosChangedRequestMessage* stopnotifyingutxoschangedrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (stopnotifyingutxoschangedrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stopnotifyingutxoschangedrequest));
    if (message_arena != submessage_arena) {
      stopnotifyingutxoschangedrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stopnotifyingutxoschangedrequest, submessage_arena);
    }
    set_has_stopnotifyingutxoschangedrequest();
    payload_.stopnotifyingutxoschangedrequest_ = stopnotifyingutxoschangedrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.stopNotifyingUtxosChangedRequest)
}
void KaspadMessage::clear_stopnotifyingutxoschangedrequest() {
  if (_internal_has_stopnotifyingutxoschangedrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.stopnotifyingutxoschangedrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_stopnotifyingutxoschangedresponse(::protowire::StopNotifyingUtxosChangedResponseMessage* stopnotifyingutxoschangedresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (stopnotifyingutxoschangedresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stopnotifyingutxoschangedresponse));
    if (message_arena != submessage_arena) {
      stopnotifyingutxoschangedresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stopnotifyingutxoschangedresponse, submessage_arena);
    }
    set_has_stopnotifyingutxoschangedresponse();
    payload_.stopnotifyingutxoschangedresponse_ = stopnotifyingutxoschangedresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.stopNotifyingUtxosChangedResponse)
}
void KaspadMessage::clear_stopnotifyingutxoschangedresponse() {
  if (_internal_has_stopnotifyingutxoschangedresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.stopnotifyingutxoschangedresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifypruningpointutxosetoverriderequest(::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage* notifypruningpointutxosetoverriderequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifypruningpointutxosetoverriderequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifypruningpointutxosetoverriderequest));
    if (message_arena != submessage_arena) {
      notifypruningpointutxosetoverriderequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifypruningpointutxosetoverriderequest, submessage_arena);
    }
    set_has_notifypruningpointutxosetoverriderequest();
    payload_.notifypruningpointutxosetoverriderequest_ = notifypruningpointutxosetoverriderequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyPruningPointUTXOSetOverrideRequest)
}
void KaspadMessage::clear_notifypruningpointutxosetoverriderequest() {
  if (_internal_has_notifypruningpointutxosetoverriderequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifypruningpointutxosetoverriderequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifypruningpointutxosetoverrideresponse(::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage* notifypruningpointutxosetoverrideresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifypruningpointutxosetoverrideresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifypruningpointutxosetoverrideresponse));
    if (message_arena != submessage_arena) {
      notifypruningpointutxosetoverrideresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifypruningpointutxosetoverrideresponse, submessage_arena);
    }
    set_has_notifypruningpointutxosetoverrideresponse();
    payload_.notifypruningpointutxosetoverrideresponse_ = notifypruningpointutxosetoverrideresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyPruningPointUTXOSetOverrideResponse)
}
void KaspadMessage::clear_notifypruningpointutxosetoverrideresponse() {
  if (_internal_has_notifypruningpointutxosetoverrideresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifypruningpointutxosetoverrideresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_pruningpointutxosetoverridenotification(::protowire::PruningPointUTXOSetOverrideNotificationMessage* pruningpointutxosetoverridenotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (pruningpointutxosetoverridenotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pruningpointutxosetoverridenotification));
    if (message_arena != submessage_arena) {
      pruningpointutxosetoverridenotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pruningpointutxosetoverridenotification, submessage_arena);
    }
    set_has_pruningpointutxosetoverridenotification();
    payload_.pruningpointutxosetoverridenotification_ = pruningpointutxosetoverridenotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.pruningPointUTXOSetOverrideNotification)
}
void KaspadMessage::clear_pruningpointutxosetoverridenotification() {
  if (_internal_has_pruningpointutxosetoverridenotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.pruningpointutxosetoverridenotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_stopnotifyingpruningpointutxosetoverriderequest(::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage* stopnotifyingpruningpointutxosetoverriderequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (stopnotifyingpruningpointutxosetoverriderequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stopnotifyingpruningpointutxosetoverriderequest));
    if (message_arena != submessage_arena) {
      stopnotifyingpruningpointutxosetoverriderequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stopnotifyingpruningpointutxosetoverriderequest, submessage_arena);
    }
    set_has_stopnotifyingpruningpointutxosetoverriderequest();
    payload_.stopnotifyingpruningpointutxosetoverriderequest_ = stopnotifyingpruningpointutxosetoverriderequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.stopNotifyingPruningPointUTXOSetOverrideRequest)
}
void KaspadMessage::clear_stopnotifyingpruningpointutxosetoverriderequest() {
  if (_internal_has_stopnotifyingpruningpointutxosetoverriderequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.stopnotifyingpruningpointutxosetoverriderequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_stopnotifyingpruningpointutxosetoverrideresponse(::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage* stopnotifyingpruningpointutxosetoverrideresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (stopnotifyingpruningpointutxosetoverrideresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stopnotifyingpruningpointutxosetoverrideresponse));
    if (message_arena != submessage_arena) {
      stopnotifyingpruningpointutxosetoverrideresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stopnotifyingpruningpointutxosetoverrideresponse, submessage_arena);
    }
    set_has_stopnotifyingpruningpointutxosetoverrideresponse();
    payload_.stopnotifyingpruningpointutxosetoverrideresponse_ = stopnotifyingpruningpointutxosetoverrideresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.stopNotifyingPruningPointUTXOSetOverrideResponse)
}
void KaspadMessage::clear_stopnotifyingpruningpointutxosetoverrideresponse() {
  if (_internal_has_stopnotifyingpruningpointutxosetoverrideresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.stopnotifyingpruningpointutxosetoverrideresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_estimatenetworkhashespersecondrequest(::protowire::EstimateNetworkHashesPerSecondRequestMessage* estimatenetworkhashespersecondrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (estimatenetworkhashespersecondrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(estimatenetworkhashespersecondrequest));
    if (message_arena != submessage_arena) {
      estimatenetworkhashespersecondrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, estimatenetworkhashespersecondrequest, submessage_arena);
    }
    set_has_estimatenetworkhashespersecondrequest();
    payload_.estimatenetworkhashespersecondrequest_ = estimatenetworkhashespersecondrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.estimateNetworkHashesPerSecondRequest)
}
void KaspadMessage::clear_estimatenetworkhashespersecondrequest() {
  if (_internal_has_estimatenetworkhashespersecondrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.estimatenetworkhashespersecondrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_estimatenetworkhashespersecondresponse(::protowire::EstimateNetworkHashesPerSecondResponseMessage* estimatenetworkhashespersecondresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (estimatenetworkhashespersecondresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(estimatenetworkhashespersecondresponse));
    if (message_arena != submessage_arena) {
      estimatenetworkhashespersecondresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, estimatenetworkhashespersecondresponse, submessage_arena);
    }
    set_has_estimatenetworkhashespersecondresponse();
    payload_.estimatenetworkhashespersecondresponse_ = estimatenetworkhashespersecondresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.estimateNetworkHashesPerSecondResponse)
}
void KaspadMessage::clear_estimatenetworkhashespersecondresponse() {
  if (_internal_has_estimatenetworkhashespersecondresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.estimatenetworkhashespersecondresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyvirtualdaascorechangedrequest(::protowire::NotifyVirtualDaaScoreChangedRequestMessage* notifyvirtualdaascorechangedrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyvirtualdaascorechangedrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyvirtualdaascorechangedrequest));
    if (message_arena != submessage_arena) {
      notifyvirtualdaascorechangedrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyvirtualdaascorechangedrequest, submessage_arena);
    }
    set_has_notifyvirtualdaascorechangedrequest();
    payload_.notifyvirtualdaascorechangedrequest_ = notifyvirtualdaascorechangedrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyVirtualDaaScoreChangedRequest)
}
void KaspadMessage::clear_notifyvirtualdaascorechangedrequest() {
  if (_internal_has_notifyvirtualdaascorechangedrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyvirtualdaascorechangedrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifyvirtualdaascorechangedresponse(::protowire::NotifyVirtualDaaScoreChangedResponseMessage* notifyvirtualdaascorechangedresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifyvirtualdaascorechangedresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifyvirtualdaascorechangedresponse));
    if (message_arena != submessage_arena) {
      notifyvirtualdaascorechangedresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifyvirtualdaascorechangedresponse, submessage_arena);
    }
    set_has_notifyvirtualdaascorechangedresponse();
    payload_.notifyvirtualdaascorechangedresponse_ = notifyvirtualdaascorechangedresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyVirtualDaaScoreChangedResponse)
}
void KaspadMessage::clear_notifyvirtualdaascorechangedresponse() {
  if (_internal_has_notifyvirtualdaascorechangedresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifyvirtualdaascorechangedresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_virtualdaascorechangednotification(::protowire::VirtualDaaScoreChangedNotificationMessage* virtualdaascorechangednotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (virtualdaascorechangednotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(virtualdaascorechangednotification));
    if (message_arena != submessage_arena) {
      virtualdaascorechangednotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, virtualdaascorechangednotification, submessage_arena);
    }
    set_has_virtualdaascorechangednotification();
    payload_.virtualdaascorechangednotification_ = virtualdaascorechangednotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.virtualDaaScoreChangedNotification)
}
void KaspadMessage::clear_virtualdaascorechangednotification() {
  if (_internal_has_virtualdaascorechangednotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.virtualdaascorechangednotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getbalancebyaddressrequest(::protowire::GetBalanceByAddressRequestMessage* getbalancebyaddressrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getbalancebyaddressrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getbalancebyaddressrequest));
    if (message_arena != submessage_arena) {
      getbalancebyaddressrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getbalancebyaddressrequest, submessage_arena);
    }
    set_has_getbalancebyaddressrequest();
    payload_.getbalancebyaddressrequest_ = getbalancebyaddressrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBalanceByAddressRequest)
}
void KaspadMessage::clear_getbalancebyaddressrequest() {
  if (_internal_has_getbalancebyaddressrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getbalancebyaddressrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getbalancebyaddressresponse(::protowire::GetBalanceByAddressResponseMessage* getbalancebyaddressresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getbalancebyaddressresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getbalancebyaddressresponse));
    if (message_arena != submessage_arena) {
      getbalancebyaddressresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getbalancebyaddressresponse, submessage_arena);
    }
    set_has_getbalancebyaddressresponse();
    payload_.getbalancebyaddressresponse_ = getbalancebyaddressresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBalanceByAddressResponse)
}
void KaspadMessage::clear_getbalancebyaddressresponse() {
  if (_internal_has_getbalancebyaddressresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getbalancebyaddressresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getbalancesbyaddressesrequest(::protowire::GetBalancesByAddressesRequestMessage* getbalancesbyaddressesrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getbalancesbyaddressesrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getbalancesbyaddressesrequest));
    if (message_arena != submessage_arena) {
      getbalancesbyaddressesrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getbalancesbyaddressesrequest, submessage_arena);
    }
    set_has_getbalancesbyaddressesrequest();
    payload_.getbalancesbyaddressesrequest_ = getbalancesbyaddressesrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBalancesByAddressesRequest)
}
void KaspadMessage::clear_getbalancesbyaddressesrequest() {
  if (_internal_has_getbalancesbyaddressesrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getbalancesbyaddressesrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getbalancesbyaddressesresponse(::protowire::GetBalancesByAddressesResponseMessage* getbalancesbyaddressesresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getbalancesbyaddressesresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getbalancesbyaddressesresponse));
    if (message_arena != submessage_arena) {
      getbalancesbyaddressesresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getbalancesbyaddressesresponse, submessage_arena);
    }
    set_has_getbalancesbyaddressesresponse();
    payload_.getbalancesbyaddressesresponse_ = getbalancesbyaddressesresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getBalancesByAddressesResponse)
}
void KaspadMessage::clear_getbalancesbyaddressesresponse() {
  if (_internal_has_getbalancesbyaddressesresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getbalancesbyaddressesresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifynewblocktemplaterequest(::protowire::NotifyNewBlockTemplateRequestMessage* notifynewblocktemplaterequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifynewblocktemplaterequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifynewblocktemplaterequest));
    if (message_arena != submessage_arena) {
      notifynewblocktemplaterequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifynewblocktemplaterequest, submessage_arena);
    }
    set_has_notifynewblocktemplaterequest();
    payload_.notifynewblocktemplaterequest_ = notifynewblocktemplaterequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyNewBlockTemplateRequest)
}
void KaspadMessage::clear_notifynewblocktemplaterequest() {
  if (_internal_has_notifynewblocktemplaterequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifynewblocktemplaterequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_notifynewblocktemplateresponse(::protowire::NotifyNewBlockTemplateResponseMessage* notifynewblocktemplateresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (notifynewblocktemplateresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notifynewblocktemplateresponse));
    if (message_arena != submessage_arena) {
      notifynewblocktemplateresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notifynewblocktemplateresponse, submessage_arena);
    }
    set_has_notifynewblocktemplateresponse();
    payload_.notifynewblocktemplateresponse_ = notifynewblocktemplateresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.notifyNewBlockTemplateResponse)
}
void KaspadMessage::clear_notifynewblocktemplateresponse() {
  if (_internal_has_notifynewblocktemplateresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.notifynewblocktemplateresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_newblocktemplatenotification(::protowire::NewBlockTemplateNotificationMessage* newblocktemplatenotification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (newblocktemplatenotification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newblocktemplatenotification));
    if (message_arena != submessage_arena) {
      newblocktemplatenotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newblocktemplatenotification, submessage_arena);
    }
    set_has_newblocktemplatenotification();
    payload_.newblocktemplatenotification_ = newblocktemplatenotification;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.newBlockTemplateNotification)
}
void KaspadMessage::clear_newblocktemplatenotification() {
  if (_internal_has_newblocktemplatenotification()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.newblocktemplatenotification_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getmempoolentriesbyaddressesrequest(::protowire::GetMempoolEntriesByAddressesRequestMessage* getmempoolentriesbyaddressesrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getmempoolentriesbyaddressesrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getmempoolentriesbyaddressesrequest));
    if (message_arena != submessage_arena) {
      getmempoolentriesbyaddressesrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getmempoolentriesbyaddressesrequest, submessage_arena);
    }
    set_has_getmempoolentriesbyaddressesrequest();
    payload_.getmempoolentriesbyaddressesrequest_ = getmempoolentriesbyaddressesrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getMempoolEntriesByAddressesRequest)
}
void KaspadMessage::clear_getmempoolentriesbyaddressesrequest() {
  if (_internal_has_getmempoolentriesbyaddressesrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getmempoolentriesbyaddressesrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getmempoolentriesbyaddressesresponse(::protowire::GetMempoolEntriesByAddressesResponseMessage* getmempoolentriesbyaddressesresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getmempoolentriesbyaddressesresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getmempoolentriesbyaddressesresponse));
    if (message_arena != submessage_arena) {
      getmempoolentriesbyaddressesresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getmempoolentriesbyaddressesresponse, submessage_arena);
    }
    set_has_getmempoolentriesbyaddressesresponse();
    payload_.getmempoolentriesbyaddressesresponse_ = getmempoolentriesbyaddressesresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getMempoolEntriesByAddressesResponse)
}
void KaspadMessage::clear_getmempoolentriesbyaddressesresponse() {
  if (_internal_has_getmempoolentriesbyaddressesresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getmempoolentriesbyaddressesresponse_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getcoinsupplyrequest(::protowire::GetCoinSupplyRequestMessage* getcoinsupplyrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getcoinsupplyrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getcoinsupplyrequest));
    if (message_arena != submessage_arena) {
      getcoinsupplyrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getcoinsupplyrequest, submessage_arena);
    }
    set_has_getcoinsupplyrequest();
    payload_.getcoinsupplyrequest_ = getcoinsupplyrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getCoinSupplyRequest)
}
void KaspadMessage::clear_getcoinsupplyrequest() {
  if (_internal_has_getcoinsupplyrequest()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getcoinsupplyrequest_;
    }
    clear_has_payload();
  }
}
void KaspadMessage::set_allocated_getcoinsupplyresponse(::protowire::GetCoinSupplyResponseMessage* getcoinsupplyresponse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (getcoinsupplyresponse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(getcoinsupplyresponse));
    if (message_arena != submessage_arena) {
      getcoinsupplyresponse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getcoinsupplyresponse, submessage_arena);
    }
    set_has_getcoinsupplyresponse();
    payload_.getcoinsupplyresponse_ = getcoinsupplyresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:protowire.KaspadMessage.getCoinSupplyResponse)
}
void KaspadMessage::clear_getcoinsupplyresponse() {
  if (_internal_has_getcoinsupplyresponse()) {
    if (GetArenaForAllocation() == nullptr) {
      delete payload_.getcoinsupplyresponse_;
    }
    clear_has_payload();
  }
}
KaspadMessage::KaspadMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.KaspadMessage)
}
KaspadMessage::KaspadMessage(const KaspadMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kAddresses: {
      _internal_mutable_addresses()->::protowire::AddressesMessage::MergeFrom(from._internal_addresses());
      break;
    }
    case kBlock: {
      _internal_mutable_block()->::protowire::BlockMessage::MergeFrom(from._internal_block());
      break;
    }
    case kTransaction: {
      _internal_mutable_transaction()->::protowire::TransactionMessage::MergeFrom(from._internal_transaction());
      break;
    }
    case kBlockLocator: {
      _internal_mutable_blocklocator()->::protowire::BlockLocatorMessage::MergeFrom(from._internal_blocklocator());
      break;
    }
    case kRequestAddresses: {
      _internal_mutable_requestaddresses()->::protowire::RequestAddressesMessage::MergeFrom(from._internal_requestaddresses());
      break;
    }
    case kRequestRelayBlocks: {
      _internal_mutable_requestrelayblocks()->::protowire::RequestRelayBlocksMessage::MergeFrom(from._internal_requestrelayblocks());
      break;
    }
    case kRequestTransactions: {
      _internal_mutable_requesttransactions()->::protowire::RequestTransactionsMessage::MergeFrom(from._internal_requesttransactions());
      break;
    }
    case kIbdBlock: {
      _internal_mutable_ibdblock()->::protowire::BlockMessage::MergeFrom(from._internal_ibdblock());
      break;
    }
    case kInvRelayBlock: {
      _internal_mutable_invrelayblock()->::protowire::InvRelayBlockMessage::MergeFrom(from._internal_invrelayblock());
      break;
    }
    case kInvTransactions: {
      _internal_mutable_invtransactions()->::protowire::InvTransactionsMessage::MergeFrom(from._internal_invtransactions());
      break;
    }
    case kPing: {
      _internal_mutable_ping()->::protowire::PingMessage::MergeFrom(from._internal_ping());
      break;
    }
    case kPong: {
      _internal_mutable_pong()->::protowire::PongMessage::MergeFrom(from._internal_pong());
      break;
    }
    case kVerack: {
      _internal_mutable_verack()->::protowire::VerackMessage::MergeFrom(from._internal_verack());
      break;
    }
    case kVersion: {
      _internal_mutable_version()->::protowire::VersionMessage::MergeFrom(from._internal_version());
      break;
    }
    case kTransactionNotFound: {
      _internal_mutable_transactionnotfound()->::protowire::TransactionNotFoundMessage::MergeFrom(from._internal_transactionnotfound());
      break;
    }
    case kReject: {
      _internal_mutable_reject()->::protowire::RejectMessage::MergeFrom(from._internal_reject());
      break;
    }
    case kPruningPointUtxoSetChunk: {
      _internal_mutable_pruningpointutxosetchunk()->::protowire::PruningPointUtxoSetChunkMessage::MergeFrom(from._internal_pruningpointutxosetchunk());
      break;
    }
    case kRequestIBDBlocks: {
      _internal_mutable_requestibdblocks()->::protowire::RequestIBDBlocksMessage::MergeFrom(from._internal_requestibdblocks());
      break;
    }
    case kUnexpectedPruningPoint: {
      _internal_mutable_unexpectedpruningpoint()->::protowire::UnexpectedPruningPointMessage::MergeFrom(from._internal_unexpectedpruningpoint());
      break;
    }
    case kIbdBlockLocator: {
      _internal_mutable_ibdblocklocator()->::protowire::IbdBlockLocatorMessage::MergeFrom(from._internal_ibdblocklocator());
      break;
    }
    case kIbdBlockLocatorHighestHash: {
      _internal_mutable_ibdblocklocatorhighesthash()->::protowire::IbdBlockLocatorHighestHashMessage::MergeFrom(from._internal_ibdblocklocatorhighesthash());
      break;
    }
    case kRequestNextPruningPointUtxoSetChunk: {
      _internal_mutable_requestnextpruningpointutxosetchunk()->::protowire::RequestNextPruningPointUtxoSetChunkMessage::MergeFrom(from._internal_requestnextpruningpointutxosetchunk());
      break;
    }
    case kDonePruningPointUtxoSetChunks: {
      _internal_mutable_donepruningpointutxosetchunks()->::protowire::DonePruningPointUtxoSetChunksMessage::MergeFrom(from._internal_donepruningpointutxosetchunks());
      break;
    }
    case kIbdBlockLocatorHighestHashNotFound: {
      _internal_mutable_ibdblocklocatorhighesthashnotfound()->::protowire::IbdBlockLocatorHighestHashNotFoundMessage::MergeFrom(from._internal_ibdblocklocatorhighesthashnotfound());
      break;
    }
    case kBlockWithTrustedData: {
      _internal_mutable_blockwithtrusteddata()->::protowire::BlockWithTrustedDataMessage::MergeFrom(from._internal_blockwithtrusteddata());
      break;
    }
    case kDoneBlocksWithTrustedData: {
      _internal_mutable_doneblockswithtrusteddata()->::protowire::DoneBlocksWithTrustedDataMessage::MergeFrom(from._internal_doneblockswithtrusteddata());
      break;
    }
    case kRequestPruningPointAndItsAnticone: {
      _internal_mutable_requestpruningpointanditsanticone()->::protowire::RequestPruningPointAndItsAnticoneMessage::MergeFrom(from._internal_requestpruningpointanditsanticone());
      break;
    }
    case kBlockHeaders: {
      _internal_mutable_blockheaders()->::protowire::BlockHeadersMessage::MergeFrom(from._internal_blockheaders());
      break;
    }
    case kRequestNextHeaders: {
      _internal_mutable_requestnextheaders()->::protowire::RequestNextHeadersMessage::MergeFrom(from._internal_requestnextheaders());
      break;
    }
    case kDoneHeaders: {
      _internal_mutable_doneheaders()->::protowire::DoneHeadersMessage::MergeFrom(from._internal_doneheaders());
      break;
    }
    case kRequestPruningPointUTXOSet: {
      _internal_mutable_requestpruningpointutxoset()->::protowire::RequestPruningPointUTXOSetMessage::MergeFrom(from._internal_requestpruningpointutxoset());
      break;
    }
    case kRequestHeaders: {
      _internal_mutable_requestheaders()->::protowire::RequestHeadersMessage::MergeFrom(from._internal_requestheaders());
      break;
    }
    case kRequestBlockLocator: {
      _internal_mutable_requestblocklocator()->::protowire::RequestBlockLocatorMessage::MergeFrom(from._internal_requestblocklocator());
      break;
    }
    case kPruningPoints: {
      _internal_mutable_pruningpoints()->::protowire::PruningPointsMessage::MergeFrom(from._internal_pruningpoints());
      break;
    }
    case kRequestPruningPointProof: {
      _internal_mutable_requestpruningpointproof()->::protowire::RequestPruningPointProofMessage::MergeFrom(from._internal_requestpruningpointproof());
      break;
    }
    case kPruningPointProof: {
      _internal_mutable_pruningpointproof()->::protowire::PruningPointProofMessage::MergeFrom(from._internal_pruningpointproof());
      break;
    }
    case kReady: {
      _internal_mutable_ready()->::protowire::ReadyMessage::MergeFrom(from._internal_ready());
      break;
    }
    case kBlockWithTrustedDataV4: {
      _internal_mutable_blockwithtrusteddatav4()->::protowire::BlockWithTrustedDataV4Message::MergeFrom(from._internal_blockwithtrusteddatav4());
      break;
    }
    case kTrustedData: {
      _internal_mutable_trusteddata()->::protowire::TrustedDataMessage::MergeFrom(from._internal_trusteddata());
      break;
    }
    case kRequestIBDChainBlockLocator: {
      _internal_mutable_requestibdchainblocklocator()->::protowire::RequestIBDChainBlockLocatorMessage::MergeFrom(from._internal_requestibdchainblocklocator());
      break;
    }
    case kIbdChainBlockLocator: {
      _internal_mutable_ibdchainblocklocator()->::protowire::IbdChainBlockLocatorMessage::MergeFrom(from._internal_ibdchainblocklocator());
      break;
    }
    case kRequestAnticone: {
      _internal_mutable_requestanticone()->::protowire::RequestAnticoneMessage::MergeFrom(from._internal_requestanticone());
      break;
    }
    case kRequestNextPruningPointAndItsAnticoneBlocks: {
      _internal_mutable_requestnextpruningpointanditsanticoneblocks()->::protowire::RequestNextPruningPointAndItsAnticoneBlocksMessage::MergeFrom(from._internal_requestnextpruningpointanditsanticoneblocks());
      break;
    }
    case kGetCurrentNetworkRequest: {
      _internal_mutable_getcurrentnetworkrequest()->::protowire::GetCurrentNetworkRequestMessage::MergeFrom(from._internal_getcurrentnetworkrequest());
      break;
    }
    case kGetCurrentNetworkResponse: {
      _internal_mutable_getcurrentnetworkresponse()->::protowire::GetCurrentNetworkResponseMessage::MergeFrom(from._internal_getcurrentnetworkresponse());
      break;
    }
    case kSubmitBlockRequest: {
      _internal_mutable_submitblockrequest()->::protowire::SubmitBlockRequestMessage::MergeFrom(from._internal_submitblockrequest());
      break;
    }
    case kSubmitBlockResponse: {
      _internal_mutable_submitblockresponse()->::protowire::SubmitBlockResponseMessage::MergeFrom(from._internal_submitblockresponse());
      break;
    }
    case kGetBlockTemplateRequest: {
      _internal_mutable_getblocktemplaterequest()->::protowire::GetBlockTemplateRequestMessage::MergeFrom(from._internal_getblocktemplaterequest());
      break;
    }
    case kGetBlockTemplateResponse: {
      _internal_mutable_getblocktemplateresponse()->::protowire::GetBlockTemplateResponseMessage::MergeFrom(from._internal_getblocktemplateresponse());
      break;
    }
    case kNotifyBlockAddedRequest: {
      _internal_mutable_notifyblockaddedrequest()->::protowire::NotifyBlockAddedRequestMessage::MergeFrom(from._internal_notifyblockaddedrequest());
      break;
    }
    case kNotifyBlockAddedResponse: {
      _internal_mutable_notifyblockaddedresponse()->::protowire::NotifyBlockAddedResponseMessage::MergeFrom(from._internal_notifyblockaddedresponse());
      break;
    }
    case kBlockAddedNotification: {
      _internal_mutable_blockaddednotification()->::protowire::BlockAddedNotificationMessage::MergeFrom(from._internal_blockaddednotification());
      break;
    }
    case kGetPeerAddressesRequest: {
      _internal_mutable_getpeeraddressesrequest()->::protowire::GetPeerAddressesRequestMessage::MergeFrom(from._internal_getpeeraddressesrequest());
      break;
    }
    case kGetPeerAddressesResponse: {
      _internal_mutable_getpeeraddressesresponse()->::protowire::GetPeerAddressesResponseMessage::MergeFrom(from._internal_getpeeraddressesresponse());
      break;
    }
    case kGetSelectedTipHashRequest: {
      _internal_mutable_getselectedtiphashrequest()->::protowire::GetSelectedTipHashRequestMessage::MergeFrom(from._internal_getselectedtiphashrequest());
      break;
    }
    case kGetSelectedTipHashResponse: {
      _internal_mutable_getselectedtiphashresponse()->::protowire::GetSelectedTipHashResponseMessage::MergeFrom(from._internal_getselectedtiphashresponse());
      break;
    }
    case kGetMempoolEntryRequest: {
      _internal_mutable_getmempoolentryrequest()->::protowire::GetMempoolEntryRequestMessage::MergeFrom(from._internal_getmempoolentryrequest());
      break;
    }
    case kGetMempoolEntryResponse: {
      _internal_mutable_getmempoolentryresponse()->::protowire::GetMempoolEntryResponseMessage::MergeFrom(from._internal_getmempoolentryresponse());
      break;
    }
    case kGetConnectedPeerInfoRequest: {
      _internal_mutable_getconnectedpeerinforequest()->::protowire::GetConnectedPeerInfoRequestMessage::MergeFrom(from._internal_getconnectedpeerinforequest());
      break;
    }
    case kGetConnectedPeerInfoResponse: {
      _internal_mutable_getconnectedpeerinforesponse()->::protowire::GetConnectedPeerInfoResponseMessage::MergeFrom(from._internal_getconnectedpeerinforesponse());
      break;
    }
    case kAddPeerRequest: {
      _internal_mutable_addpeerrequest()->::protowire::AddPeerRequestMessage::MergeFrom(from._internal_addpeerrequest());
      break;
    }
    case kAddPeerResponse: {
      _internal_mutable_addpeerresponse()->::protowire::AddPeerResponseMessage::MergeFrom(from._internal_addpeerresponse());
      break;
    }
    case kSubmitTransactionRequest: {
      _internal_mutable_submittransactionrequest()->::protowire::SubmitTransactionRequestMessage::MergeFrom(from._internal_submittransactionrequest());
      break;
    }
    case kSubmitTransactionResponse: {
      _internal_mutable_submittransactionresponse()->::protowire::SubmitTransactionResponseMessage::MergeFrom(from._internal_submittransactionresponse());
      break;
    }
    case kNotifyVirtualSelectedParentChainChangedRequest: {
      _internal_mutable_notifyvirtualselectedparentchainchangedrequest()->::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage::MergeFrom(from._internal_notifyvirtualselectedparentchainchangedrequest());
      break;
    }
    case kNotifyVirtualSelectedParentChainChangedResponse: {
      _internal_mutable_notifyvirtualselectedparentchainchangedresponse()->::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage::MergeFrom(from._internal_notifyvirtualselectedparentchainchangedresponse());
      break;
    }
    case kVirtualSelectedParentChainChangedNotification: {
      _internal_mutable_virtualselectedparentchainchangednotification()->::protowire::VirtualSelectedParentChainChangedNotificationMessage::MergeFrom(from._internal_virtualselectedparentchainchangednotification());
      break;
    }
    case kGetBlockRequest: {
      _internal_mutable_getblockrequest()->::protowire::GetBlockRequestMessage::MergeFrom(from._internal_getblockrequest());
      break;
    }
    case kGetBlockResponse: {
      _internal_mutable_getblockresponse()->::protowire::GetBlockResponseMessage::MergeFrom(from._internal_getblockresponse());
      break;
    }
    case kGetSubnetworkRequest: {
      _internal_mutable_getsubnetworkrequest()->::protowire::GetSubnetworkRequestMessage::MergeFrom(from._internal_getsubnetworkrequest());
      break;
    }
    case kGetSubnetworkResponse: {
      _internal_mutable_getsubnetworkresponse()->::protowire::GetSubnetworkResponseMessage::MergeFrom(from._internal_getsubnetworkresponse());
      break;
    }
    case kGetVirtualSelectedParentChainFromBlockRequest: {
      _internal_mutable_getvirtualselectedparentchainfromblockrequest()->::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage::MergeFrom(from._internal_getvirtualselectedparentchainfromblockrequest());
      break;
    }
    case kGetVirtualSelectedParentChainFromBlockResponse: {
      _internal_mutable_getvirtualselectedparentchainfromblockresponse()->::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage::MergeFrom(from._internal_getvirtualselectedparentchainfromblockresponse());
      break;
    }
    case kGetBlocksRequest: {
      _internal_mutable_getblocksrequest()->::protowire::GetBlocksRequestMessage::MergeFrom(from._internal_getblocksrequest());
      break;
    }
    case kGetBlocksResponse: {
      _internal_mutable_getblocksresponse()->::protowire::GetBlocksResponseMessage::MergeFrom(from._internal_getblocksresponse());
      break;
    }
    case kGetBlockCountRequest: {
      _internal_mutable_getblockcountrequest()->::protowire::GetBlockCountRequestMessage::MergeFrom(from._internal_getblockcountrequest());
      break;
    }
    case kGetBlockCountResponse: {
      _internal_mutable_getblockcountresponse()->::protowire::GetBlockCountResponseMessage::MergeFrom(from._internal_getblockcountresponse());
      break;
    }
    case kGetBlockDagInfoRequest: {
      _internal_mutable_getblockdaginforequest()->::protowire::GetBlockDagInfoRequestMessage::MergeFrom(from._internal_getblockdaginforequest());
      break;
    }
    case kGetBlockDagInfoResponse: {
      _internal_mutable_getblockdaginforesponse()->::protowire::GetBlockDagInfoResponseMessage::MergeFrom(from._internal_getblockdaginforesponse());
      break;
    }
    case kResolveFinalityConflictRequest: {
      _internal_mutable_resolvefinalityconflictrequest()->::protowire::ResolveFinalityConflictRequestMessage::MergeFrom(from._internal_resolvefinalityconflictrequest());
      break;
    }
    case kResolveFinalityConflictResponse: {
      _internal_mutable_resolvefinalityconflictresponse()->::protowire::ResolveFinalityConflictResponseMessage::MergeFrom(from._internal_resolvefinalityconflictresponse());
      break;
    }
    case kNotifyFinalityConflictsRequest: {
      _internal_mutable_notifyfinalityconflictsrequest()->::protowire::NotifyFinalityConflictsRequestMessage::MergeFrom(from._internal_notifyfinalityconflictsrequest());
      break;
    }
    case kNotifyFinalityConflictsResponse: {
      _internal_mutable_notifyfinalityconflictsresponse()->::protowire::NotifyFinalityConflictsResponseMessage::MergeFrom(from._internal_notifyfinalityconflictsresponse());
      break;
    }
    case kFinalityConflictNotification: {
      _internal_mutable_finalityconflictnotification()->::protowire::FinalityConflictNotificationMessage::MergeFrom(from._internal_finalityconflictnotification());
      break;
    }
    case kFinalityConflictResolvedNotification: {
      _internal_mutable_finalityconflictresolvednotification()->::protowire::FinalityConflictResolvedNotificationMessage::MergeFrom(from._internal_finalityconflictresolvednotification());
      break;
    }
    case kGetMempoolEntriesRequest: {
      _internal_mutable_getmempoolentriesrequest()->::protowire::GetMempoolEntriesRequestMessage::MergeFrom(from._internal_getmempoolentriesrequest());
      break;
    }
    case kGetMempoolEntriesResponse: {
      _internal_mutable_getmempoolentriesresponse()->::protowire::GetMempoolEntriesResponseMessage::MergeFrom(from._internal_getmempoolentriesresponse());
      break;
    }
    case kShutDownRequest: {
      _internal_mutable_shutdownrequest()->::protowire::ShutDownRequestMessage::MergeFrom(from._internal_shutdownrequest());
      break;
    }
    case kShutDownResponse: {
      _internal_mutable_shutdownresponse()->::protowire::ShutDownResponseMessage::MergeFrom(from._internal_shutdownresponse());
      break;
    }
    case kGetHeadersRequest: {
      _internal_mutable_getheadersrequest()->::protowire::GetHeadersRequestMessage::MergeFrom(from._internal_getheadersrequest());
      break;
    }
    case kGetHeadersResponse: {
      _internal_mutable_getheadersresponse()->::protowire::GetHeadersResponseMessage::MergeFrom(from._internal_getheadersresponse());
      break;
    }
    case kNotifyUtxosChangedRequest: {
      _internal_mutable_notifyutxoschangedrequest()->::protowire::NotifyUtxosChangedRequestMessage::MergeFrom(from._internal_notifyutxoschangedrequest());
      break;
    }
    case kNotifyUtxosChangedResponse: {
      _internal_mutable_notifyutxoschangedresponse()->::protowire::NotifyUtxosChangedResponseMessage::MergeFrom(from._internal_notifyutxoschangedresponse());
      break;
    }
    case kUtxosChangedNotification: {
      _internal_mutable_utxoschangednotification()->::protowire::UtxosChangedNotificationMessage::MergeFrom(from._internal_utxoschangednotification());
      break;
    }
    case kGetUtxosByAddressesRequest: {
      _internal_mutable_getutxosbyaddressesrequest()->::protowire::GetUtxosByAddressesRequestMessage::MergeFrom(from._internal_getutxosbyaddressesrequest());
      break;
    }
    case kGetUtxosByAddressesResponse: {
      _internal_mutable_getutxosbyaddressesresponse()->::protowire::GetUtxosByAddressesResponseMessage::MergeFrom(from._internal_getutxosbyaddressesresponse());
      break;
    }
    case kGetVirtualSelectedParentBlueScoreRequest: {
      _internal_mutable_getvirtualselectedparentbluescorerequest()->::protowire::GetVirtualSelectedParentBlueScoreRequestMessage::MergeFrom(from._internal_getvirtualselectedparentbluescorerequest());
      break;
    }
    case kGetVirtualSelectedParentBlueScoreResponse: {
      _internal_mutable_getvirtualselectedparentbluescoreresponse()->::protowire::GetVirtualSelectedParentBlueScoreResponseMessage::MergeFrom(from._internal_getvirtualselectedparentbluescoreresponse());
      break;
    }
    case kNotifyVirtualSelectedParentBlueScoreChangedRequest: {
      _internal_mutable_notifyvirtualselectedparentbluescorechangedrequest()->::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::MergeFrom(from._internal_notifyvirtualselectedparentbluescorechangedrequest());
      break;
    }
    case kNotifyVirtualSelectedParentBlueScoreChangedResponse: {
      _internal_mutable_notifyvirtualselectedparentbluescorechangedresponse()->::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::MergeFrom(from._internal_notifyvirtualselectedparentbluescorechangedresponse());
      break;
    }
    case kVirtualSelectedParentBlueScoreChangedNotification: {
      _internal_mutable_virtualselectedparentbluescorechangednotification()->::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage::MergeFrom(from._internal_virtualselectedparentbluescorechangednotification());
      break;
    }
    case kBanRequest: {
      _internal_mutable_banrequest()->::protowire::BanRequestMessage::MergeFrom(from._internal_banrequest());
      break;
    }
    case kBanResponse: {
      _internal_mutable_banresponse()->::protowire::BanResponseMessage::MergeFrom(from._internal_banresponse());
      break;
    }
    case kUnbanRequest: {
      _internal_mutable_unbanrequest()->::protowire::UnbanRequestMessage::MergeFrom(from._internal_unbanrequest());
      break;
    }
    case kUnbanResponse: {
      _internal_mutable_unbanresponse()->::protowire::UnbanResponseMessage::MergeFrom(from._internal_unbanresponse());
      break;
    }
    case kGetInfoRequest: {
      _internal_mutable_getinforequest()->::protowire::GetInfoRequestMessage::MergeFrom(from._internal_getinforequest());
      break;
    }
    case kGetInfoResponse: {
      _internal_mutable_getinforesponse()->::protowire::GetInfoResponseMessage::MergeFrom(from._internal_getinforesponse());
      break;
    }
    case kStopNotifyingUtxosChangedRequest: {
      _internal_mutable_stopnotifyingutxoschangedrequest()->::protowire::StopNotifyingUtxosChangedRequestMessage::MergeFrom(from._internal_stopnotifyingutxoschangedrequest());
      break;
    }
    case kStopNotifyingUtxosChangedResponse: {
      _internal_mutable_stopnotifyingutxoschangedresponse()->::protowire::StopNotifyingUtxosChangedResponseMessage::MergeFrom(from._internal_stopnotifyingutxoschangedresponse());
      break;
    }
    case kNotifyPruningPointUTXOSetOverrideRequest: {
      _internal_mutable_notifypruningpointutxosetoverriderequest()->::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage::MergeFrom(from._internal_notifypruningpointutxosetoverriderequest());
      break;
    }
    case kNotifyPruningPointUTXOSetOverrideResponse: {
      _internal_mutable_notifypruningpointutxosetoverrideresponse()->::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage::MergeFrom(from._internal_notifypruningpointutxosetoverrideresponse());
      break;
    }
    case kPruningPointUTXOSetOverrideNotification: {
      _internal_mutable_pruningpointutxosetoverridenotification()->::protowire::PruningPointUTXOSetOverrideNotificationMessage::MergeFrom(from._internal_pruningpointutxosetoverridenotification());
      break;
    }
    case kStopNotifyingPruningPointUTXOSetOverrideRequest: {
      _internal_mutable_stopnotifyingpruningpointutxosetoverriderequest()->::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage::MergeFrom(from._internal_stopnotifyingpruningpointutxosetoverriderequest());
      break;
    }
    case kStopNotifyingPruningPointUTXOSetOverrideResponse: {
      _internal_mutable_stopnotifyingpruningpointutxosetoverrideresponse()->::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage::MergeFrom(from._internal_stopnotifyingpruningpointutxosetoverrideresponse());
      break;
    }
    case kEstimateNetworkHashesPerSecondRequest: {
      _internal_mutable_estimatenetworkhashespersecondrequest()->::protowire::EstimateNetworkHashesPerSecondRequestMessage::MergeFrom(from._internal_estimatenetworkhashespersecondrequest());
      break;
    }
    case kEstimateNetworkHashesPerSecondResponse: {
      _internal_mutable_estimatenetworkhashespersecondresponse()->::protowire::EstimateNetworkHashesPerSecondResponseMessage::MergeFrom(from._internal_estimatenetworkhashespersecondresponse());
      break;
    }
    case kNotifyVirtualDaaScoreChangedRequest: {
      _internal_mutable_notifyvirtualdaascorechangedrequest()->::protowire::NotifyVirtualDaaScoreChangedRequestMessage::MergeFrom(from._internal_notifyvirtualdaascorechangedrequest());
      break;
    }
    case kNotifyVirtualDaaScoreChangedResponse: {
      _internal_mutable_notifyvirtualdaascorechangedresponse()->::protowire::NotifyVirtualDaaScoreChangedResponseMessage::MergeFrom(from._internal_notifyvirtualdaascorechangedresponse());
      break;
    }
    case kVirtualDaaScoreChangedNotification: {
      _internal_mutable_virtualdaascorechangednotification()->::protowire::VirtualDaaScoreChangedNotificationMessage::MergeFrom(from._internal_virtualdaascorechangednotification());
      break;
    }
    case kGetBalanceByAddressRequest: {
      _internal_mutable_getbalancebyaddressrequest()->::protowire::GetBalanceByAddressRequestMessage::MergeFrom(from._internal_getbalancebyaddressrequest());
      break;
    }
    case kGetBalanceByAddressResponse: {
      _internal_mutable_getbalancebyaddressresponse()->::protowire::GetBalanceByAddressResponseMessage::MergeFrom(from._internal_getbalancebyaddressresponse());
      break;
    }
    case kGetBalancesByAddressesRequest: {
      _internal_mutable_getbalancesbyaddressesrequest()->::protowire::GetBalancesByAddressesRequestMessage::MergeFrom(from._internal_getbalancesbyaddressesrequest());
      break;
    }
    case kGetBalancesByAddressesResponse: {
      _internal_mutable_getbalancesbyaddressesresponse()->::protowire::GetBalancesByAddressesResponseMessage::MergeFrom(from._internal_getbalancesbyaddressesresponse());
      break;
    }
    case kNotifyNewBlockTemplateRequest: {
      _internal_mutable_notifynewblocktemplaterequest()->::protowire::NotifyNewBlockTemplateRequestMessage::MergeFrom(from._internal_notifynewblocktemplaterequest());
      break;
    }
    case kNotifyNewBlockTemplateResponse: {
      _internal_mutable_notifynewblocktemplateresponse()->::protowire::NotifyNewBlockTemplateResponseMessage::MergeFrom(from._internal_notifynewblocktemplateresponse());
      break;
    }
    case kNewBlockTemplateNotification: {
      _internal_mutable_newblocktemplatenotification()->::protowire::NewBlockTemplateNotificationMessage::MergeFrom(from._internal_newblocktemplatenotification());
      break;
    }
    case kGetMempoolEntriesByAddressesRequest: {
      _internal_mutable_getmempoolentriesbyaddressesrequest()->::protowire::GetMempoolEntriesByAddressesRequestMessage::MergeFrom(from._internal_getmempoolentriesbyaddressesrequest());
      break;
    }
    case kGetMempoolEntriesByAddressesResponse: {
      _internal_mutable_getmempoolentriesbyaddressesresponse()->::protowire::GetMempoolEntriesByAddressesResponseMessage::MergeFrom(from._internal_getmempoolentriesbyaddressesresponse());
      break;
    }
    case kGetCoinSupplyRequest: {
      _internal_mutable_getcoinsupplyrequest()->::protowire::GetCoinSupplyRequestMessage::MergeFrom(from._internal_getcoinsupplyrequest());
      break;
    }
    case kGetCoinSupplyResponse: {
      _internal_mutable_getcoinsupplyresponse()->::protowire::GetCoinSupplyResponseMessage::MergeFrom(from._internal_getcoinsupplyresponse());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protowire.KaspadMessage)
}

inline void KaspadMessage::SharedCtor() {
clear_has_payload();
}

KaspadMessage::~KaspadMessage() {
  // @@protoc_insertion_point(destructor:protowire.KaspadMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void KaspadMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void KaspadMessage::ArenaDtor(void* object) {
  KaspadMessage* _this = reinterpret_cast< KaspadMessage* >(object);
  (void)_this;
}
void KaspadMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KaspadMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KaspadMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:protowire.KaspadMessage)
  switch (payload_case()) {
    case kAddresses: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.addresses_;
      }
      break;
    }
    case kBlock: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.block_;
      }
      break;
    }
    case kTransaction: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.transaction_;
      }
      break;
    }
    case kBlockLocator: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.blocklocator_;
      }
      break;
    }
    case kRequestAddresses: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestaddresses_;
      }
      break;
    }
    case kRequestRelayBlocks: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestrelayblocks_;
      }
      break;
    }
    case kRequestTransactions: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requesttransactions_;
      }
      break;
    }
    case kIbdBlock: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.ibdblock_;
      }
      break;
    }
    case kInvRelayBlock: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.invrelayblock_;
      }
      break;
    }
    case kInvTransactions: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.invtransactions_;
      }
      break;
    }
    case kPing: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.ping_;
      }
      break;
    }
    case kPong: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.pong_;
      }
      break;
    }
    case kVerack: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.verack_;
      }
      break;
    }
    case kVersion: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.version_;
      }
      break;
    }
    case kTransactionNotFound: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.transactionnotfound_;
      }
      break;
    }
    case kReject: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.reject_;
      }
      break;
    }
    case kPruningPointUtxoSetChunk: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.pruningpointutxosetchunk_;
      }
      break;
    }
    case kRequestIBDBlocks: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestibdblocks_;
      }
      break;
    }
    case kUnexpectedPruningPoint: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.unexpectedpruningpoint_;
      }
      break;
    }
    case kIbdBlockLocator: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.ibdblocklocator_;
      }
      break;
    }
    case kIbdBlockLocatorHighestHash: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.ibdblocklocatorhighesthash_;
      }
      break;
    }
    case kRequestNextPruningPointUtxoSetChunk: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestnextpruningpointutxosetchunk_;
      }
      break;
    }
    case kDonePruningPointUtxoSetChunks: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.donepruningpointutxosetchunks_;
      }
      break;
    }
    case kIbdBlockLocatorHighestHashNotFound: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.ibdblocklocatorhighesthashnotfound_;
      }
      break;
    }
    case kBlockWithTrustedData: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.blockwithtrusteddata_;
      }
      break;
    }
    case kDoneBlocksWithTrustedData: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.doneblockswithtrusteddata_;
      }
      break;
    }
    case kRequestPruningPointAndItsAnticone: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestpruningpointanditsanticone_;
      }
      break;
    }
    case kBlockHeaders: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.blockheaders_;
      }
      break;
    }
    case kRequestNextHeaders: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestnextheaders_;
      }
      break;
    }
    case kDoneHeaders: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.doneheaders_;
      }
      break;
    }
    case kRequestPruningPointUTXOSet: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestpruningpointutxoset_;
      }
      break;
    }
    case kRequestHeaders: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestheaders_;
      }
      break;
    }
    case kRequestBlockLocator: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestblocklocator_;
      }
      break;
    }
    case kPruningPoints: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.pruningpoints_;
      }
      break;
    }
    case kRequestPruningPointProof: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestpruningpointproof_;
      }
      break;
    }
    case kPruningPointProof: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.pruningpointproof_;
      }
      break;
    }
    case kReady: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.ready_;
      }
      break;
    }
    case kBlockWithTrustedDataV4: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.blockwithtrusteddatav4_;
      }
      break;
    }
    case kTrustedData: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.trusteddata_;
      }
      break;
    }
    case kRequestIBDChainBlockLocator: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestibdchainblocklocator_;
      }
      break;
    }
    case kIbdChainBlockLocator: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.ibdchainblocklocator_;
      }
      break;
    }
    case kRequestAnticone: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestanticone_;
      }
      break;
    }
    case kRequestNextPruningPointAndItsAnticoneBlocks: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.requestnextpruningpointanditsanticoneblocks_;
      }
      break;
    }
    case kGetCurrentNetworkRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getcurrentnetworkrequest_;
      }
      break;
    }
    case kGetCurrentNetworkResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getcurrentnetworkresponse_;
      }
      break;
    }
    case kSubmitBlockRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.submitblockrequest_;
      }
      break;
    }
    case kSubmitBlockResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.submitblockresponse_;
      }
      break;
    }
    case kGetBlockTemplateRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblocktemplaterequest_;
      }
      break;
    }
    case kGetBlockTemplateResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblocktemplateresponse_;
      }
      break;
    }
    case kNotifyBlockAddedRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyblockaddedrequest_;
      }
      break;
    }
    case kNotifyBlockAddedResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyblockaddedresponse_;
      }
      break;
    }
    case kBlockAddedNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.blockaddednotification_;
      }
      break;
    }
    case kGetPeerAddressesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getpeeraddressesrequest_;
      }
      break;
    }
    case kGetPeerAddressesResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getpeeraddressesresponse_;
      }
      break;
    }
    case kGetSelectedTipHashRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getselectedtiphashrequest_;
      }
      break;
    }
    case kGetSelectedTipHashResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getselectedtiphashresponse_;
      }
      break;
    }
    case kGetMempoolEntryRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getmempoolentryrequest_;
      }
      break;
    }
    case kGetMempoolEntryResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getmempoolentryresponse_;
      }
      break;
    }
    case kGetConnectedPeerInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getconnectedpeerinforequest_;
      }
      break;
    }
    case kGetConnectedPeerInfoResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getconnectedpeerinforesponse_;
      }
      break;
    }
    case kAddPeerRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.addpeerrequest_;
      }
      break;
    }
    case kAddPeerResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.addpeerresponse_;
      }
      break;
    }
    case kSubmitTransactionRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.submittransactionrequest_;
      }
      break;
    }
    case kSubmitTransactionResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.submittransactionresponse_;
      }
      break;
    }
    case kNotifyVirtualSelectedParentChainChangedRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyvirtualselectedparentchainchangedrequest_;
      }
      break;
    }
    case kNotifyVirtualSelectedParentChainChangedResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyvirtualselectedparentchainchangedresponse_;
      }
      break;
    }
    case kVirtualSelectedParentChainChangedNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.virtualselectedparentchainchangednotification_;
      }
      break;
    }
    case kGetBlockRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblockrequest_;
      }
      break;
    }
    case kGetBlockResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblockresponse_;
      }
      break;
    }
    case kGetSubnetworkRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getsubnetworkrequest_;
      }
      break;
    }
    case kGetSubnetworkResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getsubnetworkresponse_;
      }
      break;
    }
    case kGetVirtualSelectedParentChainFromBlockRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getvirtualselectedparentchainfromblockrequest_;
      }
      break;
    }
    case kGetVirtualSelectedParentChainFromBlockResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getvirtualselectedparentchainfromblockresponse_;
      }
      break;
    }
    case kGetBlocksRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblocksrequest_;
      }
      break;
    }
    case kGetBlocksResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblocksresponse_;
      }
      break;
    }
    case kGetBlockCountRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblockcountrequest_;
      }
      break;
    }
    case kGetBlockCountResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblockcountresponse_;
      }
      break;
    }
    case kGetBlockDagInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblockdaginforequest_;
      }
      break;
    }
    case kGetBlockDagInfoResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getblockdaginforesponse_;
      }
      break;
    }
    case kResolveFinalityConflictRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.resolvefinalityconflictrequest_;
      }
      break;
    }
    case kResolveFinalityConflictResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.resolvefinalityconflictresponse_;
      }
      break;
    }
    case kNotifyFinalityConflictsRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyfinalityconflictsrequest_;
      }
      break;
    }
    case kNotifyFinalityConflictsResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyfinalityconflictsresponse_;
      }
      break;
    }
    case kFinalityConflictNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.finalityconflictnotification_;
      }
      break;
    }
    case kFinalityConflictResolvedNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.finalityconflictresolvednotification_;
      }
      break;
    }
    case kGetMempoolEntriesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getmempoolentriesrequest_;
      }
      break;
    }
    case kGetMempoolEntriesResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getmempoolentriesresponse_;
      }
      break;
    }
    case kShutDownRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.shutdownrequest_;
      }
      break;
    }
    case kShutDownResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.shutdownresponse_;
      }
      break;
    }
    case kGetHeadersRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getheadersrequest_;
      }
      break;
    }
    case kGetHeadersResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getheadersresponse_;
      }
      break;
    }
    case kNotifyUtxosChangedRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyutxoschangedrequest_;
      }
      break;
    }
    case kNotifyUtxosChangedResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyutxoschangedresponse_;
      }
      break;
    }
    case kUtxosChangedNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.utxoschangednotification_;
      }
      break;
    }
    case kGetUtxosByAddressesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getutxosbyaddressesrequest_;
      }
      break;
    }
    case kGetUtxosByAddressesResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getutxosbyaddressesresponse_;
      }
      break;
    }
    case kGetVirtualSelectedParentBlueScoreRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getvirtualselectedparentbluescorerequest_;
      }
      break;
    }
    case kGetVirtualSelectedParentBlueScoreResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getvirtualselectedparentbluescoreresponse_;
      }
      break;
    }
    case kNotifyVirtualSelectedParentBlueScoreChangedRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyvirtualselectedparentbluescorechangedrequest_;
      }
      break;
    }
    case kNotifyVirtualSelectedParentBlueScoreChangedResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyvirtualselectedparentbluescorechangedresponse_;
      }
      break;
    }
    case kVirtualSelectedParentBlueScoreChangedNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.virtualselectedparentbluescorechangednotification_;
      }
      break;
    }
    case kBanRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.banrequest_;
      }
      break;
    }
    case kBanResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.banresponse_;
      }
      break;
    }
    case kUnbanRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.unbanrequest_;
      }
      break;
    }
    case kUnbanResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.unbanresponse_;
      }
      break;
    }
    case kGetInfoRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getinforequest_;
      }
      break;
    }
    case kGetInfoResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getinforesponse_;
      }
      break;
    }
    case kStopNotifyingUtxosChangedRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.stopnotifyingutxoschangedrequest_;
      }
      break;
    }
    case kStopNotifyingUtxosChangedResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.stopnotifyingutxoschangedresponse_;
      }
      break;
    }
    case kNotifyPruningPointUTXOSetOverrideRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifypruningpointutxosetoverriderequest_;
      }
      break;
    }
    case kNotifyPruningPointUTXOSetOverrideResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifypruningpointutxosetoverrideresponse_;
      }
      break;
    }
    case kPruningPointUTXOSetOverrideNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.pruningpointutxosetoverridenotification_;
      }
      break;
    }
    case kStopNotifyingPruningPointUTXOSetOverrideRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.stopnotifyingpruningpointutxosetoverriderequest_;
      }
      break;
    }
    case kStopNotifyingPruningPointUTXOSetOverrideResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.stopnotifyingpruningpointutxosetoverrideresponse_;
      }
      break;
    }
    case kEstimateNetworkHashesPerSecondRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.estimatenetworkhashespersecondrequest_;
      }
      break;
    }
    case kEstimateNetworkHashesPerSecondResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.estimatenetworkhashespersecondresponse_;
      }
      break;
    }
    case kNotifyVirtualDaaScoreChangedRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyvirtualdaascorechangedrequest_;
      }
      break;
    }
    case kNotifyVirtualDaaScoreChangedResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifyvirtualdaascorechangedresponse_;
      }
      break;
    }
    case kVirtualDaaScoreChangedNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.virtualdaascorechangednotification_;
      }
      break;
    }
    case kGetBalanceByAddressRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getbalancebyaddressrequest_;
      }
      break;
    }
    case kGetBalanceByAddressResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getbalancebyaddressresponse_;
      }
      break;
    }
    case kGetBalancesByAddressesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getbalancesbyaddressesrequest_;
      }
      break;
    }
    case kGetBalancesByAddressesResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getbalancesbyaddressesresponse_;
      }
      break;
    }
    case kNotifyNewBlockTemplateRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifynewblocktemplaterequest_;
      }
      break;
    }
    case kNotifyNewBlockTemplateResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.notifynewblocktemplateresponse_;
      }
      break;
    }
    case kNewBlockTemplateNotification: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.newblocktemplatenotification_;
      }
      break;
    }
    case kGetMempoolEntriesByAddressesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getmempoolentriesbyaddressesrequest_;
      }
      break;
    }
    case kGetMempoolEntriesByAddressesResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getmempoolentriesbyaddressesresponse_;
      }
      break;
    }
    case kGetCoinSupplyRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getcoinsupplyrequest_;
      }
      break;
    }
    case kGetCoinSupplyResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete payload_.getcoinsupplyresponse_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void KaspadMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.KaspadMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KaspadMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.AddressesMessage addresses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_addresses(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BlockMessage block = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.TransactionMessage transaction = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BlockLocatorMessage blockLocator = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_blocklocator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestAddressesMessage requestAddresses = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestaddresses(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestRelayBlocksMessage requestRelayBlocks = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestrelayblocks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestTransactionsMessage requestTransactions = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_requesttransactions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BlockMessage ibdBlock = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_ibdblock(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.InvRelayBlockMessage invRelayBlock = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_invrelayblock(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.InvTransactionsMessage invTransactions = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_invtransactions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.PingMessage ping = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_ping(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.PongMessage pong = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_pong(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.VerackMessage verack = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_verack(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.VersionMessage version = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.TransactionNotFoundMessage transactionNotFound = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_transactionnotfound(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RejectMessage reject = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_reject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.PruningPointUtxoSetChunkMessage pruningPointUtxoSetChunk = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_pruningpointutxosetchunk(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestIBDBlocksMessage requestIBDBlocks = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestibdblocks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.UnexpectedPruningPointMessage unexpectedPruningPoint = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_unexpectedpruningpoint(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.IbdBlockLocatorMessage ibdBlockLocator = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_ibdblocklocator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.IbdBlockLocatorHighestHashMessage ibdBlockLocatorHighestHash = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_ibdblocklocatorhighesthash(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestNextPruningPointUtxoSetChunkMessage requestNextPruningPointUtxoSetChunk = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestnextpruningpointutxosetchunk(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.DonePruningPointUtxoSetChunksMessage donePruningPointUtxoSetChunks = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_donepruningpointutxosetchunks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.IbdBlockLocatorHighestHashNotFoundMessage ibdBlockLocatorHighestHashNotFound = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_ibdblocklocatorhighesthashnotfound(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BlockWithTrustedDataMessage blockWithTrustedData = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_blockwithtrusteddata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.DoneBlocksWithTrustedDataMessage doneBlocksWithTrustedData = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_doneblockswithtrusteddata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestPruningPointAndItsAnticoneMessage requestPruningPointAndItsAnticone = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestpruningpointanditsanticone(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BlockHeadersMessage blockHeaders = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_blockheaders(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestNextHeadersMessage requestNextHeaders = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestnextheaders(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.DoneHeadersMessage DoneHeaders = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_doneheaders(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestPruningPointUTXOSetMessage requestPruningPointUTXOSet = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestpruningpointutxoset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestHeadersMessage requestHeaders = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestheaders(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestBlockLocatorMessage requestBlockLocator = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestblocklocator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.PruningPointsMessage pruningPoints = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_pruningpoints(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestPruningPointProofMessage requestPruningPointProof = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestpruningpointproof(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.PruningPointProofMessage pruningPointProof = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_pruningpointproof(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.ReadyMessage ready = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_ready(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BlockWithTrustedDataV4Message blockWithTrustedDataV4 = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_blockwithtrusteddatav4(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.TrustedDataMessage trustedData = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_trusteddata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestIBDChainBlockLocatorMessage requestIBDChainBlockLocator = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestibdchainblocklocator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.IbdChainBlockLocatorMessage ibdChainBlockLocator = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_ibdchainblocklocator(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestAnticoneMessage requestAnticone = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestanticone(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RequestNextPruningPointAndItsAnticoneBlocksMessage requestNextPruningPointAndItsAnticoneBlocks = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestnextpruningpointanditsanticoneblocks(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetCurrentNetworkRequestMessage getCurrentNetworkRequest = 1001;
      case 1001:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_getcurrentnetworkrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetCurrentNetworkResponseMessage getCurrentNetworkResponse = 1002;
      case 1002:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_getcurrentnetworkresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.SubmitBlockRequestMessage submitBlockRequest = 1003;
      case 1003:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_submitblockrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.SubmitBlockResponseMessage submitBlockResponse = 1004;
      case 1004:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_submitblockresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlockTemplateRequestMessage getBlockTemplateRequest = 1005;
      case 1005:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblocktemplaterequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlockTemplateResponseMessage getBlockTemplateResponse = 1006;
      case 1006:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblocktemplateresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyBlockAddedRequestMessage notifyBlockAddedRequest = 1007;
      case 1007:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyblockaddedrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyBlockAddedResponseMessage notifyBlockAddedResponse = 1008;
      case 1008:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyblockaddedresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BlockAddedNotificationMessage blockAddedNotification = 1009;
      case 1009:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_blockaddednotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetPeerAddressesRequestMessage getPeerAddressesRequest = 1010;
      case 1010:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_getpeeraddressesrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetPeerAddressesResponseMessage getPeerAddressesResponse = 1011;
      case 1011:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_getpeeraddressesresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetSelectedTipHashRequestMessage getSelectedTipHashRequest = 1012;
      case 1012:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_getselectedtiphashrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetSelectedTipHashResponseMessage getSelectedTipHashResponse = 1013;
      case 1013:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_getselectedtiphashresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetMempoolEntryRequestMessage getMempoolEntryRequest = 1014;
      case 1014:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_getmempoolentryrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetMempoolEntryResponseMessage getMempoolEntryResponse = 1015;
      case 1015:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_getmempoolentryresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetConnectedPeerInfoRequestMessage getConnectedPeerInfoRequest = 1016;
      case 1016:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_getconnectedpeerinforequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetConnectedPeerInfoResponseMessage getConnectedPeerInfoResponse = 1017;
      case 1017:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_getconnectedpeerinforesponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.AddPeerRequestMessage addPeerRequest = 1018;
      case 1018:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_addpeerrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.AddPeerResponseMessage addPeerResponse = 1019;
      case 1019:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_addpeerresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.SubmitTransactionRequestMessage submitTransactionRequest = 1020;
      case 1020:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_submittransactionrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.SubmitTransactionResponseMessage submitTransactionResponse = 1021;
      case 1021:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_submittransactionresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyVirtualSelectedParentChainChangedRequestMessage notifyVirtualSelectedParentChainChangedRequest = 1022;
      case 1022:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyvirtualselectedparentchainchangedrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyVirtualSelectedParentChainChangedResponseMessage notifyVirtualSelectedParentChainChangedResponse = 1023;
      case 1023:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyvirtualselectedparentchainchangedresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.VirtualSelectedParentChainChangedNotificationMessage virtualSelectedParentChainChangedNotification = 1024;
      case 1024:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtualselectedparentchainchangednotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlockRequestMessage getBlockRequest = 1025;
      case 1025:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblockrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlockResponseMessage getBlockResponse = 1026;
      case 1026:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblockresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetSubnetworkRequestMessage getSubnetworkRequest = 1027;
      case 1027:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_getsubnetworkrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetSubnetworkResponseMessage getSubnetworkResponse = 1028;
      case 1028:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_getsubnetworkresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetVirtualSelectedParentChainFromBlockRequestMessage getVirtualSelectedParentChainFromBlockRequest = 1029;
      case 1029:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_getvirtualselectedparentchainfromblockrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetVirtualSelectedParentChainFromBlockResponseMessage getVirtualSelectedParentChainFromBlockResponse = 1030;
      case 1030:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_getvirtualselectedparentchainfromblockresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlocksRequestMessage getBlocksRequest = 1031;
      case 1031:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblocksrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlocksResponseMessage getBlocksResponse = 1032;
      case 1032:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblocksresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlockCountRequestMessage getBlockCountRequest = 1033;
      case 1033:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblockcountrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlockCountResponseMessage getBlockCountResponse = 1034;
      case 1034:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblockcountresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlockDagInfoRequestMessage getBlockDagInfoRequest = 1035;
      case 1035:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblockdaginforequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBlockDagInfoResponseMessage getBlockDagInfoResponse = 1036;
      case 1036:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_getblockdaginforesponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.ResolveFinalityConflictRequestMessage resolveFinalityConflictRequest = 1037;
      case 1037:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_resolvefinalityconflictrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.ResolveFinalityConflictResponseMessage resolveFinalityConflictResponse = 1038;
      case 1038:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_resolvefinalityconflictresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyFinalityConflictsRequestMessage notifyFinalityConflictsRequest = 1039;
      case 1039:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyfinalityconflictsrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyFinalityConflictsResponseMessage notifyFinalityConflictsResponse = 1040;
      case 1040:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyfinalityconflictsresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.FinalityConflictNotificationMessage finalityConflictNotification = 1041;
      case 1041:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_finalityconflictnotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.FinalityConflictResolvedNotificationMessage finalityConflictResolvedNotification = 1042;
      case 1042:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_finalityconflictresolvednotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetMempoolEntriesRequestMessage getMempoolEntriesRequest = 1043;
      case 1043:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_getmempoolentriesrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetMempoolEntriesResponseMessage getMempoolEntriesResponse = 1044;
      case 1044:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_getmempoolentriesresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.ShutDownRequestMessage shutDownRequest = 1045;
      case 1045:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_shutdownrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.ShutDownResponseMessage shutDownResponse = 1046;
      case 1046:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_shutdownresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetHeadersRequestMessage getHeadersRequest = 1047;
      case 1047:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_getheadersrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetHeadersResponseMessage getHeadersResponse = 1048;
      case 1048:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_getheadersresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyUtxosChangedRequestMessage notifyUtxosChangedRequest = 1049;
      case 1049:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyutxoschangedrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyUtxosChangedResponseMessage notifyUtxosChangedResponse = 1050;
      case 1050:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyutxoschangedresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.UtxosChangedNotificationMessage utxosChangedNotification = 1051;
      case 1051:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_utxoschangednotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetUtxosByAddressesRequestMessage getUtxosByAddressesRequest = 1052;
      case 1052:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_getutxosbyaddressesrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetUtxosByAddressesResponseMessage getUtxosByAddressesResponse = 1053;
      case 1053:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_getutxosbyaddressesresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetVirtualSelectedParentBlueScoreRequestMessage getVirtualSelectedParentBlueScoreRequest = 1054;
      case 1054:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_getvirtualselectedparentbluescorerequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetVirtualSelectedParentBlueScoreResponseMessage getVirtualSelectedParentBlueScoreResponse = 1055;
      case 1055:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_getvirtualselectedparentbluescoreresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage notifyVirtualSelectedParentBlueScoreChangedRequest = 1056;
      case 1056:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyvirtualselectedparentbluescorechangedrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage notifyVirtualSelectedParentBlueScoreChangedResponse = 1057;
      case 1057:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyvirtualselectedparentbluescorechangedresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage virtualSelectedParentBlueScoreChangedNotification = 1058;
      case 1058:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtualselectedparentbluescorechangednotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BanRequestMessage banRequest = 1059;
      case 1059:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_banrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.BanResponseMessage banResponse = 1060;
      case 1060:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_banresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.UnbanRequestMessage unbanRequest = 1061;
      case 1061:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_unbanrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.UnbanResponseMessage unbanResponse = 1062;
      case 1062:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_unbanresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetInfoRequestMessage getInfoRequest = 1063;
      case 1063:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_getinforequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetInfoResponseMessage getInfoResponse = 1064;
      case 1064:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_getinforesponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.StopNotifyingUtxosChangedRequestMessage stopNotifyingUtxosChangedRequest = 1065;
      case 1065:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_stopnotifyingutxoschangedrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.StopNotifyingUtxosChangedResponseMessage stopNotifyingUtxosChangedResponse = 1066;
      case 1066:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_stopnotifyingutxoschangedresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyPruningPointUTXOSetOverrideRequestMessage notifyPruningPointUTXOSetOverrideRequest = 1067;
      case 1067:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifypruningpointutxosetoverriderequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyPruningPointUTXOSetOverrideResponseMessage notifyPruningPointUTXOSetOverrideResponse = 1068;
      case 1068:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifypruningpointutxosetoverrideresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.PruningPointUTXOSetOverrideNotificationMessage pruningPointUTXOSetOverrideNotification = 1069;
      case 1069:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_pruningpointutxosetoverridenotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.StopNotifyingPruningPointUTXOSetOverrideRequestMessage stopNotifyingPruningPointUTXOSetOverrideRequest = 1070;
      case 1070:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_stopnotifyingpruningpointutxosetoverriderequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage stopNotifyingPruningPointUTXOSetOverrideResponse = 1071;
      case 1071:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_stopnotifyingpruningpointutxosetoverrideresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.EstimateNetworkHashesPerSecondRequestMessage estimateNetworkHashesPerSecondRequest = 1072;
      case 1072:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_estimatenetworkhashespersecondrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.EstimateNetworkHashesPerSecondResponseMessage estimateNetworkHashesPerSecondResponse = 1073;
      case 1073:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_estimatenetworkhashespersecondresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyVirtualDaaScoreChangedRequestMessage notifyVirtualDaaScoreChangedRequest = 1074;
      case 1074:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyvirtualdaascorechangedrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyVirtualDaaScoreChangedResponseMessage notifyVirtualDaaScoreChangedResponse = 1075;
      case 1075:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifyvirtualdaascorechangedresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.VirtualDaaScoreChangedNotificationMessage virtualDaaScoreChangedNotification = 1076;
      case 1076:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_virtualdaascorechangednotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBalanceByAddressRequestMessage getBalanceByAddressRequest = 1077;
      case 1077:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbalancebyaddressrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBalanceByAddressResponseMessage getBalanceByAddressResponse = 1078;
      case 1078:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbalancebyaddressresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBalancesByAddressesRequestMessage getBalancesByAddressesRequest = 1079;
      case 1079:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbalancesbyaddressesrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetBalancesByAddressesResponseMessage getBalancesByAddressesResponse = 1080;
      case 1080:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_getbalancesbyaddressesresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyNewBlockTemplateRequestMessage notifyNewBlockTemplateRequest = 1081;
      case 1081:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifynewblocktemplaterequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NotifyNewBlockTemplateResponseMessage notifyNewBlockTemplateResponse = 1082;
      case 1082:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr = ctx->ParseMessage(_internal_mutable_notifynewblocktemplateresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.NewBlockTemplateNotificationMessage newBlockTemplateNotification = 1083;
      case 1083:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr = ctx->ParseMessage(_internal_mutable_newblocktemplatenotification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetMempoolEntriesByAddressesRequestMessage getMempoolEntriesByAddressesRequest = 1084;
      case 1084:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_getmempoolentriesbyaddressesrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetMempoolEntriesByAddressesResponseMessage getMempoolEntriesByAddressesResponse = 1085;
      case 1085:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_getmempoolentriesbyaddressesresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetCoinSupplyRequestMessage getCoinSupplyRequest = 1086;
      case 1086:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_getcoinsupplyrequest(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.GetCoinSupplyResponseMessage getCoinSupplyResponse = 1087;
      case 1087:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_getcoinsupplyresponse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KaspadMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.KaspadMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.AddressesMessage addresses = 1;
  if (_internal_has_addresses()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::addresses(this), target, stream);
  }

  // .protowire.BlockMessage block = 2;
  if (_internal_has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::block(this), target, stream);
  }

  // .protowire.TransactionMessage transaction = 3;
  if (_internal_has_transaction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::transaction(this), target, stream);
  }

  // .protowire.BlockLocatorMessage blockLocator = 5;
  if (_internal_has_blocklocator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::blocklocator(this), target, stream);
  }

  // .protowire.RequestAddressesMessage requestAddresses = 6;
  if (_internal_has_requestaddresses()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::requestaddresses(this), target, stream);
  }

  // .protowire.RequestRelayBlocksMessage requestRelayBlocks = 10;
  if (_internal_has_requestrelayblocks()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::requestrelayblocks(this), target, stream);
  }

  // .protowire.RequestTransactionsMessage requestTransactions = 12;
  if (_internal_has_requesttransactions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::requesttransactions(this), target, stream);
  }

  // .protowire.BlockMessage ibdBlock = 13;
  if (_internal_has_ibdblock()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::ibdblock(this), target, stream);
  }

  // .protowire.InvRelayBlockMessage invRelayBlock = 14;
  if (_internal_has_invrelayblock()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::invrelayblock(this), target, stream);
  }

  // .protowire.InvTransactionsMessage invTransactions = 15;
  if (_internal_has_invtransactions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::invtransactions(this), target, stream);
  }

  // .protowire.PingMessage ping = 16;
  if (_internal_has_ping()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::ping(this), target, stream);
  }

  // .protowire.PongMessage pong = 17;
  if (_internal_has_pong()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::pong(this), target, stream);
  }

  // .protowire.VerackMessage verack = 19;
  if (_internal_has_verack()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::verack(this), target, stream);
  }

  // .protowire.VersionMessage version = 20;
  if (_internal_has_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        20, _Internal::version(this), target, stream);
  }

  // .protowire.TransactionNotFoundMessage transactionNotFound = 21;
  if (_internal_has_transactionnotfound()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::transactionnotfound(this), target, stream);
  }

  // .protowire.RejectMessage reject = 22;
  if (_internal_has_reject()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::reject(this), target, stream);
  }

  // .protowire.PruningPointUtxoSetChunkMessage pruningPointUtxoSetChunk = 25;
  if (_internal_has_pruningpointutxosetchunk()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::pruningpointutxosetchunk(this), target, stream);
  }

  // .protowire.RequestIBDBlocksMessage requestIBDBlocks = 26;
  if (_internal_has_requestibdblocks()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        26, _Internal::requestibdblocks(this), target, stream);
  }

  // .protowire.UnexpectedPruningPointMessage unexpectedPruningPoint = 27;
  if (_internal_has_unexpectedpruningpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        27, _Internal::unexpectedpruningpoint(this), target, stream);
  }

  // .protowire.IbdBlockLocatorMessage ibdBlockLocator = 30;
  if (_internal_has_ibdblocklocator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        30, _Internal::ibdblocklocator(this), target, stream);
  }

  // .protowire.IbdBlockLocatorHighestHashMessage ibdBlockLocatorHighestHash = 31;
  if (_internal_has_ibdblocklocatorhighesthash()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::ibdblocklocatorhighesthash(this), target, stream);
  }

  // .protowire.RequestNextPruningPointUtxoSetChunkMessage requestNextPruningPointUtxoSetChunk = 33;
  if (_internal_has_requestnextpruningpointutxosetchunk()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::requestnextpruningpointutxosetchunk(this), target, stream);
  }

  // .protowire.DonePruningPointUtxoSetChunksMessage donePruningPointUtxoSetChunks = 34;
  if (_internal_has_donepruningpointutxosetchunks()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        34, _Internal::donepruningpointutxosetchunks(this), target, stream);
  }

  // .protowire.IbdBlockLocatorHighestHashNotFoundMessage ibdBlockLocatorHighestHashNotFound = 35;
  if (_internal_has_ibdblocklocatorhighesthashnotfound()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        35, _Internal::ibdblocklocatorhighesthashnotfound(this), target, stream);
  }

  // .protowire.BlockWithTrustedDataMessage blockWithTrustedData = 36;
  if (_internal_has_blockwithtrusteddata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        36, _Internal::blockwithtrusteddata(this), target, stream);
  }

  // .protowire.DoneBlocksWithTrustedDataMessage doneBlocksWithTrustedData = 37;
  if (_internal_has_doneblockswithtrusteddata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        37, _Internal::doneblockswithtrusteddata(this), target, stream);
  }

  // .protowire.RequestPruningPointAndItsAnticoneMessage requestPruningPointAndItsAnticone = 40;
  if (_internal_has_requestpruningpointanditsanticone()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        40, _Internal::requestpruningpointanditsanticone(this), target, stream);
  }

  // .protowire.BlockHeadersMessage blockHeaders = 41;
  if (_internal_has_blockheaders()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        41, _Internal::blockheaders(this), target, stream);
  }

  // .protowire.RequestNextHeadersMessage requestNextHeaders = 42;
  if (_internal_has_requestnextheaders()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        42, _Internal::requestnextheaders(this), target, stream);
  }

  // .protowire.DoneHeadersMessage DoneHeaders = 43;
  if (_internal_has_doneheaders()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::doneheaders(this), target, stream);
  }

  // .protowire.RequestPruningPointUTXOSetMessage requestPruningPointUTXOSet = 44;
  if (_internal_has_requestpruningpointutxoset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        44, _Internal::requestpruningpointutxoset(this), target, stream);
  }

  // .protowire.RequestHeadersMessage requestHeaders = 45;
  if (_internal_has_requestheaders()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        45, _Internal::requestheaders(this), target, stream);
  }

  // .protowire.RequestBlockLocatorMessage requestBlockLocator = 46;
  if (_internal_has_requestblocklocator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        46, _Internal::requestblocklocator(this), target, stream);
  }

  // .protowire.PruningPointsMessage pruningPoints = 47;
  if (_internal_has_pruningpoints()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        47, _Internal::pruningpoints(this), target, stream);
  }

  // .protowire.RequestPruningPointProofMessage requestPruningPointProof = 48;
  if (_internal_has_requestpruningpointproof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        48, _Internal::requestpruningpointproof(this), target, stream);
  }

  // .protowire.PruningPointProofMessage pruningPointProof = 49;
  if (_internal_has_pruningpointproof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        49, _Internal::pruningpointproof(this), target, stream);
  }

  // .protowire.ReadyMessage ready = 50;
  if (_internal_has_ready()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        50, _Internal::ready(this), target, stream);
  }

  // .protowire.BlockWithTrustedDataV4Message blockWithTrustedDataV4 = 51;
  if (_internal_has_blockwithtrusteddatav4()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        51, _Internal::blockwithtrusteddatav4(this), target, stream);
  }

  // .protowire.TrustedDataMessage trustedData = 52;
  if (_internal_has_trusteddata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        52, _Internal::trusteddata(this), target, stream);
  }

  // .protowire.RequestIBDChainBlockLocatorMessage requestIBDChainBlockLocator = 53;
  if (_internal_has_requestibdchainblocklocator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        53, _Internal::requestibdchainblocklocator(this), target, stream);
  }

  // .protowire.IbdChainBlockLocatorMessage ibdChainBlockLocator = 54;
  if (_internal_has_ibdchainblocklocator()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        54, _Internal::ibdchainblocklocator(this), target, stream);
  }

  // .protowire.RequestAnticoneMessage requestAnticone = 55;
  if (_internal_has_requestanticone()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        55, _Internal::requestanticone(this), target, stream);
  }

  // .protowire.RequestNextPruningPointAndItsAnticoneBlocksMessage requestNextPruningPointAndItsAnticoneBlocks = 56;
  if (_internal_has_requestnextpruningpointanditsanticoneblocks()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        56, _Internal::requestnextpruningpointanditsanticoneblocks(this), target, stream);
  }

  // .protowire.GetCurrentNetworkRequestMessage getCurrentNetworkRequest = 1001;
  if (_internal_has_getcurrentnetworkrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1001, _Internal::getcurrentnetworkrequest(this), target, stream);
  }

  // .protowire.GetCurrentNetworkResponseMessage getCurrentNetworkResponse = 1002;
  if (_internal_has_getcurrentnetworkresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1002, _Internal::getcurrentnetworkresponse(this), target, stream);
  }

  // .protowire.SubmitBlockRequestMessage submitBlockRequest = 1003;
  if (_internal_has_submitblockrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1003, _Internal::submitblockrequest(this), target, stream);
  }

  // .protowire.SubmitBlockResponseMessage submitBlockResponse = 1004;
  if (_internal_has_submitblockresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1004, _Internal::submitblockresponse(this), target, stream);
  }

  // .protowire.GetBlockTemplateRequestMessage getBlockTemplateRequest = 1005;
  if (_internal_has_getblocktemplaterequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1005, _Internal::getblocktemplaterequest(this), target, stream);
  }

  // .protowire.GetBlockTemplateResponseMessage getBlockTemplateResponse = 1006;
  if (_internal_has_getblocktemplateresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1006, _Internal::getblocktemplateresponse(this), target, stream);
  }

  // .protowire.NotifyBlockAddedRequestMessage notifyBlockAddedRequest = 1007;
  if (_internal_has_notifyblockaddedrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1007, _Internal::notifyblockaddedrequest(this), target, stream);
  }

  // .protowire.NotifyBlockAddedResponseMessage notifyBlockAddedResponse = 1008;
  if (_internal_has_notifyblockaddedresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1008, _Internal::notifyblockaddedresponse(this), target, stream);
  }

  // .protowire.BlockAddedNotificationMessage blockAddedNotification = 1009;
  if (_internal_has_blockaddednotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1009, _Internal::blockaddednotification(this), target, stream);
  }

  // .protowire.GetPeerAddressesRequestMessage getPeerAddressesRequest = 1010;
  if (_internal_has_getpeeraddressesrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1010, _Internal::getpeeraddressesrequest(this), target, stream);
  }

  // .protowire.GetPeerAddressesResponseMessage getPeerAddressesResponse = 1011;
  if (_internal_has_getpeeraddressesresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1011, _Internal::getpeeraddressesresponse(this), target, stream);
  }

  // .protowire.GetSelectedTipHashRequestMessage getSelectedTipHashRequest = 1012;
  if (_internal_has_getselectedtiphashrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1012, _Internal::getselectedtiphashrequest(this), target, stream);
  }

  // .protowire.GetSelectedTipHashResponseMessage getSelectedTipHashResponse = 1013;
  if (_internal_has_getselectedtiphashresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1013, _Internal::getselectedtiphashresponse(this), target, stream);
  }

  // .protowire.GetMempoolEntryRequestMessage getMempoolEntryRequest = 1014;
  if (_internal_has_getmempoolentryrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1014, _Internal::getmempoolentryrequest(this), target, stream);
  }

  // .protowire.GetMempoolEntryResponseMessage getMempoolEntryResponse = 1015;
  if (_internal_has_getmempoolentryresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1015, _Internal::getmempoolentryresponse(this), target, stream);
  }

  // .protowire.GetConnectedPeerInfoRequestMessage getConnectedPeerInfoRequest = 1016;
  if (_internal_has_getconnectedpeerinforequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1016, _Internal::getconnectedpeerinforequest(this), target, stream);
  }

  // .protowire.GetConnectedPeerInfoResponseMessage getConnectedPeerInfoResponse = 1017;
  if (_internal_has_getconnectedpeerinforesponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1017, _Internal::getconnectedpeerinforesponse(this), target, stream);
  }

  // .protowire.AddPeerRequestMessage addPeerRequest = 1018;
  if (_internal_has_addpeerrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1018, _Internal::addpeerrequest(this), target, stream);
  }

  // .protowire.AddPeerResponseMessage addPeerResponse = 1019;
  if (_internal_has_addpeerresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1019, _Internal::addpeerresponse(this), target, stream);
  }

  // .protowire.SubmitTransactionRequestMessage submitTransactionRequest = 1020;
  if (_internal_has_submittransactionrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1020, _Internal::submittransactionrequest(this), target, stream);
  }

  // .protowire.SubmitTransactionResponseMessage submitTransactionResponse = 1021;
  if (_internal_has_submittransactionresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1021, _Internal::submittransactionresponse(this), target, stream);
  }

  // .protowire.NotifyVirtualSelectedParentChainChangedRequestMessage notifyVirtualSelectedParentChainChangedRequest = 1022;
  if (_internal_has_notifyvirtualselectedparentchainchangedrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1022, _Internal::notifyvirtualselectedparentchainchangedrequest(this), target, stream);
  }

  // .protowire.NotifyVirtualSelectedParentChainChangedResponseMessage notifyVirtualSelectedParentChainChangedResponse = 1023;
  if (_internal_has_notifyvirtualselectedparentchainchangedresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1023, _Internal::notifyvirtualselectedparentchainchangedresponse(this), target, stream);
  }

  // .protowire.VirtualSelectedParentChainChangedNotificationMessage virtualSelectedParentChainChangedNotification = 1024;
  if (_internal_has_virtualselectedparentchainchangednotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1024, _Internal::virtualselectedparentchainchangednotification(this), target, stream);
  }

  // .protowire.GetBlockRequestMessage getBlockRequest = 1025;
  if (_internal_has_getblockrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1025, _Internal::getblockrequest(this), target, stream);
  }

  // .protowire.GetBlockResponseMessage getBlockResponse = 1026;
  if (_internal_has_getblockresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1026, _Internal::getblockresponse(this), target, stream);
  }

  // .protowire.GetSubnetworkRequestMessage getSubnetworkRequest = 1027;
  if (_internal_has_getsubnetworkrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1027, _Internal::getsubnetworkrequest(this), target, stream);
  }

  // .protowire.GetSubnetworkResponseMessage getSubnetworkResponse = 1028;
  if (_internal_has_getsubnetworkresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1028, _Internal::getsubnetworkresponse(this), target, stream);
  }

  // .protowire.GetVirtualSelectedParentChainFromBlockRequestMessage getVirtualSelectedParentChainFromBlockRequest = 1029;
  if (_internal_has_getvirtualselectedparentchainfromblockrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1029, _Internal::getvirtualselectedparentchainfromblockrequest(this), target, stream);
  }

  // .protowire.GetVirtualSelectedParentChainFromBlockResponseMessage getVirtualSelectedParentChainFromBlockResponse = 1030;
  if (_internal_has_getvirtualselectedparentchainfromblockresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1030, _Internal::getvirtualselectedparentchainfromblockresponse(this), target, stream);
  }

  // .protowire.GetBlocksRequestMessage getBlocksRequest = 1031;
  if (_internal_has_getblocksrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1031, _Internal::getblocksrequest(this), target, stream);
  }

  // .protowire.GetBlocksResponseMessage getBlocksResponse = 1032;
  if (_internal_has_getblocksresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1032, _Internal::getblocksresponse(this), target, stream);
  }

  // .protowire.GetBlockCountRequestMessage getBlockCountRequest = 1033;
  if (_internal_has_getblockcountrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1033, _Internal::getblockcountrequest(this), target, stream);
  }

  // .protowire.GetBlockCountResponseMessage getBlockCountResponse = 1034;
  if (_internal_has_getblockcountresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1034, _Internal::getblockcountresponse(this), target, stream);
  }

  // .protowire.GetBlockDagInfoRequestMessage getBlockDagInfoRequest = 1035;
  if (_internal_has_getblockdaginforequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1035, _Internal::getblockdaginforequest(this), target, stream);
  }

  // .protowire.GetBlockDagInfoResponseMessage getBlockDagInfoResponse = 1036;
  if (_internal_has_getblockdaginforesponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1036, _Internal::getblockdaginforesponse(this), target, stream);
  }

  // .protowire.ResolveFinalityConflictRequestMessage resolveFinalityConflictRequest = 1037;
  if (_internal_has_resolvefinalityconflictrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1037, _Internal::resolvefinalityconflictrequest(this), target, stream);
  }

  // .protowire.ResolveFinalityConflictResponseMessage resolveFinalityConflictResponse = 1038;
  if (_internal_has_resolvefinalityconflictresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1038, _Internal::resolvefinalityconflictresponse(this), target, stream);
  }

  // .protowire.NotifyFinalityConflictsRequestMessage notifyFinalityConflictsRequest = 1039;
  if (_internal_has_notifyfinalityconflictsrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1039, _Internal::notifyfinalityconflictsrequest(this), target, stream);
  }

  // .protowire.NotifyFinalityConflictsResponseMessage notifyFinalityConflictsResponse = 1040;
  if (_internal_has_notifyfinalityconflictsresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1040, _Internal::notifyfinalityconflictsresponse(this), target, stream);
  }

  // .protowire.FinalityConflictNotificationMessage finalityConflictNotification = 1041;
  if (_internal_has_finalityconflictnotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1041, _Internal::finalityconflictnotification(this), target, stream);
  }

  // .protowire.FinalityConflictResolvedNotificationMessage finalityConflictResolvedNotification = 1042;
  if (_internal_has_finalityconflictresolvednotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1042, _Internal::finalityconflictresolvednotification(this), target, stream);
  }

  // .protowire.GetMempoolEntriesRequestMessage getMempoolEntriesRequest = 1043;
  if (_internal_has_getmempoolentriesrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1043, _Internal::getmempoolentriesrequest(this), target, stream);
  }

  // .protowire.GetMempoolEntriesResponseMessage getMempoolEntriesResponse = 1044;
  if (_internal_has_getmempoolentriesresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1044, _Internal::getmempoolentriesresponse(this), target, stream);
  }

  // .protowire.ShutDownRequestMessage shutDownRequest = 1045;
  if (_internal_has_shutdownrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1045, _Internal::shutdownrequest(this), target, stream);
  }

  // .protowire.ShutDownResponseMessage shutDownResponse = 1046;
  if (_internal_has_shutdownresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1046, _Internal::shutdownresponse(this), target, stream);
  }

  // .protowire.GetHeadersRequestMessage getHeadersRequest = 1047;
  if (_internal_has_getheadersrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1047, _Internal::getheadersrequest(this), target, stream);
  }

  // .protowire.GetHeadersResponseMessage getHeadersResponse = 1048;
  if (_internal_has_getheadersresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1048, _Internal::getheadersresponse(this), target, stream);
  }

  // .protowire.NotifyUtxosChangedRequestMessage notifyUtxosChangedRequest = 1049;
  if (_internal_has_notifyutxoschangedrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1049, _Internal::notifyutxoschangedrequest(this), target, stream);
  }

  // .protowire.NotifyUtxosChangedResponseMessage notifyUtxosChangedResponse = 1050;
  if (_internal_has_notifyutxoschangedresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1050, _Internal::notifyutxoschangedresponse(this), target, stream);
  }

  // .protowire.UtxosChangedNotificationMessage utxosChangedNotification = 1051;
  if (_internal_has_utxoschangednotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1051, _Internal::utxoschangednotification(this), target, stream);
  }

  // .protowire.GetUtxosByAddressesRequestMessage getUtxosByAddressesRequest = 1052;
  if (_internal_has_getutxosbyaddressesrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1052, _Internal::getutxosbyaddressesrequest(this), target, stream);
  }

  // .protowire.GetUtxosByAddressesResponseMessage getUtxosByAddressesResponse = 1053;
  if (_internal_has_getutxosbyaddressesresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1053, _Internal::getutxosbyaddressesresponse(this), target, stream);
  }

  // .protowire.GetVirtualSelectedParentBlueScoreRequestMessage getVirtualSelectedParentBlueScoreRequest = 1054;
  if (_internal_has_getvirtualselectedparentbluescorerequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1054, _Internal::getvirtualselectedparentbluescorerequest(this), target, stream);
  }

  // .protowire.GetVirtualSelectedParentBlueScoreResponseMessage getVirtualSelectedParentBlueScoreResponse = 1055;
  if (_internal_has_getvirtualselectedparentbluescoreresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1055, _Internal::getvirtualselectedparentbluescoreresponse(this), target, stream);
  }

  // .protowire.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage notifyVirtualSelectedParentBlueScoreChangedRequest = 1056;
  if (_internal_has_notifyvirtualselectedparentbluescorechangedrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1056, _Internal::notifyvirtualselectedparentbluescorechangedrequest(this), target, stream);
  }

  // .protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage notifyVirtualSelectedParentBlueScoreChangedResponse = 1057;
  if (_internal_has_notifyvirtualselectedparentbluescorechangedresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1057, _Internal::notifyvirtualselectedparentbluescorechangedresponse(this), target, stream);
  }

  // .protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage virtualSelectedParentBlueScoreChangedNotification = 1058;
  if (_internal_has_virtualselectedparentbluescorechangednotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1058, _Internal::virtualselectedparentbluescorechangednotification(this), target, stream);
  }

  // .protowire.BanRequestMessage banRequest = 1059;
  if (_internal_has_banrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1059, _Internal::banrequest(this), target, stream);
  }

  // .protowire.BanResponseMessage banResponse = 1060;
  if (_internal_has_banresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1060, _Internal::banresponse(this), target, stream);
  }

  // .protowire.UnbanRequestMessage unbanRequest = 1061;
  if (_internal_has_unbanrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1061, _Internal::unbanrequest(this), target, stream);
  }

  // .protowire.UnbanResponseMessage unbanResponse = 1062;
  if (_internal_has_unbanresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1062, _Internal::unbanresponse(this), target, stream);
  }

  // .protowire.GetInfoRequestMessage getInfoRequest = 1063;
  if (_internal_has_getinforequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1063, _Internal::getinforequest(this), target, stream);
  }

  // .protowire.GetInfoResponseMessage getInfoResponse = 1064;
  if (_internal_has_getinforesponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1064, _Internal::getinforesponse(this), target, stream);
  }

  // .protowire.StopNotifyingUtxosChangedRequestMessage stopNotifyingUtxosChangedRequest = 1065;
  if (_internal_has_stopnotifyingutxoschangedrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1065, _Internal::stopnotifyingutxoschangedrequest(this), target, stream);
  }

  // .protowire.StopNotifyingUtxosChangedResponseMessage stopNotifyingUtxosChangedResponse = 1066;
  if (_internal_has_stopnotifyingutxoschangedresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1066, _Internal::stopnotifyingutxoschangedresponse(this), target, stream);
  }

  // .protowire.NotifyPruningPointUTXOSetOverrideRequestMessage notifyPruningPointUTXOSetOverrideRequest = 1067;
  if (_internal_has_notifypruningpointutxosetoverriderequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1067, _Internal::notifypruningpointutxosetoverriderequest(this), target, stream);
  }

  // .protowire.NotifyPruningPointUTXOSetOverrideResponseMessage notifyPruningPointUTXOSetOverrideResponse = 1068;
  if (_internal_has_notifypruningpointutxosetoverrideresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1068, _Internal::notifypruningpointutxosetoverrideresponse(this), target, stream);
  }

  // .protowire.PruningPointUTXOSetOverrideNotificationMessage pruningPointUTXOSetOverrideNotification = 1069;
  if (_internal_has_pruningpointutxosetoverridenotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1069, _Internal::pruningpointutxosetoverridenotification(this), target, stream);
  }

  // .protowire.StopNotifyingPruningPointUTXOSetOverrideRequestMessage stopNotifyingPruningPointUTXOSetOverrideRequest = 1070;
  if (_internal_has_stopnotifyingpruningpointutxosetoverriderequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1070, _Internal::stopnotifyingpruningpointutxosetoverriderequest(this), target, stream);
  }

  // .protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage stopNotifyingPruningPointUTXOSetOverrideResponse = 1071;
  if (_internal_has_stopnotifyingpruningpointutxosetoverrideresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1071, _Internal::stopnotifyingpruningpointutxosetoverrideresponse(this), target, stream);
  }

  // .protowire.EstimateNetworkHashesPerSecondRequestMessage estimateNetworkHashesPerSecondRequest = 1072;
  if (_internal_has_estimatenetworkhashespersecondrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1072, _Internal::estimatenetworkhashespersecondrequest(this), target, stream);
  }

  // .protowire.EstimateNetworkHashesPerSecondResponseMessage estimateNetworkHashesPerSecondResponse = 1073;
  if (_internal_has_estimatenetworkhashespersecondresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1073, _Internal::estimatenetworkhashespersecondresponse(this), target, stream);
  }

  // .protowire.NotifyVirtualDaaScoreChangedRequestMessage notifyVirtualDaaScoreChangedRequest = 1074;
  if (_internal_has_notifyvirtualdaascorechangedrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1074, _Internal::notifyvirtualdaascorechangedrequest(this), target, stream);
  }

  // .protowire.NotifyVirtualDaaScoreChangedResponseMessage notifyVirtualDaaScoreChangedResponse = 1075;
  if (_internal_has_notifyvirtualdaascorechangedresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1075, _Internal::notifyvirtualdaascorechangedresponse(this), target, stream);
  }

  // .protowire.VirtualDaaScoreChangedNotificationMessage virtualDaaScoreChangedNotification = 1076;
  if (_internal_has_virtualdaascorechangednotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1076, _Internal::virtualdaascorechangednotification(this), target, stream);
  }

  // .protowire.GetBalanceByAddressRequestMessage getBalanceByAddressRequest = 1077;
  if (_internal_has_getbalancebyaddressrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1077, _Internal::getbalancebyaddressrequest(this), target, stream);
  }

  // .protowire.GetBalanceByAddressResponseMessage getBalanceByAddressResponse = 1078;
  if (_internal_has_getbalancebyaddressresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1078, _Internal::getbalancebyaddressresponse(this), target, stream);
  }

  // .protowire.GetBalancesByAddressesRequestMessage getBalancesByAddressesRequest = 1079;
  if (_internal_has_getbalancesbyaddressesrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1079, _Internal::getbalancesbyaddressesrequest(this), target, stream);
  }

  // .protowire.GetBalancesByAddressesResponseMessage getBalancesByAddressesResponse = 1080;
  if (_internal_has_getbalancesbyaddressesresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1080, _Internal::getbalancesbyaddressesresponse(this), target, stream);
  }

  // .protowire.NotifyNewBlockTemplateRequestMessage notifyNewBlockTemplateRequest = 1081;
  if (_internal_has_notifynewblocktemplaterequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1081, _Internal::notifynewblocktemplaterequest(this), target, stream);
  }

  // .protowire.NotifyNewBlockTemplateResponseMessage notifyNewBlockTemplateResponse = 1082;
  if (_internal_has_notifynewblocktemplateresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1082, _Internal::notifynewblocktemplateresponse(this), target, stream);
  }

  // .protowire.NewBlockTemplateNotificationMessage newBlockTemplateNotification = 1083;
  if (_internal_has_newblocktemplatenotification()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1083, _Internal::newblocktemplatenotification(this), target, stream);
  }

  // .protowire.GetMempoolEntriesByAddressesRequestMessage getMempoolEntriesByAddressesRequest = 1084;
  if (_internal_has_getmempoolentriesbyaddressesrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1084, _Internal::getmempoolentriesbyaddressesrequest(this), target, stream);
  }

  // .protowire.GetMempoolEntriesByAddressesResponseMessage getMempoolEntriesByAddressesResponse = 1085;
  if (_internal_has_getmempoolentriesbyaddressesresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1085, _Internal::getmempoolentriesbyaddressesresponse(this), target, stream);
  }

  // .protowire.GetCoinSupplyRequestMessage getCoinSupplyRequest = 1086;
  if (_internal_has_getcoinsupplyrequest()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1086, _Internal::getcoinsupplyrequest(this), target, stream);
  }

  // .protowire.GetCoinSupplyResponseMessage getCoinSupplyResponse = 1087;
  if (_internal_has_getcoinsupplyresponse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1087, _Internal::getcoinsupplyresponse(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.KaspadMessage)
  return target;
}

size_t KaspadMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.KaspadMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .protowire.AddressesMessage addresses = 1;
    case kAddresses: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.addresses_);
      break;
    }
    // .protowire.BlockMessage block = 2;
    case kBlock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.block_);
      break;
    }
    // .protowire.TransactionMessage transaction = 3;
    case kTransaction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.transaction_);
      break;
    }
    // .protowire.BlockLocatorMessage blockLocator = 5;
    case kBlockLocator: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.blocklocator_);
      break;
    }
    // .protowire.RequestAddressesMessage requestAddresses = 6;
    case kRequestAddresses: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestaddresses_);
      break;
    }
    // .protowire.RequestRelayBlocksMessage requestRelayBlocks = 10;
    case kRequestRelayBlocks: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestrelayblocks_);
      break;
    }
    // .protowire.RequestTransactionsMessage requestTransactions = 12;
    case kRequestTransactions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requesttransactions_);
      break;
    }
    // .protowire.BlockMessage ibdBlock = 13;
    case kIbdBlock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.ibdblock_);
      break;
    }
    // .protowire.InvRelayBlockMessage invRelayBlock = 14;
    case kInvRelayBlock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.invrelayblock_);
      break;
    }
    // .protowire.InvTransactionsMessage invTransactions = 15;
    case kInvTransactions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.invtransactions_);
      break;
    }
    // .protowire.PingMessage ping = 16;
    case kPing: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.ping_);
      break;
    }
    // .protowire.PongMessage pong = 17;
    case kPong: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.pong_);
      break;
    }
    // .protowire.VerackMessage verack = 19;
    case kVerack: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.verack_);
      break;
    }
    // .protowire.VersionMessage version = 20;
    case kVersion: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.version_);
      break;
    }
    // .protowire.TransactionNotFoundMessage transactionNotFound = 21;
    case kTransactionNotFound: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.transactionnotfound_);
      break;
    }
    // .protowire.RejectMessage reject = 22;
    case kReject: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.reject_);
      break;
    }
    // .protowire.PruningPointUtxoSetChunkMessage pruningPointUtxoSetChunk = 25;
    case kPruningPointUtxoSetChunk: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.pruningpointutxosetchunk_);
      break;
    }
    // .protowire.RequestIBDBlocksMessage requestIBDBlocks = 26;
    case kRequestIBDBlocks: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestibdblocks_);
      break;
    }
    // .protowire.UnexpectedPruningPointMessage unexpectedPruningPoint = 27;
    case kUnexpectedPruningPoint: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.unexpectedpruningpoint_);
      break;
    }
    // .protowire.IbdBlockLocatorMessage ibdBlockLocator = 30;
    case kIbdBlockLocator: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.ibdblocklocator_);
      break;
    }
    // .protowire.IbdBlockLocatorHighestHashMessage ibdBlockLocatorHighestHash = 31;
    case kIbdBlockLocatorHighestHash: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.ibdblocklocatorhighesthash_);
      break;
    }
    // .protowire.RequestNextPruningPointUtxoSetChunkMessage requestNextPruningPointUtxoSetChunk = 33;
    case kRequestNextPruningPointUtxoSetChunk: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestnextpruningpointutxosetchunk_);
      break;
    }
    // .protowire.DonePruningPointUtxoSetChunksMessage donePruningPointUtxoSetChunks = 34;
    case kDonePruningPointUtxoSetChunks: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.donepruningpointutxosetchunks_);
      break;
    }
    // .protowire.IbdBlockLocatorHighestHashNotFoundMessage ibdBlockLocatorHighestHashNotFound = 35;
    case kIbdBlockLocatorHighestHashNotFound: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.ibdblocklocatorhighesthashnotfound_);
      break;
    }
    // .protowire.BlockWithTrustedDataMessage blockWithTrustedData = 36;
    case kBlockWithTrustedData: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.blockwithtrusteddata_);
      break;
    }
    // .protowire.DoneBlocksWithTrustedDataMessage doneBlocksWithTrustedData = 37;
    case kDoneBlocksWithTrustedData: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.doneblockswithtrusteddata_);
      break;
    }
    // .protowire.RequestPruningPointAndItsAnticoneMessage requestPruningPointAndItsAnticone = 40;
    case kRequestPruningPointAndItsAnticone: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestpruningpointanditsanticone_);
      break;
    }
    // .protowire.BlockHeadersMessage blockHeaders = 41;
    case kBlockHeaders: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.blockheaders_);
      break;
    }
    // .protowire.RequestNextHeadersMessage requestNextHeaders = 42;
    case kRequestNextHeaders: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestnextheaders_);
      break;
    }
    // .protowire.DoneHeadersMessage DoneHeaders = 43;
    case kDoneHeaders: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.doneheaders_);
      break;
    }
    // .protowire.RequestPruningPointUTXOSetMessage requestPruningPointUTXOSet = 44;
    case kRequestPruningPointUTXOSet: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestpruningpointutxoset_);
      break;
    }
    // .protowire.RequestHeadersMessage requestHeaders = 45;
    case kRequestHeaders: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestheaders_);
      break;
    }
    // .protowire.RequestBlockLocatorMessage requestBlockLocator = 46;
    case kRequestBlockLocator: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestblocklocator_);
      break;
    }
    // .protowire.PruningPointsMessage pruningPoints = 47;
    case kPruningPoints: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.pruningpoints_);
      break;
    }
    // .protowire.RequestPruningPointProofMessage requestPruningPointProof = 48;
    case kRequestPruningPointProof: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestpruningpointproof_);
      break;
    }
    // .protowire.PruningPointProofMessage pruningPointProof = 49;
    case kPruningPointProof: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.pruningpointproof_);
      break;
    }
    // .protowire.ReadyMessage ready = 50;
    case kReady: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.ready_);
      break;
    }
    // .protowire.BlockWithTrustedDataV4Message blockWithTrustedDataV4 = 51;
    case kBlockWithTrustedDataV4: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.blockwithtrusteddatav4_);
      break;
    }
    // .protowire.TrustedDataMessage trustedData = 52;
    case kTrustedData: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.trusteddata_);
      break;
    }
    // .protowire.RequestIBDChainBlockLocatorMessage requestIBDChainBlockLocator = 53;
    case kRequestIBDChainBlockLocator: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestibdchainblocklocator_);
      break;
    }
    // .protowire.IbdChainBlockLocatorMessage ibdChainBlockLocator = 54;
    case kIbdChainBlockLocator: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.ibdchainblocklocator_);
      break;
    }
    // .protowire.RequestAnticoneMessage requestAnticone = 55;
    case kRequestAnticone: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestanticone_);
      break;
    }
    // .protowire.RequestNextPruningPointAndItsAnticoneBlocksMessage requestNextPruningPointAndItsAnticoneBlocks = 56;
    case kRequestNextPruningPointAndItsAnticoneBlocks: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.requestnextpruningpointanditsanticoneblocks_);
      break;
    }
    // .protowire.GetCurrentNetworkRequestMessage getCurrentNetworkRequest = 1001;
    case kGetCurrentNetworkRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getcurrentnetworkrequest_);
      break;
    }
    // .protowire.GetCurrentNetworkResponseMessage getCurrentNetworkResponse = 1002;
    case kGetCurrentNetworkResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getcurrentnetworkresponse_);
      break;
    }
    // .protowire.SubmitBlockRequestMessage submitBlockRequest = 1003;
    case kSubmitBlockRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.submitblockrequest_);
      break;
    }
    // .protowire.SubmitBlockResponseMessage submitBlockResponse = 1004;
    case kSubmitBlockResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.submitblockresponse_);
      break;
    }
    // .protowire.GetBlockTemplateRequestMessage getBlockTemplateRequest = 1005;
    case kGetBlockTemplateRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblocktemplaterequest_);
      break;
    }
    // .protowire.GetBlockTemplateResponseMessage getBlockTemplateResponse = 1006;
    case kGetBlockTemplateResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblocktemplateresponse_);
      break;
    }
    // .protowire.NotifyBlockAddedRequestMessage notifyBlockAddedRequest = 1007;
    case kNotifyBlockAddedRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyblockaddedrequest_);
      break;
    }
    // .protowire.NotifyBlockAddedResponseMessage notifyBlockAddedResponse = 1008;
    case kNotifyBlockAddedResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyblockaddedresponse_);
      break;
    }
    // .protowire.BlockAddedNotificationMessage blockAddedNotification = 1009;
    case kBlockAddedNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.blockaddednotification_);
      break;
    }
    // .protowire.GetPeerAddressesRequestMessage getPeerAddressesRequest = 1010;
    case kGetPeerAddressesRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getpeeraddressesrequest_);
      break;
    }
    // .protowire.GetPeerAddressesResponseMessage getPeerAddressesResponse = 1011;
    case kGetPeerAddressesResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getpeeraddressesresponse_);
      break;
    }
    // .protowire.GetSelectedTipHashRequestMessage getSelectedTipHashRequest = 1012;
    case kGetSelectedTipHashRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getselectedtiphashrequest_);
      break;
    }
    // .protowire.GetSelectedTipHashResponseMessage getSelectedTipHashResponse = 1013;
    case kGetSelectedTipHashResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getselectedtiphashresponse_);
      break;
    }
    // .protowire.GetMempoolEntryRequestMessage getMempoolEntryRequest = 1014;
    case kGetMempoolEntryRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getmempoolentryrequest_);
      break;
    }
    // .protowire.GetMempoolEntryResponseMessage getMempoolEntryResponse = 1015;
    case kGetMempoolEntryResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getmempoolentryresponse_);
      break;
    }
    // .protowire.GetConnectedPeerInfoRequestMessage getConnectedPeerInfoRequest = 1016;
    case kGetConnectedPeerInfoRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getconnectedpeerinforequest_);
      break;
    }
    // .protowire.GetConnectedPeerInfoResponseMessage getConnectedPeerInfoResponse = 1017;
    case kGetConnectedPeerInfoResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getconnectedpeerinforesponse_);
      break;
    }
    // .protowire.AddPeerRequestMessage addPeerRequest = 1018;
    case kAddPeerRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.addpeerrequest_);
      break;
    }
    // .protowire.AddPeerResponseMessage addPeerResponse = 1019;
    case kAddPeerResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.addpeerresponse_);
      break;
    }
    // .protowire.SubmitTransactionRequestMessage submitTransactionRequest = 1020;
    case kSubmitTransactionRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.submittransactionrequest_);
      break;
    }
    // .protowire.SubmitTransactionResponseMessage submitTransactionResponse = 1021;
    case kSubmitTransactionResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.submittransactionresponse_);
      break;
    }
    // .protowire.NotifyVirtualSelectedParentChainChangedRequestMessage notifyVirtualSelectedParentChainChangedRequest = 1022;
    case kNotifyVirtualSelectedParentChainChangedRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyvirtualselectedparentchainchangedrequest_);
      break;
    }
    // .protowire.NotifyVirtualSelectedParentChainChangedResponseMessage notifyVirtualSelectedParentChainChangedResponse = 1023;
    case kNotifyVirtualSelectedParentChainChangedResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyvirtualselectedparentchainchangedresponse_);
      break;
    }
    // .protowire.VirtualSelectedParentChainChangedNotificationMessage virtualSelectedParentChainChangedNotification = 1024;
    case kVirtualSelectedParentChainChangedNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.virtualselectedparentchainchangednotification_);
      break;
    }
    // .protowire.GetBlockRequestMessage getBlockRequest = 1025;
    case kGetBlockRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblockrequest_);
      break;
    }
    // .protowire.GetBlockResponseMessage getBlockResponse = 1026;
    case kGetBlockResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblockresponse_);
      break;
    }
    // .protowire.GetSubnetworkRequestMessage getSubnetworkRequest = 1027;
    case kGetSubnetworkRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getsubnetworkrequest_);
      break;
    }
    // .protowire.GetSubnetworkResponseMessage getSubnetworkResponse = 1028;
    case kGetSubnetworkResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getsubnetworkresponse_);
      break;
    }
    // .protowire.GetVirtualSelectedParentChainFromBlockRequestMessage getVirtualSelectedParentChainFromBlockRequest = 1029;
    case kGetVirtualSelectedParentChainFromBlockRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getvirtualselectedparentchainfromblockrequest_);
      break;
    }
    // .protowire.GetVirtualSelectedParentChainFromBlockResponseMessage getVirtualSelectedParentChainFromBlockResponse = 1030;
    case kGetVirtualSelectedParentChainFromBlockResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getvirtualselectedparentchainfromblockresponse_);
      break;
    }
    // .protowire.GetBlocksRequestMessage getBlocksRequest = 1031;
    case kGetBlocksRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblocksrequest_);
      break;
    }
    // .protowire.GetBlocksResponseMessage getBlocksResponse = 1032;
    case kGetBlocksResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblocksresponse_);
      break;
    }
    // .protowire.GetBlockCountRequestMessage getBlockCountRequest = 1033;
    case kGetBlockCountRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblockcountrequest_);
      break;
    }
    // .protowire.GetBlockCountResponseMessage getBlockCountResponse = 1034;
    case kGetBlockCountResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblockcountresponse_);
      break;
    }
    // .protowire.GetBlockDagInfoRequestMessage getBlockDagInfoRequest = 1035;
    case kGetBlockDagInfoRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblockdaginforequest_);
      break;
    }
    // .protowire.GetBlockDagInfoResponseMessage getBlockDagInfoResponse = 1036;
    case kGetBlockDagInfoResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getblockdaginforesponse_);
      break;
    }
    // .protowire.ResolveFinalityConflictRequestMessage resolveFinalityConflictRequest = 1037;
    case kResolveFinalityConflictRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.resolvefinalityconflictrequest_);
      break;
    }
    // .protowire.ResolveFinalityConflictResponseMessage resolveFinalityConflictResponse = 1038;
    case kResolveFinalityConflictResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.resolvefinalityconflictresponse_);
      break;
    }
    // .protowire.NotifyFinalityConflictsRequestMessage notifyFinalityConflictsRequest = 1039;
    case kNotifyFinalityConflictsRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyfinalityconflictsrequest_);
      break;
    }
    // .protowire.NotifyFinalityConflictsResponseMessage notifyFinalityConflictsResponse = 1040;
    case kNotifyFinalityConflictsResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyfinalityconflictsresponse_);
      break;
    }
    // .protowire.FinalityConflictNotificationMessage finalityConflictNotification = 1041;
    case kFinalityConflictNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.finalityconflictnotification_);
      break;
    }
    // .protowire.FinalityConflictResolvedNotificationMessage finalityConflictResolvedNotification = 1042;
    case kFinalityConflictResolvedNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.finalityconflictresolvednotification_);
      break;
    }
    // .protowire.GetMempoolEntriesRequestMessage getMempoolEntriesRequest = 1043;
    case kGetMempoolEntriesRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getmempoolentriesrequest_);
      break;
    }
    // .protowire.GetMempoolEntriesResponseMessage getMempoolEntriesResponse = 1044;
    case kGetMempoolEntriesResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getmempoolentriesresponse_);
      break;
    }
    // .protowire.ShutDownRequestMessage shutDownRequest = 1045;
    case kShutDownRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.shutdownrequest_);
      break;
    }
    // .protowire.ShutDownResponseMessage shutDownResponse = 1046;
    case kShutDownResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.shutdownresponse_);
      break;
    }
    // .protowire.GetHeadersRequestMessage getHeadersRequest = 1047;
    case kGetHeadersRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getheadersrequest_);
      break;
    }
    // .protowire.GetHeadersResponseMessage getHeadersResponse = 1048;
    case kGetHeadersResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getheadersresponse_);
      break;
    }
    // .protowire.NotifyUtxosChangedRequestMessage notifyUtxosChangedRequest = 1049;
    case kNotifyUtxosChangedRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyutxoschangedrequest_);
      break;
    }
    // .protowire.NotifyUtxosChangedResponseMessage notifyUtxosChangedResponse = 1050;
    case kNotifyUtxosChangedResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyutxoschangedresponse_);
      break;
    }
    // .protowire.UtxosChangedNotificationMessage utxosChangedNotification = 1051;
    case kUtxosChangedNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.utxoschangednotification_);
      break;
    }
    // .protowire.GetUtxosByAddressesRequestMessage getUtxosByAddressesRequest = 1052;
    case kGetUtxosByAddressesRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getutxosbyaddressesrequest_);
      break;
    }
    // .protowire.GetUtxosByAddressesResponseMessage getUtxosByAddressesResponse = 1053;
    case kGetUtxosByAddressesResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getutxosbyaddressesresponse_);
      break;
    }
    // .protowire.GetVirtualSelectedParentBlueScoreRequestMessage getVirtualSelectedParentBlueScoreRequest = 1054;
    case kGetVirtualSelectedParentBlueScoreRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getvirtualselectedparentbluescorerequest_);
      break;
    }
    // .protowire.GetVirtualSelectedParentBlueScoreResponseMessage getVirtualSelectedParentBlueScoreResponse = 1055;
    case kGetVirtualSelectedParentBlueScoreResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getvirtualselectedparentbluescoreresponse_);
      break;
    }
    // .protowire.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage notifyVirtualSelectedParentBlueScoreChangedRequest = 1056;
    case kNotifyVirtualSelectedParentBlueScoreChangedRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyvirtualselectedparentbluescorechangedrequest_);
      break;
    }
    // .protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage notifyVirtualSelectedParentBlueScoreChangedResponse = 1057;
    case kNotifyVirtualSelectedParentBlueScoreChangedResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyvirtualselectedparentbluescorechangedresponse_);
      break;
    }
    // .protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage virtualSelectedParentBlueScoreChangedNotification = 1058;
    case kVirtualSelectedParentBlueScoreChangedNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.virtualselectedparentbluescorechangednotification_);
      break;
    }
    // .protowire.BanRequestMessage banRequest = 1059;
    case kBanRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.banrequest_);
      break;
    }
    // .protowire.BanResponseMessage banResponse = 1060;
    case kBanResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.banresponse_);
      break;
    }
    // .protowire.UnbanRequestMessage unbanRequest = 1061;
    case kUnbanRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.unbanrequest_);
      break;
    }
    // .protowire.UnbanResponseMessage unbanResponse = 1062;
    case kUnbanResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.unbanresponse_);
      break;
    }
    // .protowire.GetInfoRequestMessage getInfoRequest = 1063;
    case kGetInfoRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getinforequest_);
      break;
    }
    // .protowire.GetInfoResponseMessage getInfoResponse = 1064;
    case kGetInfoResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getinforesponse_);
      break;
    }
    // .protowire.StopNotifyingUtxosChangedRequestMessage stopNotifyingUtxosChangedRequest = 1065;
    case kStopNotifyingUtxosChangedRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.stopnotifyingutxoschangedrequest_);
      break;
    }
    // .protowire.StopNotifyingUtxosChangedResponseMessage stopNotifyingUtxosChangedResponse = 1066;
    case kStopNotifyingUtxosChangedResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.stopnotifyingutxoschangedresponse_);
      break;
    }
    // .protowire.NotifyPruningPointUTXOSetOverrideRequestMessage notifyPruningPointUTXOSetOverrideRequest = 1067;
    case kNotifyPruningPointUTXOSetOverrideRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifypruningpointutxosetoverriderequest_);
      break;
    }
    // .protowire.NotifyPruningPointUTXOSetOverrideResponseMessage notifyPruningPointUTXOSetOverrideResponse = 1068;
    case kNotifyPruningPointUTXOSetOverrideResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifypruningpointutxosetoverrideresponse_);
      break;
    }
    // .protowire.PruningPointUTXOSetOverrideNotificationMessage pruningPointUTXOSetOverrideNotification = 1069;
    case kPruningPointUTXOSetOverrideNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.pruningpointutxosetoverridenotification_);
      break;
    }
    // .protowire.StopNotifyingPruningPointUTXOSetOverrideRequestMessage stopNotifyingPruningPointUTXOSetOverrideRequest = 1070;
    case kStopNotifyingPruningPointUTXOSetOverrideRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.stopnotifyingpruningpointutxosetoverriderequest_);
      break;
    }
    // .protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage stopNotifyingPruningPointUTXOSetOverrideResponse = 1071;
    case kStopNotifyingPruningPointUTXOSetOverrideResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.stopnotifyingpruningpointutxosetoverrideresponse_);
      break;
    }
    // .protowire.EstimateNetworkHashesPerSecondRequestMessage estimateNetworkHashesPerSecondRequest = 1072;
    case kEstimateNetworkHashesPerSecondRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.estimatenetworkhashespersecondrequest_);
      break;
    }
    // .protowire.EstimateNetworkHashesPerSecondResponseMessage estimateNetworkHashesPerSecondResponse = 1073;
    case kEstimateNetworkHashesPerSecondResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.estimatenetworkhashespersecondresponse_);
      break;
    }
    // .protowire.NotifyVirtualDaaScoreChangedRequestMessage notifyVirtualDaaScoreChangedRequest = 1074;
    case kNotifyVirtualDaaScoreChangedRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyvirtualdaascorechangedrequest_);
      break;
    }
    // .protowire.NotifyVirtualDaaScoreChangedResponseMessage notifyVirtualDaaScoreChangedResponse = 1075;
    case kNotifyVirtualDaaScoreChangedResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifyvirtualdaascorechangedresponse_);
      break;
    }
    // .protowire.VirtualDaaScoreChangedNotificationMessage virtualDaaScoreChangedNotification = 1076;
    case kVirtualDaaScoreChangedNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.virtualdaascorechangednotification_);
      break;
    }
    // .protowire.GetBalanceByAddressRequestMessage getBalanceByAddressRequest = 1077;
    case kGetBalanceByAddressRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getbalancebyaddressrequest_);
      break;
    }
    // .protowire.GetBalanceByAddressResponseMessage getBalanceByAddressResponse = 1078;
    case kGetBalanceByAddressResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getbalancebyaddressresponse_);
      break;
    }
    // .protowire.GetBalancesByAddressesRequestMessage getBalancesByAddressesRequest = 1079;
    case kGetBalancesByAddressesRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getbalancesbyaddressesrequest_);
      break;
    }
    // .protowire.GetBalancesByAddressesResponseMessage getBalancesByAddressesResponse = 1080;
    case kGetBalancesByAddressesResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getbalancesbyaddressesresponse_);
      break;
    }
    // .protowire.NotifyNewBlockTemplateRequestMessage notifyNewBlockTemplateRequest = 1081;
    case kNotifyNewBlockTemplateRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifynewblocktemplaterequest_);
      break;
    }
    // .protowire.NotifyNewBlockTemplateResponseMessage notifyNewBlockTemplateResponse = 1082;
    case kNotifyNewBlockTemplateResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.notifynewblocktemplateresponse_);
      break;
    }
    // .protowire.NewBlockTemplateNotificationMessage newBlockTemplateNotification = 1083;
    case kNewBlockTemplateNotification: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.newblocktemplatenotification_);
      break;
    }
    // .protowire.GetMempoolEntriesByAddressesRequestMessage getMempoolEntriesByAddressesRequest = 1084;
    case kGetMempoolEntriesByAddressesRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getmempoolentriesbyaddressesrequest_);
      break;
    }
    // .protowire.GetMempoolEntriesByAddressesResponseMessage getMempoolEntriesByAddressesResponse = 1085;
    case kGetMempoolEntriesByAddressesResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getmempoolentriesbyaddressesresponse_);
      break;
    }
    // .protowire.GetCoinSupplyRequestMessage getCoinSupplyRequest = 1086;
    case kGetCoinSupplyRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getcoinsupplyrequest_);
      break;
    }
    // .protowire.GetCoinSupplyResponseMessage getCoinSupplyResponse = 1087;
    case kGetCoinSupplyResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.getcoinsupplyresponse_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KaspadMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KaspadMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KaspadMessage::GetClassData() const { return &_class_data_; }

void KaspadMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KaspadMessage *>(to)->MergeFrom(
      static_cast<const KaspadMessage &>(from));
}


void KaspadMessage::MergeFrom(const KaspadMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.KaspadMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kAddresses: {
      _internal_mutable_addresses()->::protowire::AddressesMessage::MergeFrom(from._internal_addresses());
      break;
    }
    case kBlock: {
      _internal_mutable_block()->::protowire::BlockMessage::MergeFrom(from._internal_block());
      break;
    }
    case kTransaction: {
      _internal_mutable_transaction()->::protowire::TransactionMessage::MergeFrom(from._internal_transaction());
      break;
    }
    case kBlockLocator: {
      _internal_mutable_blocklocator()->::protowire::BlockLocatorMessage::MergeFrom(from._internal_blocklocator());
      break;
    }
    case kRequestAddresses: {
      _internal_mutable_requestaddresses()->::protowire::RequestAddressesMessage::MergeFrom(from._internal_requestaddresses());
      break;
    }
    case kRequestRelayBlocks: {
      _internal_mutable_requestrelayblocks()->::protowire::RequestRelayBlocksMessage::MergeFrom(from._internal_requestrelayblocks());
      break;
    }
    case kRequestTransactions: {
      _internal_mutable_requesttransactions()->::protowire::RequestTransactionsMessage::MergeFrom(from._internal_requesttransactions());
      break;
    }
    case kIbdBlock: {
      _internal_mutable_ibdblock()->::protowire::BlockMessage::MergeFrom(from._internal_ibdblock());
      break;
    }
    case kInvRelayBlock: {
      _internal_mutable_invrelayblock()->::protowire::InvRelayBlockMessage::MergeFrom(from._internal_invrelayblock());
      break;
    }
    case kInvTransactions: {
      _internal_mutable_invtransactions()->::protowire::InvTransactionsMessage::MergeFrom(from._internal_invtransactions());
      break;
    }
    case kPing: {
      _internal_mutable_ping()->::protowire::PingMessage::MergeFrom(from._internal_ping());
      break;
    }
    case kPong: {
      _internal_mutable_pong()->::protowire::PongMessage::MergeFrom(from._internal_pong());
      break;
    }
    case kVerack: {
      _internal_mutable_verack()->::protowire::VerackMessage::MergeFrom(from._internal_verack());
      break;
    }
    case kVersion: {
      _internal_mutable_version()->::protowire::VersionMessage::MergeFrom(from._internal_version());
      break;
    }
    case kTransactionNotFound: {
      _internal_mutable_transactionnotfound()->::protowire::TransactionNotFoundMessage::MergeFrom(from._internal_transactionnotfound());
      break;
    }
    case kReject: {
      _internal_mutable_reject()->::protowire::RejectMessage::MergeFrom(from._internal_reject());
      break;
    }
    case kPruningPointUtxoSetChunk: {
      _internal_mutable_pruningpointutxosetchunk()->::protowire::PruningPointUtxoSetChunkMessage::MergeFrom(from._internal_pruningpointutxosetchunk());
      break;
    }
    case kRequestIBDBlocks: {
      _internal_mutable_requestibdblocks()->::protowire::RequestIBDBlocksMessage::MergeFrom(from._internal_requestibdblocks());
      break;
    }
    case kUnexpectedPruningPoint: {
      _internal_mutable_unexpectedpruningpoint()->::protowire::UnexpectedPruningPointMessage::MergeFrom(from._internal_unexpectedpruningpoint());
      break;
    }
    case kIbdBlockLocator: {
      _internal_mutable_ibdblocklocator()->::protowire::IbdBlockLocatorMessage::MergeFrom(from._internal_ibdblocklocator());
      break;
    }
    case kIbdBlockLocatorHighestHash: {
      _internal_mutable_ibdblocklocatorhighesthash()->::protowire::IbdBlockLocatorHighestHashMessage::MergeFrom(from._internal_ibdblocklocatorhighesthash());
      break;
    }
    case kRequestNextPruningPointUtxoSetChunk: {
      _internal_mutable_requestnextpruningpointutxosetchunk()->::protowire::RequestNextPruningPointUtxoSetChunkMessage::MergeFrom(from._internal_requestnextpruningpointutxosetchunk());
      break;
    }
    case kDonePruningPointUtxoSetChunks: {
      _internal_mutable_donepruningpointutxosetchunks()->::protowire::DonePruningPointUtxoSetChunksMessage::MergeFrom(from._internal_donepruningpointutxosetchunks());
      break;
    }
    case kIbdBlockLocatorHighestHashNotFound: {
      _internal_mutable_ibdblocklocatorhighesthashnotfound()->::protowire::IbdBlockLocatorHighestHashNotFoundMessage::MergeFrom(from._internal_ibdblocklocatorhighesthashnotfound());
      break;
    }
    case kBlockWithTrustedData: {
      _internal_mutable_blockwithtrusteddata()->::protowire::BlockWithTrustedDataMessage::MergeFrom(from._internal_blockwithtrusteddata());
      break;
    }
    case kDoneBlocksWithTrustedData: {
      _internal_mutable_doneblockswithtrusteddata()->::protowire::DoneBlocksWithTrustedDataMessage::MergeFrom(from._internal_doneblockswithtrusteddata());
      break;
    }
    case kRequestPruningPointAndItsAnticone: {
      _internal_mutable_requestpruningpointanditsanticone()->::protowire::RequestPruningPointAndItsAnticoneMessage::MergeFrom(from._internal_requestpruningpointanditsanticone());
      break;
    }
    case kBlockHeaders: {
      _internal_mutable_blockheaders()->::protowire::BlockHeadersMessage::MergeFrom(from._internal_blockheaders());
      break;
    }
    case kRequestNextHeaders: {
      _internal_mutable_requestnextheaders()->::protowire::RequestNextHeadersMessage::MergeFrom(from._internal_requestnextheaders());
      break;
    }
    case kDoneHeaders: {
      _internal_mutable_doneheaders()->::protowire::DoneHeadersMessage::MergeFrom(from._internal_doneheaders());
      break;
    }
    case kRequestPruningPointUTXOSet: {
      _internal_mutable_requestpruningpointutxoset()->::protowire::RequestPruningPointUTXOSetMessage::MergeFrom(from._internal_requestpruningpointutxoset());
      break;
    }
    case kRequestHeaders: {
      _internal_mutable_requestheaders()->::protowire::RequestHeadersMessage::MergeFrom(from._internal_requestheaders());
      break;
    }
    case kRequestBlockLocator: {
      _internal_mutable_requestblocklocator()->::protowire::RequestBlockLocatorMessage::MergeFrom(from._internal_requestblocklocator());
      break;
    }
    case kPruningPoints: {
      _internal_mutable_pruningpoints()->::protowire::PruningPointsMessage::MergeFrom(from._internal_pruningpoints());
      break;
    }
    case kRequestPruningPointProof: {
      _internal_mutable_requestpruningpointproof()->::protowire::RequestPruningPointProofMessage::MergeFrom(from._internal_requestpruningpointproof());
      break;
    }
    case kPruningPointProof: {
      _internal_mutable_pruningpointproof()->::protowire::PruningPointProofMessage::MergeFrom(from._internal_pruningpointproof());
      break;
    }
    case kReady: {
      _internal_mutable_ready()->::protowire::ReadyMessage::MergeFrom(from._internal_ready());
      break;
    }
    case kBlockWithTrustedDataV4: {
      _internal_mutable_blockwithtrusteddatav4()->::protowire::BlockWithTrustedDataV4Message::MergeFrom(from._internal_blockwithtrusteddatav4());
      break;
    }
    case kTrustedData: {
      _internal_mutable_trusteddata()->::protowire::TrustedDataMessage::MergeFrom(from._internal_trusteddata());
      break;
    }
    case kRequestIBDChainBlockLocator: {
      _internal_mutable_requestibdchainblocklocator()->::protowire::RequestIBDChainBlockLocatorMessage::MergeFrom(from._internal_requestibdchainblocklocator());
      break;
    }
    case kIbdChainBlockLocator: {
      _internal_mutable_ibdchainblocklocator()->::protowire::IbdChainBlockLocatorMessage::MergeFrom(from._internal_ibdchainblocklocator());
      break;
    }
    case kRequestAnticone: {
      _internal_mutable_requestanticone()->::protowire::RequestAnticoneMessage::MergeFrom(from._internal_requestanticone());
      break;
    }
    case kRequestNextPruningPointAndItsAnticoneBlocks: {
      _internal_mutable_requestnextpruningpointanditsanticoneblocks()->::protowire::RequestNextPruningPointAndItsAnticoneBlocksMessage::MergeFrom(from._internal_requestnextpruningpointanditsanticoneblocks());
      break;
    }
    case kGetCurrentNetworkRequest: {
      _internal_mutable_getcurrentnetworkrequest()->::protowire::GetCurrentNetworkRequestMessage::MergeFrom(from._internal_getcurrentnetworkrequest());
      break;
    }
    case kGetCurrentNetworkResponse: {
      _internal_mutable_getcurrentnetworkresponse()->::protowire::GetCurrentNetworkResponseMessage::MergeFrom(from._internal_getcurrentnetworkresponse());
      break;
    }
    case kSubmitBlockRequest: {
      _internal_mutable_submitblockrequest()->::protowire::SubmitBlockRequestMessage::MergeFrom(from._internal_submitblockrequest());
      break;
    }
    case kSubmitBlockResponse: {
      _internal_mutable_submitblockresponse()->::protowire::SubmitBlockResponseMessage::MergeFrom(from._internal_submitblockresponse());
      break;
    }
    case kGetBlockTemplateRequest: {
      _internal_mutable_getblocktemplaterequest()->::protowire::GetBlockTemplateRequestMessage::MergeFrom(from._internal_getblocktemplaterequest());
      break;
    }
    case kGetBlockTemplateResponse: {
      _internal_mutable_getblocktemplateresponse()->::protowire::GetBlockTemplateResponseMessage::MergeFrom(from._internal_getblocktemplateresponse());
      break;
    }
    case kNotifyBlockAddedRequest: {
      _internal_mutable_notifyblockaddedrequest()->::protowire::NotifyBlockAddedRequestMessage::MergeFrom(from._internal_notifyblockaddedrequest());
      break;
    }
    case kNotifyBlockAddedResponse: {
      _internal_mutable_notifyblockaddedresponse()->::protowire::NotifyBlockAddedResponseMessage::MergeFrom(from._internal_notifyblockaddedresponse());
      break;
    }
    case kBlockAddedNotification: {
      _internal_mutable_blockaddednotification()->::protowire::BlockAddedNotificationMessage::MergeFrom(from._internal_blockaddednotification());
      break;
    }
    case kGetPeerAddressesRequest: {
      _internal_mutable_getpeeraddressesrequest()->::protowire::GetPeerAddressesRequestMessage::MergeFrom(from._internal_getpeeraddressesrequest());
      break;
    }
    case kGetPeerAddressesResponse: {
      _internal_mutable_getpeeraddressesresponse()->::protowire::GetPeerAddressesResponseMessage::MergeFrom(from._internal_getpeeraddressesresponse());
      break;
    }
    case kGetSelectedTipHashRequest: {
      _internal_mutable_getselectedtiphashrequest()->::protowire::GetSelectedTipHashRequestMessage::MergeFrom(from._internal_getselectedtiphashrequest());
      break;
    }
    case kGetSelectedTipHashResponse: {
      _internal_mutable_getselectedtiphashresponse()->::protowire::GetSelectedTipHashResponseMessage::MergeFrom(from._internal_getselectedtiphashresponse());
      break;
    }
    case kGetMempoolEntryRequest: {
      _internal_mutable_getmempoolentryrequest()->::protowire::GetMempoolEntryRequestMessage::MergeFrom(from._internal_getmempoolentryrequest());
      break;
    }
    case kGetMempoolEntryResponse: {
      _internal_mutable_getmempoolentryresponse()->::protowire::GetMempoolEntryResponseMessage::MergeFrom(from._internal_getmempoolentryresponse());
      break;
    }
    case kGetConnectedPeerInfoRequest: {
      _internal_mutable_getconnectedpeerinforequest()->::protowire::GetConnectedPeerInfoRequestMessage::MergeFrom(from._internal_getconnectedpeerinforequest());
      break;
    }
    case kGetConnectedPeerInfoResponse: {
      _internal_mutable_getconnectedpeerinforesponse()->::protowire::GetConnectedPeerInfoResponseMessage::MergeFrom(from._internal_getconnectedpeerinforesponse());
      break;
    }
    case kAddPeerRequest: {
      _internal_mutable_addpeerrequest()->::protowire::AddPeerRequestMessage::MergeFrom(from._internal_addpeerrequest());
      break;
    }
    case kAddPeerResponse: {
      _internal_mutable_addpeerresponse()->::protowire::AddPeerResponseMessage::MergeFrom(from._internal_addpeerresponse());
      break;
    }
    case kSubmitTransactionRequest: {
      _internal_mutable_submittransactionrequest()->::protowire::SubmitTransactionRequestMessage::MergeFrom(from._internal_submittransactionrequest());
      break;
    }
    case kSubmitTransactionResponse: {
      _internal_mutable_submittransactionresponse()->::protowire::SubmitTransactionResponseMessage::MergeFrom(from._internal_submittransactionresponse());
      break;
    }
    case kNotifyVirtualSelectedParentChainChangedRequest: {
      _internal_mutable_notifyvirtualselectedparentchainchangedrequest()->::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage::MergeFrom(from._internal_notifyvirtualselectedparentchainchangedrequest());
      break;
    }
    case kNotifyVirtualSelectedParentChainChangedResponse: {
      _internal_mutable_notifyvirtualselectedparentchainchangedresponse()->::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage::MergeFrom(from._internal_notifyvirtualselectedparentchainchangedresponse());
      break;
    }
    case kVirtualSelectedParentChainChangedNotification: {
      _internal_mutable_virtualselectedparentchainchangednotification()->::protowire::VirtualSelectedParentChainChangedNotificationMessage::MergeFrom(from._internal_virtualselectedparentchainchangednotification());
      break;
    }
    case kGetBlockRequest: {
      _internal_mutable_getblockrequest()->::protowire::GetBlockRequestMessage::MergeFrom(from._internal_getblockrequest());
      break;
    }
    case kGetBlockResponse: {
      _internal_mutable_getblockresponse()->::protowire::GetBlockResponseMessage::MergeFrom(from._internal_getblockresponse());
      break;
    }
    case kGetSubnetworkRequest: {
      _internal_mutable_getsubnetworkrequest()->::protowire::GetSubnetworkRequestMessage::MergeFrom(from._internal_getsubnetworkrequest());
      break;
    }
    case kGetSubnetworkResponse: {
      _internal_mutable_getsubnetworkresponse()->::protowire::GetSubnetworkResponseMessage::MergeFrom(from._internal_getsubnetworkresponse());
      break;
    }
    case kGetVirtualSelectedParentChainFromBlockRequest: {
      _internal_mutable_getvirtualselectedparentchainfromblockrequest()->::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage::MergeFrom(from._internal_getvirtualselectedparentchainfromblockrequest());
      break;
    }
    case kGetVirtualSelectedParentChainFromBlockResponse: {
      _internal_mutable_getvirtualselectedparentchainfromblockresponse()->::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage::MergeFrom(from._internal_getvirtualselectedparentchainfromblockresponse());
      break;
    }
    case kGetBlocksRequest: {
      _internal_mutable_getblocksrequest()->::protowire::GetBlocksRequestMessage::MergeFrom(from._internal_getblocksrequest());
      break;
    }
    case kGetBlocksResponse: {
      _internal_mutable_getblocksresponse()->::protowire::GetBlocksResponseMessage::MergeFrom(from._internal_getblocksresponse());
      break;
    }
    case kGetBlockCountRequest: {
      _internal_mutable_getblockcountrequest()->::protowire::GetBlockCountRequestMessage::MergeFrom(from._internal_getblockcountrequest());
      break;
    }
    case kGetBlockCountResponse: {
      _internal_mutable_getblockcountresponse()->::protowire::GetBlockCountResponseMessage::MergeFrom(from._internal_getblockcountresponse());
      break;
    }
    case kGetBlockDagInfoRequest: {
      _internal_mutable_getblockdaginforequest()->::protowire::GetBlockDagInfoRequestMessage::MergeFrom(from._internal_getblockdaginforequest());
      break;
    }
    case kGetBlockDagInfoResponse: {
      _internal_mutable_getblockdaginforesponse()->::protowire::GetBlockDagInfoResponseMessage::MergeFrom(from._internal_getblockdaginforesponse());
      break;
    }
    case kResolveFinalityConflictRequest: {
      _internal_mutable_resolvefinalityconflictrequest()->::protowire::ResolveFinalityConflictRequestMessage::MergeFrom(from._internal_resolvefinalityconflictrequest());
      break;
    }
    case kResolveFinalityConflictResponse: {
      _internal_mutable_resolvefinalityconflictresponse()->::protowire::ResolveFinalityConflictResponseMessage::MergeFrom(from._internal_resolvefinalityconflictresponse());
      break;
    }
    case kNotifyFinalityConflictsRequest: {
      _internal_mutable_notifyfinalityconflictsrequest()->::protowire::NotifyFinalityConflictsRequestMessage::MergeFrom(from._internal_notifyfinalityconflictsrequest());
      break;
    }
    case kNotifyFinalityConflictsResponse: {
      _internal_mutable_notifyfinalityconflictsresponse()->::protowire::NotifyFinalityConflictsResponseMessage::MergeFrom(from._internal_notifyfinalityconflictsresponse());
      break;
    }
    case kFinalityConflictNotification: {
      _internal_mutable_finalityconflictnotification()->::protowire::FinalityConflictNotificationMessage::MergeFrom(from._internal_finalityconflictnotification());
      break;
    }
    case kFinalityConflictResolvedNotification: {
      _internal_mutable_finalityconflictresolvednotification()->::protowire::FinalityConflictResolvedNotificationMessage::MergeFrom(from._internal_finalityconflictresolvednotification());
      break;
    }
    case kGetMempoolEntriesRequest: {
      _internal_mutable_getmempoolentriesrequest()->::protowire::GetMempoolEntriesRequestMessage::MergeFrom(from._internal_getmempoolentriesrequest());
      break;
    }
    case kGetMempoolEntriesResponse: {
      _internal_mutable_getmempoolentriesresponse()->::protowire::GetMempoolEntriesResponseMessage::MergeFrom(from._internal_getmempoolentriesresponse());
      break;
    }
    case kShutDownRequest: {
      _internal_mutable_shutdownrequest()->::protowire::ShutDownRequestMessage::MergeFrom(from._internal_shutdownrequest());
      break;
    }
    case kShutDownResponse: {
      _internal_mutable_shutdownresponse()->::protowire::ShutDownResponseMessage::MergeFrom(from._internal_shutdownresponse());
      break;
    }
    case kGetHeadersRequest: {
      _internal_mutable_getheadersrequest()->::protowire::GetHeadersRequestMessage::MergeFrom(from._internal_getheadersrequest());
      break;
    }
    case kGetHeadersResponse: {
      _internal_mutable_getheadersresponse()->::protowire::GetHeadersResponseMessage::MergeFrom(from._internal_getheadersresponse());
      break;
    }
    case kNotifyUtxosChangedRequest: {
      _internal_mutable_notifyutxoschangedrequest()->::protowire::NotifyUtxosChangedRequestMessage::MergeFrom(from._internal_notifyutxoschangedrequest());
      break;
    }
    case kNotifyUtxosChangedResponse: {
      _internal_mutable_notifyutxoschangedresponse()->::protowire::NotifyUtxosChangedResponseMessage::MergeFrom(from._internal_notifyutxoschangedresponse());
      break;
    }
    case kUtxosChangedNotification: {
      _internal_mutable_utxoschangednotification()->::protowire::UtxosChangedNotificationMessage::MergeFrom(from._internal_utxoschangednotification());
      break;
    }
    case kGetUtxosByAddressesRequest: {
      _internal_mutable_getutxosbyaddressesrequest()->::protowire::GetUtxosByAddressesRequestMessage::MergeFrom(from._internal_getutxosbyaddressesrequest());
      break;
    }
    case kGetUtxosByAddressesResponse: {
      _internal_mutable_getutxosbyaddressesresponse()->::protowire::GetUtxosByAddressesResponseMessage::MergeFrom(from._internal_getutxosbyaddressesresponse());
      break;
    }
    case kGetVirtualSelectedParentBlueScoreRequest: {
      _internal_mutable_getvirtualselectedparentbluescorerequest()->::protowire::GetVirtualSelectedParentBlueScoreRequestMessage::MergeFrom(from._internal_getvirtualselectedparentbluescorerequest());
      break;
    }
    case kGetVirtualSelectedParentBlueScoreResponse: {
      _internal_mutable_getvirtualselectedparentbluescoreresponse()->::protowire::GetVirtualSelectedParentBlueScoreResponseMessage::MergeFrom(from._internal_getvirtualselectedparentbluescoreresponse());
      break;
    }
    case kNotifyVirtualSelectedParentBlueScoreChangedRequest: {
      _internal_mutable_notifyvirtualselectedparentbluescorechangedrequest()->::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::MergeFrom(from._internal_notifyvirtualselectedparentbluescorechangedrequest());
      break;
    }
    case kNotifyVirtualSelectedParentBlueScoreChangedResponse: {
      _internal_mutable_notifyvirtualselectedparentbluescorechangedresponse()->::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::MergeFrom(from._internal_notifyvirtualselectedparentbluescorechangedresponse());
      break;
    }
    case kVirtualSelectedParentBlueScoreChangedNotification: {
      _internal_mutable_virtualselectedparentbluescorechangednotification()->::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage::MergeFrom(from._internal_virtualselectedparentbluescorechangednotification());
      break;
    }
    case kBanRequest: {
      _internal_mutable_banrequest()->::protowire::BanRequestMessage::MergeFrom(from._internal_banrequest());
      break;
    }
    case kBanResponse: {
      _internal_mutable_banresponse()->::protowire::BanResponseMessage::MergeFrom(from._internal_banresponse());
      break;
    }
    case kUnbanRequest: {
      _internal_mutable_unbanrequest()->::protowire::UnbanRequestMessage::MergeFrom(from._internal_unbanrequest());
      break;
    }
    case kUnbanResponse: {
      _internal_mutable_unbanresponse()->::protowire::UnbanResponseMessage::MergeFrom(from._internal_unbanresponse());
      break;
    }
    case kGetInfoRequest: {
      _internal_mutable_getinforequest()->::protowire::GetInfoRequestMessage::MergeFrom(from._internal_getinforequest());
      break;
    }
    case kGetInfoResponse: {
      _internal_mutable_getinforesponse()->::protowire::GetInfoResponseMessage::MergeFrom(from._internal_getinforesponse());
      break;
    }
    case kStopNotifyingUtxosChangedRequest: {
      _internal_mutable_stopnotifyingutxoschangedrequest()->::protowire::StopNotifyingUtxosChangedRequestMessage::MergeFrom(from._internal_stopnotifyingutxoschangedrequest());
      break;
    }
    case kStopNotifyingUtxosChangedResponse: {
      _internal_mutable_stopnotifyingutxoschangedresponse()->::protowire::StopNotifyingUtxosChangedResponseMessage::MergeFrom(from._internal_stopnotifyingutxoschangedresponse());
      break;
    }
    case kNotifyPruningPointUTXOSetOverrideRequest: {
      _internal_mutable_notifypruningpointutxosetoverriderequest()->::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage::MergeFrom(from._internal_notifypruningpointutxosetoverriderequest());
      break;
    }
    case kNotifyPruningPointUTXOSetOverrideResponse: {
      _internal_mutable_notifypruningpointutxosetoverrideresponse()->::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage::MergeFrom(from._internal_notifypruningpointutxosetoverrideresponse());
      break;
    }
    case kPruningPointUTXOSetOverrideNotification: {
      _internal_mutable_pruningpointutxosetoverridenotification()->::protowire::PruningPointUTXOSetOverrideNotificationMessage::MergeFrom(from._internal_pruningpointutxosetoverridenotification());
      break;
    }
    case kStopNotifyingPruningPointUTXOSetOverrideRequest: {
      _internal_mutable_stopnotifyingpruningpointutxosetoverriderequest()->::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage::MergeFrom(from._internal_stopnotifyingpruningpointutxosetoverriderequest());
      break;
    }
    case kStopNotifyingPruningPointUTXOSetOverrideResponse: {
      _internal_mutable_stopnotifyingpruningpointutxosetoverrideresponse()->::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage::MergeFrom(from._internal_stopnotifyingpruningpointutxosetoverrideresponse());
      break;
    }
    case kEstimateNetworkHashesPerSecondRequest: {
      _internal_mutable_estimatenetworkhashespersecondrequest()->::protowire::EstimateNetworkHashesPerSecondRequestMessage::MergeFrom(from._internal_estimatenetworkhashespersecondrequest());
      break;
    }
    case kEstimateNetworkHashesPerSecondResponse: {
      _internal_mutable_estimatenetworkhashespersecondresponse()->::protowire::EstimateNetworkHashesPerSecondResponseMessage::MergeFrom(from._internal_estimatenetworkhashespersecondresponse());
      break;
    }
    case kNotifyVirtualDaaScoreChangedRequest: {
      _internal_mutable_notifyvirtualdaascorechangedrequest()->::protowire::NotifyVirtualDaaScoreChangedRequestMessage::MergeFrom(from._internal_notifyvirtualdaascorechangedrequest());
      break;
    }
    case kNotifyVirtualDaaScoreChangedResponse: {
      _internal_mutable_notifyvirtualdaascorechangedresponse()->::protowire::NotifyVirtualDaaScoreChangedResponseMessage::MergeFrom(from._internal_notifyvirtualdaascorechangedresponse());
      break;
    }
    case kVirtualDaaScoreChangedNotification: {
      _internal_mutable_virtualdaascorechangednotification()->::protowire::VirtualDaaScoreChangedNotificationMessage::MergeFrom(from._internal_virtualdaascorechangednotification());
      break;
    }
    case kGetBalanceByAddressRequest: {
      _internal_mutable_getbalancebyaddressrequest()->::protowire::GetBalanceByAddressRequestMessage::MergeFrom(from._internal_getbalancebyaddressrequest());
      break;
    }
    case kGetBalanceByAddressResponse: {
      _internal_mutable_getbalancebyaddressresponse()->::protowire::GetBalanceByAddressResponseMessage::MergeFrom(from._internal_getbalancebyaddressresponse());
      break;
    }
    case kGetBalancesByAddressesRequest: {
      _internal_mutable_getbalancesbyaddressesrequest()->::protowire::GetBalancesByAddressesRequestMessage::MergeFrom(from._internal_getbalancesbyaddressesrequest());
      break;
    }
    case kGetBalancesByAddressesResponse: {
      _internal_mutable_getbalancesbyaddressesresponse()->::protowire::GetBalancesByAddressesResponseMessage::MergeFrom(from._internal_getbalancesbyaddressesresponse());
      break;
    }
    case kNotifyNewBlockTemplateRequest: {
      _internal_mutable_notifynewblocktemplaterequest()->::protowire::NotifyNewBlockTemplateRequestMessage::MergeFrom(from._internal_notifynewblocktemplaterequest());
      break;
    }
    case kNotifyNewBlockTemplateResponse: {
      _internal_mutable_notifynewblocktemplateresponse()->::protowire::NotifyNewBlockTemplateResponseMessage::MergeFrom(from._internal_notifynewblocktemplateresponse());
      break;
    }
    case kNewBlockTemplateNotification: {
      _internal_mutable_newblocktemplatenotification()->::protowire::NewBlockTemplateNotificationMessage::MergeFrom(from._internal_newblocktemplatenotification());
      break;
    }
    case kGetMempoolEntriesByAddressesRequest: {
      _internal_mutable_getmempoolentriesbyaddressesrequest()->::protowire::GetMempoolEntriesByAddressesRequestMessage::MergeFrom(from._internal_getmempoolentriesbyaddressesrequest());
      break;
    }
    case kGetMempoolEntriesByAddressesResponse: {
      _internal_mutable_getmempoolentriesbyaddressesresponse()->::protowire::GetMempoolEntriesByAddressesResponseMessage::MergeFrom(from._internal_getmempoolentriesbyaddressesresponse());
      break;
    }
    case kGetCoinSupplyRequest: {
      _internal_mutable_getcoinsupplyrequest()->::protowire::GetCoinSupplyRequestMessage::MergeFrom(from._internal_getcoinsupplyrequest());
      break;
    }
    case kGetCoinSupplyResponse: {
      _internal_mutable_getcoinsupplyresponse()->::protowire::GetCoinSupplyResponseMessage::MergeFrom(from._internal_getcoinsupplyresponse());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KaspadMessage::CopyFrom(const KaspadMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.KaspadMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KaspadMessage::IsInitialized() const {
  return true;
}

void KaspadMessage::InternalSwap(KaspadMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata KaspadMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protowire
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protowire::KaspadMessage* Arena::CreateMaybeMessage< ::protowire::KaspadMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::KaspadMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
