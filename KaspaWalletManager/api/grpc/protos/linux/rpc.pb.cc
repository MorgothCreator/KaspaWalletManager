// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#include "rpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace protowire {
constexpr RPCError::RPCError(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RPCErrorDefaultTypeInternal {
  constexpr RPCErrorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RPCErrorDefaultTypeInternal() {}
  union {
    RPCError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RPCErrorDefaultTypeInternal _RPCError_default_instance_;
constexpr RpcBlock::RpcBlock(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transactions_()
  , header_(nullptr)
  , verbosedata_(nullptr){}
struct RpcBlockDefaultTypeInternal {
  constexpr RpcBlockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcBlockDefaultTypeInternal() {}
  union {
    RpcBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcBlockDefaultTypeInternal _RpcBlock_default_instance_;
constexpr RpcBlockHeader::RpcBlockHeader(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parents_()
  , hashmerkleroot_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , acceptedidmerkleroot_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , utxocommitment_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bluework_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pruningpoint_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(0u)
  , bits_(0u)
  , timestamp_(int64_t{0})
  , nonce_(uint64_t{0u})
  , daascore_(uint64_t{0u})
  , bluescore_(uint64_t{0u}){}
struct RpcBlockHeaderDefaultTypeInternal {
  constexpr RpcBlockHeaderDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcBlockHeaderDefaultTypeInternal() {}
  union {
    RpcBlockHeader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcBlockHeaderDefaultTypeInternal _RpcBlockHeader_default_instance_;
constexpr RpcBlockLevelParents::RpcBlockLevelParents(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parenthashes_(){}
struct RpcBlockLevelParentsDefaultTypeInternal {
  constexpr RpcBlockLevelParentsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcBlockLevelParentsDefaultTypeInternal() {}
  union {
    RpcBlockLevelParents _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcBlockLevelParentsDefaultTypeInternal _RpcBlockLevelParents_default_instance_;
constexpr RpcBlockVerboseData::RpcBlockVerboseData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transactionids_()
  , childrenhashes_()
  , mergesetblueshashes_()
  , mergesetredshashes_()
  , hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , selectedparenthash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , difficulty_(0)
  , isheaderonly_(false)
  , ischainblock_(false)
  , bluescore_(uint64_t{0u}){}
struct RpcBlockVerboseDataDefaultTypeInternal {
  constexpr RpcBlockVerboseDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcBlockVerboseDataDefaultTypeInternal() {}
  union {
    RpcBlockVerboseData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcBlockVerboseDataDefaultTypeInternal _RpcBlockVerboseData_default_instance_;
constexpr RpcTransaction::RpcTransaction(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : inputs_()
  , outputs_()
  , subnetworkid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payload_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , verbosedata_(nullptr)
  , locktime_(uint64_t{0u})
  , gas_(uint64_t{0u})
  , version_(0u){}
struct RpcTransactionDefaultTypeInternal {
  constexpr RpcTransactionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcTransactionDefaultTypeInternal() {}
  union {
    RpcTransaction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcTransactionDefaultTypeInternal _RpcTransaction_default_instance_;
constexpr RpcTransactionInput::RpcTransactionInput(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : signaturescript_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , previousoutpoint_(nullptr)
  , verbosedata_(nullptr)
  , sequence_(uint64_t{0u})
  , sigopcount_(0u){}
struct RpcTransactionInputDefaultTypeInternal {
  constexpr RpcTransactionInputDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcTransactionInputDefaultTypeInternal() {}
  union {
    RpcTransactionInput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcTransactionInputDefaultTypeInternal _RpcTransactionInput_default_instance_;
constexpr RpcScriptPublicKey::RpcScriptPublicKey(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scriptpublickey_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(0u){}
struct RpcScriptPublicKeyDefaultTypeInternal {
  constexpr RpcScriptPublicKeyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcScriptPublicKeyDefaultTypeInternal() {}
  union {
    RpcScriptPublicKey _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcScriptPublicKeyDefaultTypeInternal _RpcScriptPublicKey_default_instance_;
constexpr RpcTransactionOutput::RpcTransactionOutput(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scriptpublickey_(nullptr)
  , verbosedata_(nullptr)
  , amount_(uint64_t{0u}){}
struct RpcTransactionOutputDefaultTypeInternal {
  constexpr RpcTransactionOutputDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcTransactionOutputDefaultTypeInternal() {}
  union {
    RpcTransactionOutput _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcTransactionOutputDefaultTypeInternal _RpcTransactionOutput_default_instance_;
constexpr RpcOutpoint::RpcOutpoint(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transactionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , index_(0u){}
struct RpcOutpointDefaultTypeInternal {
  constexpr RpcOutpointDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcOutpointDefaultTypeInternal() {}
  union {
    RpcOutpoint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcOutpointDefaultTypeInternal _RpcOutpoint_default_instance_;
constexpr RpcUtxoEntry::RpcUtxoEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scriptpublickey_(nullptr)
  , amount_(uint64_t{0u})
  , blockdaascore_(uint64_t{0u})
  , iscoinbase_(false){}
struct RpcUtxoEntryDefaultTypeInternal {
  constexpr RpcUtxoEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcUtxoEntryDefaultTypeInternal() {}
  union {
    RpcUtxoEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcUtxoEntryDefaultTypeInternal _RpcUtxoEntry_default_instance_;
constexpr RpcTransactionVerboseData::RpcTransactionVerboseData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transactionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , blockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mass_(uint64_t{0u})
  , blocktime_(uint64_t{0u}){}
struct RpcTransactionVerboseDataDefaultTypeInternal {
  constexpr RpcTransactionVerboseDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcTransactionVerboseDataDefaultTypeInternal() {}
  union {
    RpcTransactionVerboseData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcTransactionVerboseDataDefaultTypeInternal _RpcTransactionVerboseData_default_instance_;
constexpr RpcTransactionInputVerboseData::RpcTransactionInputVerboseData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RpcTransactionInputVerboseDataDefaultTypeInternal {
  constexpr RpcTransactionInputVerboseDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcTransactionInputVerboseDataDefaultTypeInternal() {}
  union {
    RpcTransactionInputVerboseData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcTransactionInputVerboseDataDefaultTypeInternal _RpcTransactionInputVerboseData_default_instance_;
constexpr RpcTransactionOutputVerboseData::RpcTransactionOutputVerboseData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scriptpublickeytype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , scriptpublickeyaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RpcTransactionOutputVerboseDataDefaultTypeInternal {
  constexpr RpcTransactionOutputVerboseDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RpcTransactionOutputVerboseDataDefaultTypeInternal() {}
  union {
    RpcTransactionOutputVerboseData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RpcTransactionOutputVerboseDataDefaultTypeInternal _RpcTransactionOutputVerboseData_default_instance_;
constexpr GetCurrentNetworkRequestMessage::GetCurrentNetworkRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetCurrentNetworkRequestMessageDefaultTypeInternal {
  constexpr GetCurrentNetworkRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCurrentNetworkRequestMessageDefaultTypeInternal() {}
  union {
    GetCurrentNetworkRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCurrentNetworkRequestMessageDefaultTypeInternal _GetCurrentNetworkRequestMessage_default_instance_;
constexpr GetCurrentNetworkResponseMessage::GetCurrentNetworkResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : currentnetwork_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(nullptr){}
struct GetCurrentNetworkResponseMessageDefaultTypeInternal {
  constexpr GetCurrentNetworkResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCurrentNetworkResponseMessageDefaultTypeInternal() {}
  union {
    GetCurrentNetworkResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCurrentNetworkResponseMessageDefaultTypeInternal _GetCurrentNetworkResponseMessage_default_instance_;
constexpr SubmitBlockRequestMessage::SubmitBlockRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_(nullptr)
  , allownondaablocks_(false){}
struct SubmitBlockRequestMessageDefaultTypeInternal {
  constexpr SubmitBlockRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubmitBlockRequestMessageDefaultTypeInternal() {}
  union {
    SubmitBlockRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubmitBlockRequestMessageDefaultTypeInternal _SubmitBlockRequestMessage_default_instance_;
constexpr SubmitBlockResponseMessage::SubmitBlockResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr)
  , rejectreason_(0)
{}
struct SubmitBlockResponseMessageDefaultTypeInternal {
  constexpr SubmitBlockResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubmitBlockResponseMessageDefaultTypeInternal() {}
  union {
    SubmitBlockResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubmitBlockResponseMessageDefaultTypeInternal _SubmitBlockResponseMessage_default_instance_;
constexpr GetBlockTemplateRequestMessage::GetBlockTemplateRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : payaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , extradata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetBlockTemplateRequestMessageDefaultTypeInternal {
  constexpr GetBlockTemplateRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockTemplateRequestMessageDefaultTypeInternal() {}
  union {
    GetBlockTemplateRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockTemplateRequestMessageDefaultTypeInternal _GetBlockTemplateRequestMessage_default_instance_;
constexpr GetBlockTemplateResponseMessage::GetBlockTemplateResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_(nullptr)
  , error_(nullptr)
  , issynced_(false){}
struct GetBlockTemplateResponseMessageDefaultTypeInternal {
  constexpr GetBlockTemplateResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockTemplateResponseMessageDefaultTypeInternal() {}
  union {
    GetBlockTemplateResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockTemplateResponseMessageDefaultTypeInternal _GetBlockTemplateResponseMessage_default_instance_;
constexpr NotifyBlockAddedRequestMessage::NotifyBlockAddedRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NotifyBlockAddedRequestMessageDefaultTypeInternal {
  constexpr NotifyBlockAddedRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyBlockAddedRequestMessageDefaultTypeInternal() {}
  union {
    NotifyBlockAddedRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyBlockAddedRequestMessageDefaultTypeInternal _NotifyBlockAddedRequestMessage_default_instance_;
constexpr NotifyBlockAddedResponseMessage::NotifyBlockAddedResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct NotifyBlockAddedResponseMessageDefaultTypeInternal {
  constexpr NotifyBlockAddedResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyBlockAddedResponseMessageDefaultTypeInternal() {}
  union {
    NotifyBlockAddedResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyBlockAddedResponseMessageDefaultTypeInternal _NotifyBlockAddedResponseMessage_default_instance_;
constexpr BlockAddedNotificationMessage::BlockAddedNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_(nullptr){}
struct BlockAddedNotificationMessageDefaultTypeInternal {
  constexpr BlockAddedNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockAddedNotificationMessageDefaultTypeInternal() {}
  union {
    BlockAddedNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockAddedNotificationMessageDefaultTypeInternal _BlockAddedNotificationMessage_default_instance_;
constexpr GetPeerAddressesRequestMessage::GetPeerAddressesRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetPeerAddressesRequestMessageDefaultTypeInternal {
  constexpr GetPeerAddressesRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeerAddressesRequestMessageDefaultTypeInternal() {}
  union {
    GetPeerAddressesRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeerAddressesRequestMessageDefaultTypeInternal _GetPeerAddressesRequestMessage_default_instance_;
constexpr GetPeerAddressesResponseMessage::GetPeerAddressesResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : addresses_()
  , bannedaddresses_()
  , error_(nullptr){}
struct GetPeerAddressesResponseMessageDefaultTypeInternal {
  constexpr GetPeerAddressesResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeerAddressesResponseMessageDefaultTypeInternal() {}
  union {
    GetPeerAddressesResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeerAddressesResponseMessageDefaultTypeInternal _GetPeerAddressesResponseMessage_default_instance_;
constexpr GetPeerAddressesKnownAddressMessage::GetPeerAddressesKnownAddressMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : addr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPeerAddressesKnownAddressMessageDefaultTypeInternal {
  constexpr GetPeerAddressesKnownAddressMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPeerAddressesKnownAddressMessageDefaultTypeInternal() {}
  union {
    GetPeerAddressesKnownAddressMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPeerAddressesKnownAddressMessageDefaultTypeInternal _GetPeerAddressesKnownAddressMessage_default_instance_;
constexpr GetSelectedTipHashRequestMessage::GetSelectedTipHashRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetSelectedTipHashRequestMessageDefaultTypeInternal {
  constexpr GetSelectedTipHashRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSelectedTipHashRequestMessageDefaultTypeInternal() {}
  union {
    GetSelectedTipHashRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSelectedTipHashRequestMessageDefaultTypeInternal _GetSelectedTipHashRequestMessage_default_instance_;
constexpr GetSelectedTipHashResponseMessage::GetSelectedTipHashResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : selectedtiphash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(nullptr){}
struct GetSelectedTipHashResponseMessageDefaultTypeInternal {
  constexpr GetSelectedTipHashResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSelectedTipHashResponseMessageDefaultTypeInternal() {}
  union {
    GetSelectedTipHashResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSelectedTipHashResponseMessageDefaultTypeInternal _GetSelectedTipHashResponseMessage_default_instance_;
constexpr GetMempoolEntryRequestMessage::GetMempoolEntryRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : txid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , includeorphanpool_(false)
  , filtertransactionpool_(false){}
struct GetMempoolEntryRequestMessageDefaultTypeInternal {
  constexpr GetMempoolEntryRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMempoolEntryRequestMessageDefaultTypeInternal() {}
  union {
    GetMempoolEntryRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMempoolEntryRequestMessageDefaultTypeInternal _GetMempoolEntryRequestMessage_default_instance_;
constexpr GetMempoolEntryResponseMessage::GetMempoolEntryResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entry_(nullptr)
  , error_(nullptr){}
struct GetMempoolEntryResponseMessageDefaultTypeInternal {
  constexpr GetMempoolEntryResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMempoolEntryResponseMessageDefaultTypeInternal() {}
  union {
    GetMempoolEntryResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMempoolEntryResponseMessageDefaultTypeInternal _GetMempoolEntryResponseMessage_default_instance_;
constexpr GetMempoolEntriesRequestMessage::GetMempoolEntriesRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : includeorphanpool_(false)
  , filtertransactionpool_(false){}
struct GetMempoolEntriesRequestMessageDefaultTypeInternal {
  constexpr GetMempoolEntriesRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMempoolEntriesRequestMessageDefaultTypeInternal() {}
  union {
    GetMempoolEntriesRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMempoolEntriesRequestMessageDefaultTypeInternal _GetMempoolEntriesRequestMessage_default_instance_;
constexpr GetMempoolEntriesResponseMessage::GetMempoolEntriesResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_()
  , error_(nullptr){}
struct GetMempoolEntriesResponseMessageDefaultTypeInternal {
  constexpr GetMempoolEntriesResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMempoolEntriesResponseMessageDefaultTypeInternal() {}
  union {
    GetMempoolEntriesResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMempoolEntriesResponseMessageDefaultTypeInternal _GetMempoolEntriesResponseMessage_default_instance_;
constexpr MempoolEntry::MempoolEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transaction_(nullptr)
  , fee_(uint64_t{0u})
  , isorphan_(false){}
struct MempoolEntryDefaultTypeInternal {
  constexpr MempoolEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MempoolEntryDefaultTypeInternal() {}
  union {
    MempoolEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MempoolEntryDefaultTypeInternal _MempoolEntry_default_instance_;
constexpr GetConnectedPeerInfoRequestMessage::GetConnectedPeerInfoRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetConnectedPeerInfoRequestMessageDefaultTypeInternal {
  constexpr GetConnectedPeerInfoRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConnectedPeerInfoRequestMessageDefaultTypeInternal() {}
  union {
    GetConnectedPeerInfoRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConnectedPeerInfoRequestMessageDefaultTypeInternal _GetConnectedPeerInfoRequestMessage_default_instance_;
constexpr GetConnectedPeerInfoResponseMessage::GetConnectedPeerInfoResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : infos_()
  , error_(nullptr){}
struct GetConnectedPeerInfoResponseMessageDefaultTypeInternal {
  constexpr GetConnectedPeerInfoResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConnectedPeerInfoResponseMessageDefaultTypeInternal() {}
  union {
    GetConnectedPeerInfoResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConnectedPeerInfoResponseMessageDefaultTypeInternal _GetConnectedPeerInfoResponseMessage_default_instance_;
constexpr GetConnectedPeerInfoMessage::GetConnectedPeerInfoMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , useragent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lastpingduration_(int64_t{0})
  , timeoffset_(int64_t{0})
  , isoutbound_(false)
  , isibdpeer_(false)
  , advertisedprotocolversion_(0u)
  , timeconnected_(int64_t{0}){}
struct GetConnectedPeerInfoMessageDefaultTypeInternal {
  constexpr GetConnectedPeerInfoMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConnectedPeerInfoMessageDefaultTypeInternal() {}
  union {
    GetConnectedPeerInfoMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConnectedPeerInfoMessageDefaultTypeInternal _GetConnectedPeerInfoMessage_default_instance_;
constexpr AddPeerRequestMessage::AddPeerRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ispermanent_(false){}
struct AddPeerRequestMessageDefaultTypeInternal {
  constexpr AddPeerRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddPeerRequestMessageDefaultTypeInternal() {}
  union {
    AddPeerRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddPeerRequestMessageDefaultTypeInternal _AddPeerRequestMessage_default_instance_;
constexpr AddPeerResponseMessage::AddPeerResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct AddPeerResponseMessageDefaultTypeInternal {
  constexpr AddPeerResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddPeerResponseMessageDefaultTypeInternal() {}
  union {
    AddPeerResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddPeerResponseMessageDefaultTypeInternal _AddPeerResponseMessage_default_instance_;
constexpr SubmitTransactionRequestMessage::SubmitTransactionRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transaction_(nullptr)
  , alloworphan_(false){}
struct SubmitTransactionRequestMessageDefaultTypeInternal {
  constexpr SubmitTransactionRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubmitTransactionRequestMessageDefaultTypeInternal() {}
  union {
    SubmitTransactionRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubmitTransactionRequestMessageDefaultTypeInternal _SubmitTransactionRequestMessage_default_instance_;
constexpr SubmitTransactionResponseMessage::SubmitTransactionResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transactionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(nullptr){}
struct SubmitTransactionResponseMessageDefaultTypeInternal {
  constexpr SubmitTransactionResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubmitTransactionResponseMessageDefaultTypeInternal() {}
  union {
    SubmitTransactionResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubmitTransactionResponseMessageDefaultTypeInternal _SubmitTransactionResponseMessage_default_instance_;
constexpr NotifyVirtualSelectedParentChainChangedRequestMessage::NotifyVirtualSelectedParentChainChangedRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : includeacceptedtransactionids_(false){}
struct NotifyVirtualSelectedParentChainChangedRequestMessageDefaultTypeInternal {
  constexpr NotifyVirtualSelectedParentChainChangedRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyVirtualSelectedParentChainChangedRequestMessageDefaultTypeInternal() {}
  union {
    NotifyVirtualSelectedParentChainChangedRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyVirtualSelectedParentChainChangedRequestMessageDefaultTypeInternal _NotifyVirtualSelectedParentChainChangedRequestMessage_default_instance_;
constexpr NotifyVirtualSelectedParentChainChangedResponseMessage::NotifyVirtualSelectedParentChainChangedResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct NotifyVirtualSelectedParentChainChangedResponseMessageDefaultTypeInternal {
  constexpr NotifyVirtualSelectedParentChainChangedResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyVirtualSelectedParentChainChangedResponseMessageDefaultTypeInternal() {}
  union {
    NotifyVirtualSelectedParentChainChangedResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyVirtualSelectedParentChainChangedResponseMessageDefaultTypeInternal _NotifyVirtualSelectedParentChainChangedResponseMessage_default_instance_;
constexpr VirtualSelectedParentChainChangedNotificationMessage::VirtualSelectedParentChainChangedNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : removedchainblockhashes_()
  , acceptedtransactionids_()
  , addedchainblockhashes_(){}
struct VirtualSelectedParentChainChangedNotificationMessageDefaultTypeInternal {
  constexpr VirtualSelectedParentChainChangedNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VirtualSelectedParentChainChangedNotificationMessageDefaultTypeInternal() {}
  union {
    VirtualSelectedParentChainChangedNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VirtualSelectedParentChainChangedNotificationMessageDefaultTypeInternal _VirtualSelectedParentChainChangedNotificationMessage_default_instance_;
constexpr GetBlockRequestMessage::GetBlockRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , includetransactions_(false){}
struct GetBlockRequestMessageDefaultTypeInternal {
  constexpr GetBlockRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockRequestMessageDefaultTypeInternal() {}
  union {
    GetBlockRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockRequestMessageDefaultTypeInternal _GetBlockRequestMessage_default_instance_;
constexpr GetBlockResponseMessage::GetBlockResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_(nullptr)
  , error_(nullptr){}
struct GetBlockResponseMessageDefaultTypeInternal {
  constexpr GetBlockResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockResponseMessageDefaultTypeInternal() {}
  union {
    GetBlockResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockResponseMessageDefaultTypeInternal _GetBlockResponseMessage_default_instance_;
constexpr GetSubnetworkRequestMessage::GetSubnetworkRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subnetworkid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSubnetworkRequestMessageDefaultTypeInternal {
  constexpr GetSubnetworkRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSubnetworkRequestMessageDefaultTypeInternal() {}
  union {
    GetSubnetworkRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSubnetworkRequestMessageDefaultTypeInternal _GetSubnetworkRequestMessage_default_instance_;
constexpr GetSubnetworkResponseMessage::GetSubnetworkResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr)
  , gaslimit_(uint64_t{0u}){}
struct GetSubnetworkResponseMessageDefaultTypeInternal {
  constexpr GetSubnetworkResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSubnetworkResponseMessageDefaultTypeInternal() {}
  union {
    GetSubnetworkResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSubnetworkResponseMessageDefaultTypeInternal _GetSubnetworkResponseMessage_default_instance_;
constexpr GetVirtualSelectedParentChainFromBlockRequestMessage::GetVirtualSelectedParentChainFromBlockRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : starthash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , includeacceptedtransactionids_(false){}
struct GetVirtualSelectedParentChainFromBlockRequestMessageDefaultTypeInternal {
  constexpr GetVirtualSelectedParentChainFromBlockRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVirtualSelectedParentChainFromBlockRequestMessageDefaultTypeInternal() {}
  union {
    GetVirtualSelectedParentChainFromBlockRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVirtualSelectedParentChainFromBlockRequestMessageDefaultTypeInternal _GetVirtualSelectedParentChainFromBlockRequestMessage_default_instance_;
constexpr AcceptedTransactionIds::AcceptedTransactionIds(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : acceptedtransactionids_()
  , acceptingblockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AcceptedTransactionIdsDefaultTypeInternal {
  constexpr AcceptedTransactionIdsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AcceptedTransactionIdsDefaultTypeInternal() {}
  union {
    AcceptedTransactionIds _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AcceptedTransactionIdsDefaultTypeInternal _AcceptedTransactionIds_default_instance_;
constexpr GetVirtualSelectedParentChainFromBlockResponseMessage::GetVirtualSelectedParentChainFromBlockResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : removedchainblockhashes_()
  , acceptedtransactionids_()
  , addedchainblockhashes_()
  , error_(nullptr){}
struct GetVirtualSelectedParentChainFromBlockResponseMessageDefaultTypeInternal {
  constexpr GetVirtualSelectedParentChainFromBlockResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVirtualSelectedParentChainFromBlockResponseMessageDefaultTypeInternal() {}
  union {
    GetVirtualSelectedParentChainFromBlockResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVirtualSelectedParentChainFromBlockResponseMessageDefaultTypeInternal _GetVirtualSelectedParentChainFromBlockResponseMessage_default_instance_;
constexpr GetBlocksRequestMessage::GetBlocksRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lowhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , includeblocks_(false)
  , includetransactions_(false){}
struct GetBlocksRequestMessageDefaultTypeInternal {
  constexpr GetBlocksRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlocksRequestMessageDefaultTypeInternal() {}
  union {
    GetBlocksRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlocksRequestMessageDefaultTypeInternal _GetBlocksRequestMessage_default_instance_;
constexpr GetBlocksResponseMessage::GetBlocksResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blocks_()
  , blockhashes_()
  , error_(nullptr){}
struct GetBlocksResponseMessageDefaultTypeInternal {
  constexpr GetBlocksResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlocksResponseMessageDefaultTypeInternal() {}
  union {
    GetBlocksResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlocksResponseMessageDefaultTypeInternal _GetBlocksResponseMessage_default_instance_;
constexpr GetBlockCountRequestMessage::GetBlockCountRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetBlockCountRequestMessageDefaultTypeInternal {
  constexpr GetBlockCountRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockCountRequestMessageDefaultTypeInternal() {}
  union {
    GetBlockCountRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockCountRequestMessageDefaultTypeInternal _GetBlockCountRequestMessage_default_instance_;
constexpr GetBlockCountResponseMessage::GetBlockCountResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr)
  , blockcount_(uint64_t{0u})
  , headercount_(uint64_t{0u}){}
struct GetBlockCountResponseMessageDefaultTypeInternal {
  constexpr GetBlockCountResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockCountResponseMessageDefaultTypeInternal() {}
  union {
    GetBlockCountResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockCountResponseMessageDefaultTypeInternal _GetBlockCountResponseMessage_default_instance_;
constexpr GetBlockDagInfoRequestMessage::GetBlockDagInfoRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetBlockDagInfoRequestMessageDefaultTypeInternal {
  constexpr GetBlockDagInfoRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockDagInfoRequestMessageDefaultTypeInternal() {}
  union {
    GetBlockDagInfoRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockDagInfoRequestMessageDefaultTypeInternal _GetBlockDagInfoRequestMessage_default_instance_;
constexpr GetBlockDagInfoResponseMessage::GetBlockDagInfoResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tiphashes_()
  , virtualparenthashes_()
  , networkname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pruningpointhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(nullptr)
  , blockcount_(uint64_t{0u})
  , headercount_(uint64_t{0u})
  , difficulty_(0)
  , pastmediantime_(int64_t{0})
  , virtualdaascore_(uint64_t{0u}){}
struct GetBlockDagInfoResponseMessageDefaultTypeInternal {
  constexpr GetBlockDagInfoResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockDagInfoResponseMessageDefaultTypeInternal() {}
  union {
    GetBlockDagInfoResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockDagInfoResponseMessageDefaultTypeInternal _GetBlockDagInfoResponseMessage_default_instance_;
constexpr ResolveFinalityConflictRequestMessage::ResolveFinalityConflictRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : finalityblockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResolveFinalityConflictRequestMessageDefaultTypeInternal {
  constexpr ResolveFinalityConflictRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResolveFinalityConflictRequestMessageDefaultTypeInternal() {}
  union {
    ResolveFinalityConflictRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResolveFinalityConflictRequestMessageDefaultTypeInternal _ResolveFinalityConflictRequestMessage_default_instance_;
constexpr ResolveFinalityConflictResponseMessage::ResolveFinalityConflictResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct ResolveFinalityConflictResponseMessageDefaultTypeInternal {
  constexpr ResolveFinalityConflictResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResolveFinalityConflictResponseMessageDefaultTypeInternal() {}
  union {
    ResolveFinalityConflictResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResolveFinalityConflictResponseMessageDefaultTypeInternal _ResolveFinalityConflictResponseMessage_default_instance_;
constexpr NotifyFinalityConflictsRequestMessage::NotifyFinalityConflictsRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NotifyFinalityConflictsRequestMessageDefaultTypeInternal {
  constexpr NotifyFinalityConflictsRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyFinalityConflictsRequestMessageDefaultTypeInternal() {}
  union {
    NotifyFinalityConflictsRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyFinalityConflictsRequestMessageDefaultTypeInternal _NotifyFinalityConflictsRequestMessage_default_instance_;
constexpr NotifyFinalityConflictsResponseMessage::NotifyFinalityConflictsResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct NotifyFinalityConflictsResponseMessageDefaultTypeInternal {
  constexpr NotifyFinalityConflictsResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyFinalityConflictsResponseMessageDefaultTypeInternal() {}
  union {
    NotifyFinalityConflictsResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyFinalityConflictsResponseMessageDefaultTypeInternal _NotifyFinalityConflictsResponseMessage_default_instance_;
constexpr FinalityConflictNotificationMessage::FinalityConflictNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : violatingblockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FinalityConflictNotificationMessageDefaultTypeInternal {
  constexpr FinalityConflictNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FinalityConflictNotificationMessageDefaultTypeInternal() {}
  union {
    FinalityConflictNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FinalityConflictNotificationMessageDefaultTypeInternal _FinalityConflictNotificationMessage_default_instance_;
constexpr FinalityConflictResolvedNotificationMessage::FinalityConflictResolvedNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : finalityblockhash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FinalityConflictResolvedNotificationMessageDefaultTypeInternal {
  constexpr FinalityConflictResolvedNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FinalityConflictResolvedNotificationMessageDefaultTypeInternal() {}
  union {
    FinalityConflictResolvedNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FinalityConflictResolvedNotificationMessageDefaultTypeInternal _FinalityConflictResolvedNotificationMessage_default_instance_;
constexpr ShutDownRequestMessage::ShutDownRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ShutDownRequestMessageDefaultTypeInternal {
  constexpr ShutDownRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ShutDownRequestMessageDefaultTypeInternal() {}
  union {
    ShutDownRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ShutDownRequestMessageDefaultTypeInternal _ShutDownRequestMessage_default_instance_;
constexpr ShutDownResponseMessage::ShutDownResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct ShutDownResponseMessageDefaultTypeInternal {
  constexpr ShutDownResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ShutDownResponseMessageDefaultTypeInternal() {}
  union {
    ShutDownResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ShutDownResponseMessageDefaultTypeInternal _ShutDownResponseMessage_default_instance_;
constexpr GetHeadersRequestMessage::GetHeadersRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : starthash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , limit_(uint64_t{0u})
  , isascending_(false){}
struct GetHeadersRequestMessageDefaultTypeInternal {
  constexpr GetHeadersRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetHeadersRequestMessageDefaultTypeInternal() {}
  union {
    GetHeadersRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetHeadersRequestMessageDefaultTypeInternal _GetHeadersRequestMessage_default_instance_;
constexpr GetHeadersResponseMessage::GetHeadersResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : headers_()
  , error_(nullptr){}
struct GetHeadersResponseMessageDefaultTypeInternal {
  constexpr GetHeadersResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetHeadersResponseMessageDefaultTypeInternal() {}
  union {
    GetHeadersResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetHeadersResponseMessageDefaultTypeInternal _GetHeadersResponseMessage_default_instance_;
constexpr NotifyUtxosChangedRequestMessage::NotifyUtxosChangedRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : addresses_(){}
struct NotifyUtxosChangedRequestMessageDefaultTypeInternal {
  constexpr NotifyUtxosChangedRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyUtxosChangedRequestMessageDefaultTypeInternal() {}
  union {
    NotifyUtxosChangedRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyUtxosChangedRequestMessageDefaultTypeInternal _NotifyUtxosChangedRequestMessage_default_instance_;
constexpr NotifyUtxosChangedResponseMessage::NotifyUtxosChangedResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct NotifyUtxosChangedResponseMessageDefaultTypeInternal {
  constexpr NotifyUtxosChangedResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyUtxosChangedResponseMessageDefaultTypeInternal() {}
  union {
    NotifyUtxosChangedResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyUtxosChangedResponseMessageDefaultTypeInternal _NotifyUtxosChangedResponseMessage_default_instance_;
constexpr UtxosChangedNotificationMessage::UtxosChangedNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : added_()
  , removed_(){}
struct UtxosChangedNotificationMessageDefaultTypeInternal {
  constexpr UtxosChangedNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UtxosChangedNotificationMessageDefaultTypeInternal() {}
  union {
    UtxosChangedNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UtxosChangedNotificationMessageDefaultTypeInternal _UtxosChangedNotificationMessage_default_instance_;
constexpr UtxosByAddressesEntry::UtxosByAddressesEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , outpoint_(nullptr)
  , utxoentry_(nullptr){}
struct UtxosByAddressesEntryDefaultTypeInternal {
  constexpr UtxosByAddressesEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UtxosByAddressesEntryDefaultTypeInternal() {}
  union {
    UtxosByAddressesEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UtxosByAddressesEntryDefaultTypeInternal _UtxosByAddressesEntry_default_instance_;
constexpr StopNotifyingUtxosChangedRequestMessage::StopNotifyingUtxosChangedRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : addresses_(){}
struct StopNotifyingUtxosChangedRequestMessageDefaultTypeInternal {
  constexpr StopNotifyingUtxosChangedRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopNotifyingUtxosChangedRequestMessageDefaultTypeInternal() {}
  union {
    StopNotifyingUtxosChangedRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopNotifyingUtxosChangedRequestMessageDefaultTypeInternal _StopNotifyingUtxosChangedRequestMessage_default_instance_;
constexpr StopNotifyingUtxosChangedResponseMessage::StopNotifyingUtxosChangedResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct StopNotifyingUtxosChangedResponseMessageDefaultTypeInternal {
  constexpr StopNotifyingUtxosChangedResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopNotifyingUtxosChangedResponseMessageDefaultTypeInternal() {}
  union {
    StopNotifyingUtxosChangedResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopNotifyingUtxosChangedResponseMessageDefaultTypeInternal _StopNotifyingUtxosChangedResponseMessage_default_instance_;
constexpr GetUtxosByAddressesRequestMessage::GetUtxosByAddressesRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : addresses_(){}
struct GetUtxosByAddressesRequestMessageDefaultTypeInternal {
  constexpr GetUtxosByAddressesRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetUtxosByAddressesRequestMessageDefaultTypeInternal() {}
  union {
    GetUtxosByAddressesRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetUtxosByAddressesRequestMessageDefaultTypeInternal _GetUtxosByAddressesRequestMessage_default_instance_;
constexpr GetUtxosByAddressesResponseMessage::GetUtxosByAddressesResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_()
  , error_(nullptr){}
struct GetUtxosByAddressesResponseMessageDefaultTypeInternal {
  constexpr GetUtxosByAddressesResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetUtxosByAddressesResponseMessageDefaultTypeInternal() {}
  union {
    GetUtxosByAddressesResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetUtxosByAddressesResponseMessageDefaultTypeInternal _GetUtxosByAddressesResponseMessage_default_instance_;
constexpr GetBalanceByAddressRequestMessage::GetBalanceByAddressRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetBalanceByAddressRequestMessageDefaultTypeInternal {
  constexpr GetBalanceByAddressRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBalanceByAddressRequestMessageDefaultTypeInternal() {}
  union {
    GetBalanceByAddressRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBalanceByAddressRequestMessageDefaultTypeInternal _GetBalanceByAddressRequestMessage_default_instance_;
constexpr GetBalanceByAddressResponseMessage::GetBalanceByAddressResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr)
  , balance_(uint64_t{0u}){}
struct GetBalanceByAddressResponseMessageDefaultTypeInternal {
  constexpr GetBalanceByAddressResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBalanceByAddressResponseMessageDefaultTypeInternal() {}
  union {
    GetBalanceByAddressResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBalanceByAddressResponseMessageDefaultTypeInternal _GetBalanceByAddressResponseMessage_default_instance_;
constexpr GetBalancesByAddressesRequestMessage::GetBalancesByAddressesRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : addresses_(){}
struct GetBalancesByAddressesRequestMessageDefaultTypeInternal {
  constexpr GetBalancesByAddressesRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBalancesByAddressesRequestMessageDefaultTypeInternal() {}
  union {
    GetBalancesByAddressesRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBalancesByAddressesRequestMessageDefaultTypeInternal _GetBalancesByAddressesRequestMessage_default_instance_;
constexpr BalancesByAddressEntry::BalancesByAddressEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(nullptr)
  , balance_(uint64_t{0u}){}
struct BalancesByAddressEntryDefaultTypeInternal {
  constexpr BalancesByAddressEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BalancesByAddressEntryDefaultTypeInternal() {}
  union {
    BalancesByAddressEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BalancesByAddressEntryDefaultTypeInternal _BalancesByAddressEntry_default_instance_;
constexpr GetBalancesByAddressesResponseMessage::GetBalancesByAddressesResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_()
  , error_(nullptr){}
struct GetBalancesByAddressesResponseMessageDefaultTypeInternal {
  constexpr GetBalancesByAddressesResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBalancesByAddressesResponseMessageDefaultTypeInternal() {}
  union {
    GetBalancesByAddressesResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBalancesByAddressesResponseMessageDefaultTypeInternal _GetBalancesByAddressesResponseMessage_default_instance_;
constexpr GetVirtualSelectedParentBlueScoreRequestMessage::GetVirtualSelectedParentBlueScoreRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetVirtualSelectedParentBlueScoreRequestMessageDefaultTypeInternal {
  constexpr GetVirtualSelectedParentBlueScoreRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVirtualSelectedParentBlueScoreRequestMessageDefaultTypeInternal() {}
  union {
    GetVirtualSelectedParentBlueScoreRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVirtualSelectedParentBlueScoreRequestMessageDefaultTypeInternal _GetVirtualSelectedParentBlueScoreRequestMessage_default_instance_;
constexpr GetVirtualSelectedParentBlueScoreResponseMessage::GetVirtualSelectedParentBlueScoreResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr)
  , bluescore_(uint64_t{0u}){}
struct GetVirtualSelectedParentBlueScoreResponseMessageDefaultTypeInternal {
  constexpr GetVirtualSelectedParentBlueScoreResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVirtualSelectedParentBlueScoreResponseMessageDefaultTypeInternal() {}
  union {
    GetVirtualSelectedParentBlueScoreResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVirtualSelectedParentBlueScoreResponseMessageDefaultTypeInternal _GetVirtualSelectedParentBlueScoreResponseMessage_default_instance_;
constexpr NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NotifyVirtualSelectedParentBlueScoreChangedRequestMessageDefaultTypeInternal {
  constexpr NotifyVirtualSelectedParentBlueScoreChangedRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyVirtualSelectedParentBlueScoreChangedRequestMessageDefaultTypeInternal() {}
  union {
    NotifyVirtualSelectedParentBlueScoreChangedRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyVirtualSelectedParentBlueScoreChangedRequestMessageDefaultTypeInternal _NotifyVirtualSelectedParentBlueScoreChangedRequestMessage_default_instance_;
constexpr NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct NotifyVirtualSelectedParentBlueScoreChangedResponseMessageDefaultTypeInternal {
  constexpr NotifyVirtualSelectedParentBlueScoreChangedResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyVirtualSelectedParentBlueScoreChangedResponseMessageDefaultTypeInternal() {}
  union {
    NotifyVirtualSelectedParentBlueScoreChangedResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyVirtualSelectedParentBlueScoreChangedResponseMessageDefaultTypeInternal _NotifyVirtualSelectedParentBlueScoreChangedResponseMessage_default_instance_;
constexpr VirtualSelectedParentBlueScoreChangedNotificationMessage::VirtualSelectedParentBlueScoreChangedNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : virtualselectedparentbluescore_(uint64_t{0u}){}
struct VirtualSelectedParentBlueScoreChangedNotificationMessageDefaultTypeInternal {
  constexpr VirtualSelectedParentBlueScoreChangedNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VirtualSelectedParentBlueScoreChangedNotificationMessageDefaultTypeInternal() {}
  union {
    VirtualSelectedParentBlueScoreChangedNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VirtualSelectedParentBlueScoreChangedNotificationMessageDefaultTypeInternal _VirtualSelectedParentBlueScoreChangedNotificationMessage_default_instance_;
constexpr NotifyVirtualDaaScoreChangedRequestMessage::NotifyVirtualDaaScoreChangedRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NotifyVirtualDaaScoreChangedRequestMessageDefaultTypeInternal {
  constexpr NotifyVirtualDaaScoreChangedRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyVirtualDaaScoreChangedRequestMessageDefaultTypeInternal() {}
  union {
    NotifyVirtualDaaScoreChangedRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyVirtualDaaScoreChangedRequestMessageDefaultTypeInternal _NotifyVirtualDaaScoreChangedRequestMessage_default_instance_;
constexpr NotifyVirtualDaaScoreChangedResponseMessage::NotifyVirtualDaaScoreChangedResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct NotifyVirtualDaaScoreChangedResponseMessageDefaultTypeInternal {
  constexpr NotifyVirtualDaaScoreChangedResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyVirtualDaaScoreChangedResponseMessageDefaultTypeInternal() {}
  union {
    NotifyVirtualDaaScoreChangedResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyVirtualDaaScoreChangedResponseMessageDefaultTypeInternal _NotifyVirtualDaaScoreChangedResponseMessage_default_instance_;
constexpr VirtualDaaScoreChangedNotificationMessage::VirtualDaaScoreChangedNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : virtualdaascore_(uint64_t{0u}){}
struct VirtualDaaScoreChangedNotificationMessageDefaultTypeInternal {
  constexpr VirtualDaaScoreChangedNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VirtualDaaScoreChangedNotificationMessageDefaultTypeInternal() {}
  union {
    VirtualDaaScoreChangedNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VirtualDaaScoreChangedNotificationMessageDefaultTypeInternal _VirtualDaaScoreChangedNotificationMessage_default_instance_;
constexpr NotifyPruningPointUTXOSetOverrideRequestMessage::NotifyPruningPointUTXOSetOverrideRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NotifyPruningPointUTXOSetOverrideRequestMessageDefaultTypeInternal {
  constexpr NotifyPruningPointUTXOSetOverrideRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyPruningPointUTXOSetOverrideRequestMessageDefaultTypeInternal() {}
  union {
    NotifyPruningPointUTXOSetOverrideRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyPruningPointUTXOSetOverrideRequestMessageDefaultTypeInternal _NotifyPruningPointUTXOSetOverrideRequestMessage_default_instance_;
constexpr NotifyPruningPointUTXOSetOverrideResponseMessage::NotifyPruningPointUTXOSetOverrideResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct NotifyPruningPointUTXOSetOverrideResponseMessageDefaultTypeInternal {
  constexpr NotifyPruningPointUTXOSetOverrideResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyPruningPointUTXOSetOverrideResponseMessageDefaultTypeInternal() {}
  union {
    NotifyPruningPointUTXOSetOverrideResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyPruningPointUTXOSetOverrideResponseMessageDefaultTypeInternal _NotifyPruningPointUTXOSetOverrideResponseMessage_default_instance_;
constexpr PruningPointUTXOSetOverrideNotificationMessage::PruningPointUTXOSetOverrideNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PruningPointUTXOSetOverrideNotificationMessageDefaultTypeInternal {
  constexpr PruningPointUTXOSetOverrideNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PruningPointUTXOSetOverrideNotificationMessageDefaultTypeInternal() {}
  union {
    PruningPointUTXOSetOverrideNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PruningPointUTXOSetOverrideNotificationMessageDefaultTypeInternal _PruningPointUTXOSetOverrideNotificationMessage_default_instance_;
constexpr StopNotifyingPruningPointUTXOSetOverrideRequestMessage::StopNotifyingPruningPointUTXOSetOverrideRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct StopNotifyingPruningPointUTXOSetOverrideRequestMessageDefaultTypeInternal {
  constexpr StopNotifyingPruningPointUTXOSetOverrideRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopNotifyingPruningPointUTXOSetOverrideRequestMessageDefaultTypeInternal() {}
  union {
    StopNotifyingPruningPointUTXOSetOverrideRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopNotifyingPruningPointUTXOSetOverrideRequestMessageDefaultTypeInternal _StopNotifyingPruningPointUTXOSetOverrideRequestMessage_default_instance_;
constexpr StopNotifyingPruningPointUTXOSetOverrideResponseMessage::StopNotifyingPruningPointUTXOSetOverrideResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct StopNotifyingPruningPointUTXOSetOverrideResponseMessageDefaultTypeInternal {
  constexpr StopNotifyingPruningPointUTXOSetOverrideResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopNotifyingPruningPointUTXOSetOverrideResponseMessageDefaultTypeInternal() {}
  union {
    StopNotifyingPruningPointUTXOSetOverrideResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopNotifyingPruningPointUTXOSetOverrideResponseMessageDefaultTypeInternal _StopNotifyingPruningPointUTXOSetOverrideResponseMessage_default_instance_;
constexpr BanRequestMessage::BanRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ip_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BanRequestMessageDefaultTypeInternal {
  constexpr BanRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BanRequestMessageDefaultTypeInternal() {}
  union {
    BanRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BanRequestMessageDefaultTypeInternal _BanRequestMessage_default_instance_;
constexpr BanResponseMessage::BanResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct BanResponseMessageDefaultTypeInternal {
  constexpr BanResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BanResponseMessageDefaultTypeInternal() {}
  union {
    BanResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BanResponseMessageDefaultTypeInternal _BanResponseMessage_default_instance_;
constexpr UnbanRequestMessage::UnbanRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ip_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UnbanRequestMessageDefaultTypeInternal {
  constexpr UnbanRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnbanRequestMessageDefaultTypeInternal() {}
  union {
    UnbanRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnbanRequestMessageDefaultTypeInternal _UnbanRequestMessage_default_instance_;
constexpr UnbanResponseMessage::UnbanResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct UnbanResponseMessageDefaultTypeInternal {
  constexpr UnbanResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnbanResponseMessageDefaultTypeInternal() {}
  union {
    UnbanResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnbanResponseMessageDefaultTypeInternal _UnbanResponseMessage_default_instance_;
constexpr GetInfoRequestMessage::GetInfoRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetInfoRequestMessageDefaultTypeInternal {
  constexpr GetInfoRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetInfoRequestMessageDefaultTypeInternal() {}
  union {
    GetInfoRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetInfoRequestMessageDefaultTypeInternal _GetInfoRequestMessage_default_instance_;
constexpr GetInfoResponseMessage::GetInfoResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : p2pid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , serverversion_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(nullptr)
  , mempoolsize_(uint64_t{0u})
  , isutxoindexed_(false)
  , issynced_(false){}
struct GetInfoResponseMessageDefaultTypeInternal {
  constexpr GetInfoResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetInfoResponseMessageDefaultTypeInternal() {}
  union {
    GetInfoResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetInfoResponseMessageDefaultTypeInternal _GetInfoResponseMessage_default_instance_;
constexpr EstimateNetworkHashesPerSecondRequestMessage::EstimateNetworkHashesPerSecondRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : starthash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , windowsize_(0u){}
struct EstimateNetworkHashesPerSecondRequestMessageDefaultTypeInternal {
  constexpr EstimateNetworkHashesPerSecondRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EstimateNetworkHashesPerSecondRequestMessageDefaultTypeInternal() {}
  union {
    EstimateNetworkHashesPerSecondRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EstimateNetworkHashesPerSecondRequestMessageDefaultTypeInternal _EstimateNetworkHashesPerSecondRequestMessage_default_instance_;
constexpr EstimateNetworkHashesPerSecondResponseMessage::EstimateNetworkHashesPerSecondResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr)
  , networkhashespersecond_(uint64_t{0u}){}
struct EstimateNetworkHashesPerSecondResponseMessageDefaultTypeInternal {
  constexpr EstimateNetworkHashesPerSecondResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EstimateNetworkHashesPerSecondResponseMessageDefaultTypeInternal() {}
  union {
    EstimateNetworkHashesPerSecondResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EstimateNetworkHashesPerSecondResponseMessageDefaultTypeInternal _EstimateNetworkHashesPerSecondResponseMessage_default_instance_;
constexpr NotifyNewBlockTemplateRequestMessage::NotifyNewBlockTemplateRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NotifyNewBlockTemplateRequestMessageDefaultTypeInternal {
  constexpr NotifyNewBlockTemplateRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyNewBlockTemplateRequestMessageDefaultTypeInternal() {}
  union {
    NotifyNewBlockTemplateRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyNewBlockTemplateRequestMessageDefaultTypeInternal _NotifyNewBlockTemplateRequestMessage_default_instance_;
constexpr NotifyNewBlockTemplateResponseMessage::NotifyNewBlockTemplateResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr){}
struct NotifyNewBlockTemplateResponseMessageDefaultTypeInternal {
  constexpr NotifyNewBlockTemplateResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotifyNewBlockTemplateResponseMessageDefaultTypeInternal() {}
  union {
    NotifyNewBlockTemplateResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotifyNewBlockTemplateResponseMessageDefaultTypeInternal _NotifyNewBlockTemplateResponseMessage_default_instance_;
constexpr NewBlockTemplateNotificationMessage::NewBlockTemplateNotificationMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NewBlockTemplateNotificationMessageDefaultTypeInternal {
  constexpr NewBlockTemplateNotificationMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NewBlockTemplateNotificationMessageDefaultTypeInternal() {}
  union {
    NewBlockTemplateNotificationMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NewBlockTemplateNotificationMessageDefaultTypeInternal _NewBlockTemplateNotificationMessage_default_instance_;
constexpr MempoolEntryByAddress::MempoolEntryByAddress(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sending_()
  , receiving_()
  , address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct MempoolEntryByAddressDefaultTypeInternal {
  constexpr MempoolEntryByAddressDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MempoolEntryByAddressDefaultTypeInternal() {}
  union {
    MempoolEntryByAddress _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MempoolEntryByAddressDefaultTypeInternal _MempoolEntryByAddress_default_instance_;
constexpr GetMempoolEntriesByAddressesRequestMessage::GetMempoolEntriesByAddressesRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : addresses_()
  , includeorphanpool_(false)
  , filtertransactionpool_(false){}
struct GetMempoolEntriesByAddressesRequestMessageDefaultTypeInternal {
  constexpr GetMempoolEntriesByAddressesRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMempoolEntriesByAddressesRequestMessageDefaultTypeInternal() {}
  union {
    GetMempoolEntriesByAddressesRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMempoolEntriesByAddressesRequestMessageDefaultTypeInternal _GetMempoolEntriesByAddressesRequestMessage_default_instance_;
constexpr GetMempoolEntriesByAddressesResponseMessage::GetMempoolEntriesByAddressesResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_()
  , error_(nullptr){}
struct GetMempoolEntriesByAddressesResponseMessageDefaultTypeInternal {
  constexpr GetMempoolEntriesByAddressesResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMempoolEntriesByAddressesResponseMessageDefaultTypeInternal() {}
  union {
    GetMempoolEntriesByAddressesResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMempoolEntriesByAddressesResponseMessageDefaultTypeInternal _GetMempoolEntriesByAddressesResponseMessage_default_instance_;
constexpr GetCoinSupplyRequestMessage::GetCoinSupplyRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetCoinSupplyRequestMessageDefaultTypeInternal {
  constexpr GetCoinSupplyRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCoinSupplyRequestMessageDefaultTypeInternal() {}
  union {
    GetCoinSupplyRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCoinSupplyRequestMessageDefaultTypeInternal _GetCoinSupplyRequestMessage_default_instance_;
constexpr GetCoinSupplyResponseMessage::GetCoinSupplyResponseMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(nullptr)
  , maxsompi_(uint64_t{0u})
  , circulatingsompi_(uint64_t{0u}){}
struct GetCoinSupplyResponseMessageDefaultTypeInternal {
  constexpr GetCoinSupplyResponseMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetCoinSupplyResponseMessageDefaultTypeInternal() {}
  union {
    GetCoinSupplyResponseMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetCoinSupplyResponseMessageDefaultTypeInternal _GetCoinSupplyResponseMessage_default_instance_;
}  // namespace protowire
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_rpc_2eproto[108];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_rpc_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_rpc_2eproto = nullptr;

const uint32_t TableStruct_rpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RPCError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RPCError, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlock, header_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlock, transactions_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlock, verbosedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, version_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, parents_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, hashmerkleroot_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, acceptedidmerkleroot_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, utxocommitment_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, timestamp_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, bits_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, nonce_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, daascore_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, bluework_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, pruningpoint_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockHeader, bluescore_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockLevelParents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockLevelParents, parenthashes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, hash_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, difficulty_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, selectedparenthash_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, transactionids_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, isheaderonly_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, bluescore_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, childrenhashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, mergesetblueshashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, mergesetredshashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcBlockVerboseData, ischainblock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, version_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, inputs_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, outputs_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, locktime_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, subnetworkid_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, gas_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, payload_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransaction, verbosedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionInput, previousoutpoint_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionInput, signaturescript_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionInput, sequence_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionInput, sigopcount_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionInput, verbosedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcScriptPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcScriptPublicKey, version_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcScriptPublicKey, scriptpublickey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionOutput, amount_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionOutput, scriptpublickey_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionOutput, verbosedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcOutpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcOutpoint, transactionid_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcOutpoint, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcUtxoEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcUtxoEntry, amount_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcUtxoEntry, scriptpublickey_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcUtxoEntry, blockdaascore_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcUtxoEntry, iscoinbase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionVerboseData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionVerboseData, transactionid_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionVerboseData, hash_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionVerboseData, mass_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionVerboseData, blockhash_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionVerboseData, blocktime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionInputVerboseData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionOutputVerboseData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionOutputVerboseData, scriptpublickeytype_),
  PROTOBUF_FIELD_OFFSET(::protowire::RpcTransactionOutputVerboseData, scriptpublickeyaddress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetCurrentNetworkRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetCurrentNetworkResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetCurrentNetworkResponseMessage, currentnetwork_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetCurrentNetworkResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitBlockRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitBlockRequestMessage, block_),
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitBlockRequestMessage, allownondaablocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitBlockResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitBlockResponseMessage, rejectreason_),
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitBlockResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockTemplateRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockTemplateRequestMessage, payaddress_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockTemplateRequestMessage, extradata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockTemplateResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockTemplateResponseMessage, block_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockTemplateResponseMessage, issynced_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockTemplateResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyBlockAddedRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyBlockAddedResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyBlockAddedResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::BlockAddedNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::BlockAddedNotificationMessage, block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetPeerAddressesRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetPeerAddressesResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetPeerAddressesResponseMessage, addresses_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetPeerAddressesResponseMessage, bannedaddresses_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetPeerAddressesResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetPeerAddressesKnownAddressMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetPeerAddressesKnownAddressMessage, addr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetSelectedTipHashRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetSelectedTipHashResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetSelectedTipHashResponseMessage, selectedtiphash_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetSelectedTipHashResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntryRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntryRequestMessage, txid_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntryRequestMessage, includeorphanpool_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntryRequestMessage, filtertransactionpool_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntryResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntryResponseMessage, entry_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntryResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesRequestMessage, includeorphanpool_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesRequestMessage, filtertransactionpool_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesResponseMessage, entries_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::MempoolEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::MempoolEntry, fee_),
  PROTOBUF_FIELD_OFFSET(::protowire::MempoolEntry, transaction_),
  PROTOBUF_FIELD_OFFSET(::protowire::MempoolEntry, isorphan_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoResponseMessage, infos_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, id_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, address_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, lastpingduration_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, isoutbound_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, timeoffset_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, useragent_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, advertisedprotocolversion_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, timeconnected_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetConnectedPeerInfoMessage, isibdpeer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::AddPeerRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::AddPeerRequestMessage, address_),
  PROTOBUF_FIELD_OFFSET(::protowire::AddPeerRequestMessage, ispermanent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::AddPeerResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::AddPeerResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitTransactionRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitTransactionRequestMessage, transaction_),
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitTransactionRequestMessage, alloworphan_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitTransactionResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitTransactionResponseMessage, transactionid_),
  PROTOBUF_FIELD_OFFSET(::protowire::SubmitTransactionResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage, includeacceptedtransactionids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::VirtualSelectedParentChainChangedNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::VirtualSelectedParentChainChangedNotificationMessage, removedchainblockhashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::VirtualSelectedParentChainChangedNotificationMessage, addedchainblockhashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::VirtualSelectedParentChainChangedNotificationMessage, acceptedtransactionids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockRequestMessage, hash_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockRequestMessage, includetransactions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockResponseMessage, block_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetSubnetworkRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetSubnetworkRequestMessage, subnetworkid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetSubnetworkResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetSubnetworkResponseMessage, gaslimit_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetSubnetworkResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage, starthash_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage, includeacceptedtransactionids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::AcceptedTransactionIds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::AcceptedTransactionIds, acceptingblockhash_),
  PROTOBUF_FIELD_OFFSET(::protowire::AcceptedTransactionIds, acceptedtransactionids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage, removedchainblockhashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage, addedchainblockhashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage, acceptedtransactionids_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlocksRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlocksRequestMessage, lowhash_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlocksRequestMessage, includeblocks_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlocksRequestMessage, includetransactions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlocksResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlocksResponseMessage, blockhashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlocksResponseMessage, blocks_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlocksResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockCountRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockCountResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockCountResponseMessage, blockcount_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockCountResponseMessage, headercount_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockCountResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, networkname_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, blockcount_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, headercount_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, tiphashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, difficulty_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, pastmediantime_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, virtualparenthashes_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, pruningpointhash_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, virtualdaascore_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBlockDagInfoResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::ResolveFinalityConflictRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::ResolveFinalityConflictRequestMessage, finalityblockhash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::ResolveFinalityConflictResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::ResolveFinalityConflictResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyFinalityConflictsRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyFinalityConflictsResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyFinalityConflictsResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::FinalityConflictNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::FinalityConflictNotificationMessage, violatingblockhash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::FinalityConflictResolvedNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::FinalityConflictResolvedNotificationMessage, finalityblockhash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::ShutDownRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::ShutDownResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::ShutDownResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetHeadersRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetHeadersRequestMessage, starthash_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetHeadersRequestMessage, limit_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetHeadersRequestMessage, isascending_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetHeadersResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetHeadersResponseMessage, headers_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetHeadersResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyUtxosChangedRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyUtxosChangedRequestMessage, addresses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyUtxosChangedResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyUtxosChangedResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::UtxosChangedNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::UtxosChangedNotificationMessage, added_),
  PROTOBUF_FIELD_OFFSET(::protowire::UtxosChangedNotificationMessage, removed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::UtxosByAddressesEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::UtxosByAddressesEntry, address_),
  PROTOBUF_FIELD_OFFSET(::protowire::UtxosByAddressesEntry, outpoint_),
  PROTOBUF_FIELD_OFFSET(::protowire::UtxosByAddressesEntry, utxoentry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::StopNotifyingUtxosChangedRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::StopNotifyingUtxosChangedRequestMessage, addresses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::StopNotifyingUtxosChangedResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::StopNotifyingUtxosChangedResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetUtxosByAddressesRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetUtxosByAddressesRequestMessage, addresses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetUtxosByAddressesResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetUtxosByAddressesResponseMessage, entries_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetUtxosByAddressesResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalanceByAddressRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalanceByAddressRequestMessage, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalanceByAddressResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalanceByAddressResponseMessage, balance_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalanceByAddressResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalancesByAddressesRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalancesByAddressesRequestMessage, addresses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::BalancesByAddressEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::BalancesByAddressEntry, address_),
  PROTOBUF_FIELD_OFFSET(::protowire::BalancesByAddressEntry, balance_),
  PROTOBUF_FIELD_OFFSET(::protowire::BalancesByAddressEntry, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalancesByAddressesResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalancesByAddressesResponseMessage, entries_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetBalancesByAddressesResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentBlueScoreRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentBlueScoreResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentBlueScoreResponseMessage, bluescore_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetVirtualSelectedParentBlueScoreResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage, virtualselectedparentbluescore_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualDaaScoreChangedRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualDaaScoreChangedResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyVirtualDaaScoreChangedResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::VirtualDaaScoreChangedNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::VirtualDaaScoreChangedNotificationMessage, virtualdaascore_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::PruningPointUTXOSetOverrideNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::BanRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::BanRequestMessage, ip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::BanResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::BanResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::UnbanRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::UnbanRequestMessage, ip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::UnbanResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::UnbanResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetInfoRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetInfoResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetInfoResponseMessage, p2pid_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetInfoResponseMessage, mempoolsize_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetInfoResponseMessage, serverversion_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetInfoResponseMessage, isutxoindexed_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetInfoResponseMessage, issynced_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetInfoResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::EstimateNetworkHashesPerSecondRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::EstimateNetworkHashesPerSecondRequestMessage, windowsize_),
  PROTOBUF_FIELD_OFFSET(::protowire::EstimateNetworkHashesPerSecondRequestMessage, starthash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::EstimateNetworkHashesPerSecondResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::EstimateNetworkHashesPerSecondResponseMessage, networkhashespersecond_),
  PROTOBUF_FIELD_OFFSET(::protowire::EstimateNetworkHashesPerSecondResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyNewBlockTemplateRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyNewBlockTemplateResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::NotifyNewBlockTemplateResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::NewBlockTemplateNotificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::MempoolEntryByAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::MempoolEntryByAddress, address_),
  PROTOBUF_FIELD_OFFSET(::protowire::MempoolEntryByAddress, sending_),
  PROTOBUF_FIELD_OFFSET(::protowire::MempoolEntryByAddress, receiving_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesByAddressesRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesByAddressesRequestMessage, addresses_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesByAddressesRequestMessage, includeorphanpool_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesByAddressesRequestMessage, filtertransactionpool_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesByAddressesResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesByAddressesResponseMessage, entries_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetMempoolEntriesByAddressesResponseMessage, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetCoinSupplyRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protowire::GetCoinSupplyResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protowire::GetCoinSupplyResponseMessage, maxsompi_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetCoinSupplyResponseMessage, circulatingsompi_),
  PROTOBUF_FIELD_OFFSET(::protowire::GetCoinSupplyResponseMessage, error_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::protowire::RPCError)},
  { 7, -1, -1, sizeof(::protowire::RpcBlock)},
  { 16, -1, -1, sizeof(::protowire::RpcBlockHeader)},
  { 34, -1, -1, sizeof(::protowire::RpcBlockLevelParents)},
  { 41, -1, -1, sizeof(::protowire::RpcBlockVerboseData)},
  { 57, -1, -1, sizeof(::protowire::RpcTransaction)},
  { 71, -1, -1, sizeof(::protowire::RpcTransactionInput)},
  { 82, -1, -1, sizeof(::protowire::RpcScriptPublicKey)},
  { 90, -1, -1, sizeof(::protowire::RpcTransactionOutput)},
  { 99, -1, -1, sizeof(::protowire::RpcOutpoint)},
  { 107, -1, -1, sizeof(::protowire::RpcUtxoEntry)},
  { 117, -1, -1, sizeof(::protowire::RpcTransactionVerboseData)},
  { 128, -1, -1, sizeof(::protowire::RpcTransactionInputVerboseData)},
  { 134, -1, -1, sizeof(::protowire::RpcTransactionOutputVerboseData)},
  { 142, -1, -1, sizeof(::protowire::GetCurrentNetworkRequestMessage)},
  { 148, -1, -1, sizeof(::protowire::GetCurrentNetworkResponseMessage)},
  { 156, -1, -1, sizeof(::protowire::SubmitBlockRequestMessage)},
  { 164, -1, -1, sizeof(::protowire::SubmitBlockResponseMessage)},
  { 172, -1, -1, sizeof(::protowire::GetBlockTemplateRequestMessage)},
  { 180, -1, -1, sizeof(::protowire::GetBlockTemplateResponseMessage)},
  { 189, -1, -1, sizeof(::protowire::NotifyBlockAddedRequestMessage)},
  { 195, -1, -1, sizeof(::protowire::NotifyBlockAddedResponseMessage)},
  { 202, -1, -1, sizeof(::protowire::BlockAddedNotificationMessage)},
  { 209, -1, -1, sizeof(::protowire::GetPeerAddressesRequestMessage)},
  { 215, -1, -1, sizeof(::protowire::GetPeerAddressesResponseMessage)},
  { 224, -1, -1, sizeof(::protowire::GetPeerAddressesKnownAddressMessage)},
  { 231, -1, -1, sizeof(::protowire::GetSelectedTipHashRequestMessage)},
  { 237, -1, -1, sizeof(::protowire::GetSelectedTipHashResponseMessage)},
  { 245, -1, -1, sizeof(::protowire::GetMempoolEntryRequestMessage)},
  { 254, -1, -1, sizeof(::protowire::GetMempoolEntryResponseMessage)},
  { 262, -1, -1, sizeof(::protowire::GetMempoolEntriesRequestMessage)},
  { 270, -1, -1, sizeof(::protowire::GetMempoolEntriesResponseMessage)},
  { 278, -1, -1, sizeof(::protowire::MempoolEntry)},
  { 287, -1, -1, sizeof(::protowire::GetConnectedPeerInfoRequestMessage)},
  { 293, -1, -1, sizeof(::protowire::GetConnectedPeerInfoResponseMessage)},
  { 301, -1, -1, sizeof(::protowire::GetConnectedPeerInfoMessage)},
  { 316, -1, -1, sizeof(::protowire::AddPeerRequestMessage)},
  { 324, -1, -1, sizeof(::protowire::AddPeerResponseMessage)},
  { 331, -1, -1, sizeof(::protowire::SubmitTransactionRequestMessage)},
  { 339, -1, -1, sizeof(::protowire::SubmitTransactionResponseMessage)},
  { 347, -1, -1, sizeof(::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage)},
  { 354, -1, -1, sizeof(::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage)},
  { 361, -1, -1, sizeof(::protowire::VirtualSelectedParentChainChangedNotificationMessage)},
  { 370, -1, -1, sizeof(::protowire::GetBlockRequestMessage)},
  { 378, -1, -1, sizeof(::protowire::GetBlockResponseMessage)},
  { 386, -1, -1, sizeof(::protowire::GetSubnetworkRequestMessage)},
  { 393, -1, -1, sizeof(::protowire::GetSubnetworkResponseMessage)},
  { 401, -1, -1, sizeof(::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage)},
  { 409, -1, -1, sizeof(::protowire::AcceptedTransactionIds)},
  { 417, -1, -1, sizeof(::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage)},
  { 427, -1, -1, sizeof(::protowire::GetBlocksRequestMessage)},
  { 436, -1, -1, sizeof(::protowire::GetBlocksResponseMessage)},
  { 445, -1, -1, sizeof(::protowire::GetBlockCountRequestMessage)},
  { 451, -1, -1, sizeof(::protowire::GetBlockCountResponseMessage)},
  { 460, -1, -1, sizeof(::protowire::GetBlockDagInfoRequestMessage)},
  { 466, -1, -1, sizeof(::protowire::GetBlockDagInfoResponseMessage)},
  { 482, -1, -1, sizeof(::protowire::ResolveFinalityConflictRequestMessage)},
  { 489, -1, -1, sizeof(::protowire::ResolveFinalityConflictResponseMessage)},
  { 496, -1, -1, sizeof(::protowire::NotifyFinalityConflictsRequestMessage)},
  { 502, -1, -1, sizeof(::protowire::NotifyFinalityConflictsResponseMessage)},
  { 509, -1, -1, sizeof(::protowire::FinalityConflictNotificationMessage)},
  { 516, -1, -1, sizeof(::protowire::FinalityConflictResolvedNotificationMessage)},
  { 523, -1, -1, sizeof(::protowire::ShutDownRequestMessage)},
  { 529, -1, -1, sizeof(::protowire::ShutDownResponseMessage)},
  { 536, -1, -1, sizeof(::protowire::GetHeadersRequestMessage)},
  { 545, -1, -1, sizeof(::protowire::GetHeadersResponseMessage)},
  { 553, -1, -1, sizeof(::protowire::NotifyUtxosChangedRequestMessage)},
  { 560, -1, -1, sizeof(::protowire::NotifyUtxosChangedResponseMessage)},
  { 567, -1, -1, sizeof(::protowire::UtxosChangedNotificationMessage)},
  { 575, -1, -1, sizeof(::protowire::UtxosByAddressesEntry)},
  { 584, -1, -1, sizeof(::protowire::StopNotifyingUtxosChangedRequestMessage)},
  { 591, -1, -1, sizeof(::protowire::StopNotifyingUtxosChangedResponseMessage)},
  { 598, -1, -1, sizeof(::protowire::GetUtxosByAddressesRequestMessage)},
  { 605, -1, -1, sizeof(::protowire::GetUtxosByAddressesResponseMessage)},
  { 613, -1, -1, sizeof(::protowire::GetBalanceByAddressRequestMessage)},
  { 620, -1, -1, sizeof(::protowire::GetBalanceByAddressResponseMessage)},
  { 628, -1, -1, sizeof(::protowire::GetBalancesByAddressesRequestMessage)},
  { 635, -1, -1, sizeof(::protowire::BalancesByAddressEntry)},
  { 644, -1, -1, sizeof(::protowire::GetBalancesByAddressesResponseMessage)},
  { 652, -1, -1, sizeof(::protowire::GetVirtualSelectedParentBlueScoreRequestMessage)},
  { 658, -1, -1, sizeof(::protowire::GetVirtualSelectedParentBlueScoreResponseMessage)},
  { 666, -1, -1, sizeof(::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage)},
  { 672, -1, -1, sizeof(::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)},
  { 679, -1, -1, sizeof(::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage)},
  { 686, -1, -1, sizeof(::protowire::NotifyVirtualDaaScoreChangedRequestMessage)},
  { 692, -1, -1, sizeof(::protowire::NotifyVirtualDaaScoreChangedResponseMessage)},
  { 699, -1, -1, sizeof(::protowire::VirtualDaaScoreChangedNotificationMessage)},
  { 706, -1, -1, sizeof(::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage)},
  { 712, -1, -1, sizeof(::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage)},
  { 719, -1, -1, sizeof(::protowire::PruningPointUTXOSetOverrideNotificationMessage)},
  { 725, -1, -1, sizeof(::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage)},
  { 731, -1, -1, sizeof(::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage)},
  { 738, -1, -1, sizeof(::protowire::BanRequestMessage)},
  { 745, -1, -1, sizeof(::protowire::BanResponseMessage)},
  { 752, -1, -1, sizeof(::protowire::UnbanRequestMessage)},
  { 759, -1, -1, sizeof(::protowire::UnbanResponseMessage)},
  { 766, -1, -1, sizeof(::protowire::GetInfoRequestMessage)},
  { 772, -1, -1, sizeof(::protowire::GetInfoResponseMessage)},
  { 784, -1, -1, sizeof(::protowire::EstimateNetworkHashesPerSecondRequestMessage)},
  { 792, -1, -1, sizeof(::protowire::EstimateNetworkHashesPerSecondResponseMessage)},
  { 800, -1, -1, sizeof(::protowire::NotifyNewBlockTemplateRequestMessage)},
  { 806, -1, -1, sizeof(::protowire::NotifyNewBlockTemplateResponseMessage)},
  { 813, -1, -1, sizeof(::protowire::NewBlockTemplateNotificationMessage)},
  { 819, -1, -1, sizeof(::protowire::MempoolEntryByAddress)},
  { 828, -1, -1, sizeof(::protowire::GetMempoolEntriesByAddressesRequestMessage)},
  { 837, -1, -1, sizeof(::protowire::GetMempoolEntriesByAddressesResponseMessage)},
  { 845, -1, -1, sizeof(::protowire::GetCoinSupplyRequestMessage)},
  { 851, -1, -1, sizeof(::protowire::GetCoinSupplyResponseMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RPCError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcBlockHeader_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcBlockLevelParents_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcBlockVerboseData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcTransaction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcTransactionInput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcScriptPublicKey_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcTransactionOutput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcOutpoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcUtxoEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcTransactionVerboseData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcTransactionInputVerboseData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_RpcTransactionOutputVerboseData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetCurrentNetworkRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetCurrentNetworkResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_SubmitBlockRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_SubmitBlockResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlockTemplateRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlockTemplateResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyBlockAddedRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyBlockAddedResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_BlockAddedNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetPeerAddressesRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetPeerAddressesResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetPeerAddressesKnownAddressMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetSelectedTipHashRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetSelectedTipHashResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetMempoolEntryRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetMempoolEntryResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetMempoolEntriesRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetMempoolEntriesResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_MempoolEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetConnectedPeerInfoRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetConnectedPeerInfoResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetConnectedPeerInfoMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_AddPeerRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_AddPeerResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_SubmitTransactionRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_SubmitTransactionResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyVirtualSelectedParentChainChangedRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyVirtualSelectedParentChainChangedResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_VirtualSelectedParentChainChangedNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlockRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlockResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetSubnetworkRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetSubnetworkResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetVirtualSelectedParentChainFromBlockRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_AcceptedTransactionIds_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetVirtualSelectedParentChainFromBlockResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlocksRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlocksResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlockCountRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlockCountResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlockDagInfoRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBlockDagInfoResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_ResolveFinalityConflictRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_ResolveFinalityConflictResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyFinalityConflictsRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyFinalityConflictsResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_FinalityConflictNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_FinalityConflictResolvedNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_ShutDownRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_ShutDownResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetHeadersRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetHeadersResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyUtxosChangedRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyUtxosChangedResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_UtxosChangedNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_UtxosByAddressesEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_StopNotifyingUtxosChangedRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_StopNotifyingUtxosChangedResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetUtxosByAddressesRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetUtxosByAddressesResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBalanceByAddressRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBalanceByAddressResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBalancesByAddressesRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_BalancesByAddressEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetBalancesByAddressesResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetVirtualSelectedParentBlueScoreRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetVirtualSelectedParentBlueScoreResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyVirtualSelectedParentBlueScoreChangedRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyVirtualSelectedParentBlueScoreChangedResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_VirtualSelectedParentBlueScoreChangedNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyVirtualDaaScoreChangedRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyVirtualDaaScoreChangedResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_VirtualDaaScoreChangedNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyPruningPointUTXOSetOverrideRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyPruningPointUTXOSetOverrideResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_PruningPointUTXOSetOverrideNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_StopNotifyingPruningPointUTXOSetOverrideRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_StopNotifyingPruningPointUTXOSetOverrideResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_BanRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_BanResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_UnbanRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_UnbanResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetInfoRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetInfoResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_EstimateNetworkHashesPerSecondRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_EstimateNetworkHashesPerSecondResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyNewBlockTemplateRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NotifyNewBlockTemplateResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_NewBlockTemplateNotificationMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_MempoolEntryByAddress_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetMempoolEntriesByAddressesRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetMempoolEntriesByAddressesResponseMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetCoinSupplyRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protowire::_GetCoinSupplyResponseMessage_default_instance_),
};

const char descriptor_table_protodef_rpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\trpc.proto\022\tprotowire\"\033\n\010RPCError\022\017\n\007me"
  "ssage\030\001 \001(\t\"\233\001\n\010RpcBlock\022)\n\006header\030\001 \001(\013"
  "2\031.protowire.RpcBlockHeader\022/\n\014transacti"
  "ons\030\002 \003(\0132\031.protowire.RpcTransaction\0223\n\013"
  "verboseData\030\003 \001(\0132\036.protowire.RpcBlockVe"
  "rboseData\"\236\002\n\016RpcBlockHeader\022\017\n\007version\030"
  "\001 \001(\r\0220\n\007parents\030\014 \003(\0132\037.protowire.RpcBl"
  "ockLevelParents\022\026\n\016hashMerkleRoot\030\003 \001(\t\022"
  "\034\n\024acceptedIdMerkleRoot\030\004 \001(\t\022\026\n\016utxoCom"
  "mitment\030\005 \001(\t\022\021\n\ttimestamp\030\006 \001(\003\022\014\n\004bits"
  "\030\007 \001(\r\022\r\n\005nonce\030\010 \001(\004\022\020\n\010daaScore\030\t \001(\004\022"
  "\020\n\010blueWork\030\n \001(\t\022\024\n\014pruningPoint\030\016 \001(\t\022"
  "\021\n\tblueScore\030\r \001(\004\",\n\024RpcBlockLevelParen"
  "ts\022\024\n\014parentHashes\030\001 \003(\t\"\373\001\n\023RpcBlockVer"
  "boseData\022\014\n\004hash\030\001 \001(\t\022\022\n\ndifficulty\030\013 \001"
  "(\001\022\032\n\022selectedParentHash\030\r \001(\t\022\026\n\016transa"
  "ctionIds\030\016 \003(\t\022\024\n\014isHeaderOnly\030\017 \001(\010\022\021\n\t"
  "blueScore\030\020 \001(\004\022\026\n\016childrenHashes\030\021 \003(\t\022"
  "\033\n\023mergeSetBluesHashes\030\022 \003(\t\022\032\n\022mergeSet"
  "RedsHashes\030\023 \003(\t\022\024\n\014isChainBlock\030\024 \001(\010\"\204"
  "\002\n\016RpcTransaction\022\017\n\007version\030\001 \001(\r\022.\n\006in"
  "puts\030\002 \003(\0132\036.protowire.RpcTransactionInp"
  "ut\0220\n\007outputs\030\003 \003(\0132\037.protowire.RpcTrans"
  "actionOutput\022\020\n\010lockTime\030\004 \001(\004\022\024\n\014subnet"
  "workId\030\005 \001(\t\022\013\n\003gas\030\006 \001(\004\022\017\n\007payload\030\010 \001"
  "(\t\0229\n\013verboseData\030\t \001(\0132$.protowire.RpcT"
  "ransactionVerboseData\"\306\001\n\023RpcTransaction"
  "Input\0220\n\020previousOutpoint\030\001 \001(\0132\026.protow"
  "ire.RpcOutpoint\022\027\n\017signatureScript\030\002 \001(\t"
  "\022\020\n\010sequence\030\003 \001(\004\022\022\n\nsigOpCount\030\005 \001(\r\022>"
  "\n\013verboseData\030\004 \001(\0132).protowire.RpcTrans"
  "actionInputVerboseData\">\n\022RpcScriptPubli"
  "cKey\022\017\n\007version\030\001 \001(\r\022\027\n\017scriptPublicKey"
  "\030\002 \001(\t\"\237\001\n\024RpcTransactionOutput\022\016\n\006amoun"
  "t\030\001 \001(\004\0226\n\017scriptPublicKey\030\002 \001(\0132\035.proto"
  "wire.RpcScriptPublicKey\022\?\n\013verboseData\030\003"
  " \001(\0132*.protowire.RpcTransactionOutputVer"
  "boseData\"3\n\013RpcOutpoint\022\025\n\rtransactionId"
  "\030\001 \001(\t\022\r\n\005index\030\002 \001(\r\"\201\001\n\014RpcUtxoEntry\022\016"
  "\n\006amount\030\001 \001(\004\0226\n\017scriptPublicKey\030\002 \001(\0132"
  "\035.protowire.RpcScriptPublicKey\022\025\n\rblockD"
  "aaScore\030\003 \001(\004\022\022\n\nisCoinbase\030\004 \001(\010\"t\n\031Rpc"
  "TransactionVerboseData\022\025\n\rtransactionId\030"
  "\001 \001(\t\022\014\n\004hash\030\002 \001(\t\022\014\n\004mass\030\004 \001(\004\022\021\n\tblo"
  "ckHash\030\014 \001(\t\022\021\n\tblockTime\030\016 \001(\004\" \n\036RpcTr"
  "ansactionInputVerboseData\"^\n\037RpcTransact"
  "ionOutputVerboseData\022\033\n\023scriptPublicKeyT"
  "ype\030\005 \001(\t\022\036\n\026scriptPublicKeyAddress\030\006 \001("
  "\t\"!\n\037GetCurrentNetworkRequestMessage\"_\n "
  "GetCurrentNetworkResponseMessage\022\026\n\016curr"
  "entNetwork\030\001 \001(\t\022#\n\005error\030\350\007 \001(\0132\023.proto"
  "wire.RPCError\"Z\n\031SubmitBlockRequestMessa"
  "ge\022\"\n\005block\030\002 \001(\0132\023.protowire.RpcBlock\022\031"
  "\n\021allowNonDAABlocks\030\003 \001(\010\"\307\001\n\032SubmitBloc"
  "kResponseMessage\022H\n\014rejectReason\030\001 \001(\01622"
  ".protowire.SubmitBlockResponseMessage.Re"
  "jectReason\022#\n\005error\030\350\007 \001(\0132\023.protowire.R"
  "PCError\":\n\014RejectReason\022\010\n\004NONE\020\000\022\021\n\rBLO"
  "CK_INVALID\020\001\022\r\n\tIS_IN_IBD\020\002\"G\n\036GetBlockT"
  "emplateRequestMessage\022\022\n\npayAddress\030\001 \001("
  "\t\022\021\n\textraData\030\002 \001(\t\"|\n\037GetBlockTemplate"
  "ResponseMessage\022\"\n\005block\030\003 \001(\0132\023.protowi"
  "re.RpcBlock\022\020\n\010isSynced\030\002 \001(\010\022#\n\005error\030\350"
  "\007 \001(\0132\023.protowire.RPCError\" \n\036NotifyBloc"
  "kAddedRequestMessage\"F\n\037NotifyBlockAdded"
  "ResponseMessage\022#\n\005error\030\350\007 \001(\0132\023.protow"
  "ire.RPCError\"C\n\035BlockAddedNotificationMe"
  "ssage\022\"\n\005block\030\003 \001(\0132\023.protowire.RpcBloc"
  "k\" \n\036GetPeerAddressesRequestMessage\"\322\001\n\037"
  "GetPeerAddressesResponseMessage\022A\n\taddre"
  "sses\030\001 \003(\0132..protowire.GetPeerAddressesK"
  "nownAddressMessage\022G\n\017bannedAddresses\030\002 "
  "\003(\0132..protowire.GetPeerAddressesKnownAdd"
  "ressMessage\022#\n\005error\030\350\007 \001(\0132\023.protowire."
  "RPCError\"3\n#GetPeerAddressesKnownAddress"
  "Message\022\014\n\004Addr\030\001 \001(\t\"\"\n GetSelectedTipH"
  "ashRequestMessage\"a\n!GetSelectedTipHashR"
  "esponseMessage\022\027\n\017selectedTipHash\030\001 \001(\t\022"
  "#\n\005error\030\350\007 \001(\0132\023.protowire.RPCError\"g\n\035"
  "GetMempoolEntryRequestMessage\022\014\n\004txId\030\001 "
  "\001(\t\022\031\n\021includeOrphanPool\030\002 \001(\010\022\035\n\025filter"
  "TransactionPool\030\003 \001(\010\"m\n\036GetMempoolEntry"
  "ResponseMessage\022&\n\005entry\030\001 \001(\0132\027.protowi"
  "re.MempoolEntry\022#\n\005error\030\350\007 \001(\0132\023.protow"
  "ire.RPCError\"[\n\037GetMempoolEntriesRequest"
  "Message\022\031\n\021includeOrphanPool\030\001 \001(\010\022\035\n\025fi"
  "lterTransactionPool\030\002 \001(\010\"q\n GetMempoolE"
  "ntriesResponseMessage\022(\n\007entries\030\001 \003(\0132\027"
  ".protowire.MempoolEntry\022#\n\005error\030\350\007 \001(\0132"
  "\023.protowire.RPCError\"]\n\014MempoolEntry\022\013\n\003"
  "fee\030\001 \001(\004\022.\n\013transaction\030\003 \001(\0132\031.protowi"
  "re.RpcTransaction\022\020\n\010isOrphan\030\004 \001(\010\"$\n\"G"
  "etConnectedPeerInfoRequestMessage\"\201\001\n#Ge"
  "tConnectedPeerInfoResponseMessage\0225\n\005inf"
  "os\030\001 \003(\0132&.protowire.GetConnectedPeerInf"
  "oMessage\022#\n\005error\030\350\007 \001(\0132\023.protowire.RPC"
  "Error\"\334\001\n\033GetConnectedPeerInfoMessage\022\n\n"
  "\002id\030\001 \001(\t\022\017\n\007address\030\002 \001(\t\022\030\n\020lastPingDu"
  "ration\030\003 \001(\003\022\022\n\nisOutbound\030\006 \001(\010\022\022\n\ntime"
  "Offset\030\007 \001(\003\022\021\n\tuserAgent\030\010 \001(\t\022!\n\031adver"
  "tisedProtocolVersion\030\t \001(\r\022\025\n\rtimeConnec"
  "ted\030\n \001(\003\022\021\n\tisIbdPeer\030\013 \001(\010\"=\n\025AddPeerR"
  "equestMessage\022\017\n\007address\030\001 \001(\t\022\023\n\013isPerm"
  "anent\030\002 \001(\010\"=\n\026AddPeerResponseMessage\022#\n"
  "\005error\030\350\007 \001(\0132\023.protowire.RPCError\"f\n\037Su"
  "bmitTransactionRequestMessage\022.\n\013transac"
  "tion\030\001 \001(\0132\031.protowire.RpcTransaction\022\023\n"
  "\013allowOrphan\030\002 \001(\010\"^\n SubmitTransactionR"
  "esponseMessage\022\025\n\rtransactionId\030\001 \001(\t\022#\n"
  "\005error\030\350\007 \001(\0132\023.protowire.RPCError\"^\n5No"
  "tifyVirtualSelectedParentChainChangedReq"
  "uestMessage\022%\n\035includeAcceptedTransactio"
  "nIds\030\001 \001(\010\"]\n6NotifyVirtualSelectedParen"
  "tChainChangedResponseMessage\022#\n\005error\030\350\007"
  " \001(\0132\023.protowire.RPCError\"\271\001\n4VirtualSel"
  "ectedParentChainChangedNotificationMessa"
  "ge\022\037\n\027removedChainBlockHashes\030\001 \003(\t\022\035\n\025a"
  "ddedChainBlockHashes\030\003 \003(\t\022A\n\026acceptedTr"
  "ansactionIds\030\002 \003(\0132!.protowire.AcceptedT"
  "ransactionIds\"C\n\026GetBlockRequestMessage\022"
  "\014\n\004hash\030\001 \001(\t\022\033\n\023includeTransactions\030\003 \001"
  "(\010\"b\n\027GetBlockResponseMessage\022\"\n\005block\030\003"
  " \001(\0132\023.protowire.RpcBlock\022#\n\005error\030\350\007 \001("
  "\0132\023.protowire.RPCError\"3\n\033GetSubnetworkR"
  "equestMessage\022\024\n\014subnetworkId\030\001 \001(\t\"U\n\034G"
  "etSubnetworkResponseMessage\022\020\n\010gasLimit\030"
  "\001 \001(\004\022#\n\005error\030\350\007 \001(\0132\023.protowire.RPCErr"
  "or\"p\n4GetVirtualSelectedParentChainFromB"
  "lockRequestMessage\022\021\n\tstartHash\030\001 \001(\t\022%\n"
  "\035includeAcceptedTransactionIds\030\002 \001(\010\"T\n\026"
  "AcceptedTransactionIds\022\032\n\022acceptingBlock"
  "Hash\030\001 \001(\t\022\036\n\026acceptedTransactionIds\030\002 \003"
  "(\t\"\337\001\n5GetVirtualSelectedParentChainFrom"
  "BlockResponseMessage\022\037\n\027removedChainBloc"
  "kHashes\030\001 \003(\t\022\035\n\025addedChainBlockHashes\030\003"
  " \003(\t\022A\n\026acceptedTransactionIds\030\002 \003(\0132!.p"
  "rotowire.AcceptedTransactionIds\022#\n\005error"
  "\030\350\007 \001(\0132\023.protowire.RPCError\"^\n\027GetBlock"
  "sRequestMessage\022\017\n\007lowHash\030\001 \001(\t\022\025\n\rincl"
  "udeBlocks\030\002 \001(\010\022\033\n\023includeTransactions\030\003"
  " \001(\010\"y\n\030GetBlocksResponseMessage\022\023\n\013bloc"
  "kHashes\030\004 \003(\t\022#\n\006blocks\030\003 \003(\0132\023.protowir"
  "e.RpcBlock\022#\n\005error\030\350\007 \001(\0132\023.protowire.R"
  "PCError\"\035\n\033GetBlockCountRequestMessage\"l"
  "\n\034GetBlockCountResponseMessage\022\022\n\nblockC"
  "ount\030\001 \001(\004\022\023\n\013headerCount\030\002 \001(\004\022#\n\005error"
  "\030\350\007 \001(\0132\023.protowire.RPCError\"\037\n\035GetBlock"
  "DagInfoRequestMessage\"\222\002\n\036GetBlockDagInf"
  "oResponseMessage\022\023\n\013networkName\030\001 \001(\t\022\022\n"
  "\nblockCount\030\002 \001(\004\022\023\n\013headerCount\030\003 \001(\004\022\021"
  "\n\ttipHashes\030\004 \003(\t\022\022\n\ndifficulty\030\005 \001(\001\022\026\n"
  "\016pastMedianTime\030\006 \001(\003\022\033\n\023virtualParentHa"
  "shes\030\007 \003(\t\022\030\n\020pruningPointHash\030\010 \001(\t\022\027\n\017"
  "virtualDaaScore\030\t \001(\004\022#\n\005error\030\350\007 \001(\0132\023."
  "protowire.RPCError\"B\n%ResolveFinalityCon"
  "flictRequestMessage\022\031\n\021finalityBlockHash"
  "\030\001 \001(\t\"M\n&ResolveFinalityConflictRespons"
  "eMessage\022#\n\005error\030\350\007 \001(\0132\023.protowire.RPC"
  "Error\"\'\n%NotifyFinalityConflictsRequestM"
  "essage\"M\n&NotifyFinalityConflictsRespons"
  "eMessage\022#\n\005error\030\350\007 \001(\0132\023.protowire.RPC"
  "Error\"A\n#FinalityConflictNotificationMes"
  "sage\022\032\n\022violatingBlockHash\030\001 \001(\t\"H\n+Fina"
  "lityConflictResolvedNotificationMessage\022"
  "\031\n\021finalityBlockHash\030\001 \001(\t\"\030\n\026ShutDownRe"
  "questMessage\">\n\027ShutDownResponseMessage\022"
  "#\n\005error\030\350\007 \001(\0132\023.protowire.RPCError\"Q\n\030"
  "GetHeadersRequestMessage\022\021\n\tstartHash\030\001 "
  "\001(\t\022\r\n\005limit\030\002 \001(\004\022\023\n\013isAscending\030\003 \001(\010\""
  "Q\n\031GetHeadersResponseMessage\022\017\n\007headers\030"
  "\001 \003(\t\022#\n\005error\030\350\007 \001(\0132\023.protowire.RPCErr"
  "or\"5\n NotifyUtxosChangedRequestMessage\022\021"
  "\n\taddresses\030\001 \003(\t\"H\n!NotifyUtxosChangedR"
  "esponseMessage\022#\n\005error\030\350\007 \001(\0132\023.protowi"
  "re.RPCError\"\205\001\n\037UtxosChangedNotification"
  "Message\022/\n\005added\030\001 \003(\0132 .protowire.Utxos"
  "ByAddressesEntry\0221\n\007removed\030\002 \003(\0132 .prot"
  "owire.UtxosByAddressesEntry\"~\n\025UtxosByAd"
  "dressesEntry\022\017\n\007address\030\001 \001(\t\022(\n\010outpoin"
  "t\030\002 \001(\0132\026.protowire.RpcOutpoint\022*\n\tutxoE"
  "ntry\030\003 \001(\0132\027.protowire.RpcUtxoEntry\"<\n\'S"
  "topNotifyingUtxosChangedRequestMessage\022\021"
  "\n\taddresses\030\001 \003(\t\"O\n(StopNotifyingUtxosC"
  "hangedResponseMessage\022#\n\005error\030\350\007 \001(\0132\023."
  "protowire.RPCError\"6\n!GetUtxosByAddresse"
  "sRequestMessage\022\021\n\taddresses\030\001 \003(\t\"|\n\"Ge"
  "tUtxosByAddressesResponseMessage\0221\n\007entr"
  "ies\030\001 \003(\0132 .protowire.UtxosByAddressesEn"
  "try\022#\n\005error\030\350\007 \001(\0132\023.protowire.RPCError"
  "\"4\n!GetBalanceByAddressRequestMessage\022\017\n"
  "\007address\030\001 \001(\t\"Z\n\"GetBalanceByAddressRes"
  "ponseMessage\022\017\n\007balance\030\001 \001(\004\022#\n\005error\030\350"
  "\007 \001(\0132\023.protowire.RPCError\"9\n$GetBalance"
  "sByAddressesRequestMessage\022\021\n\taddresses\030"
  "\001 \003(\t\"_\n\026BalancesByAddressEntry\022\017\n\007addre"
  "ss\030\001 \001(\t\022\017\n\007balance\030\002 \001(\004\022#\n\005error\030\350\007 \001("
  "\0132\023.protowire.RPCError\"\200\001\n%GetBalancesBy"
  "AddressesResponseMessage\0222\n\007entries\030\001 \003("
  "\0132!.protowire.BalancesByAddressEntry\022#\n\005"
  "error\030\350\007 \001(\0132\023.protowire.RPCError\"1\n/Get"
  "VirtualSelectedParentBlueScoreRequestMes"
  "sage\"j\n0GetVirtualSelectedParentBlueScor"
  "eResponseMessage\022\021\n\tblueScore\030\001 \001(\004\022#\n\005e"
  "rror\030\350\007 \001(\0132\023.protowire.RPCError\";\n9Noti"
  "fyVirtualSelectedParentBlueScoreChangedR"
  "equestMessage\"a\n:NotifyVirtualSelectedPa"
  "rentBlueScoreChangedResponseMessage\022#\n\005e"
  "rror\030\350\007 \001(\0132\023.protowire.RPCError\"b\n8Virt"
  "ualSelectedParentBlueScoreChangedNotific"
  "ationMessage\022&\n\036virtualSelectedParentBlu"
  "eScore\030\001 \001(\004\",\n*NotifyVirtualDaaScoreCha"
  "ngedRequestMessage\"R\n+NotifyVirtualDaaSc"
  "oreChangedResponseMessage\022#\n\005error\030\350\007 \001("
  "\0132\023.protowire.RPCError\"D\n)VirtualDaaScor"
  "eChangedNotificationMessage\022\027\n\017virtualDa"
  "aScore\030\001 \001(\004\"1\n/NotifyPruningPointUTXOSe"
  "tOverrideRequestMessage\"W\n0NotifyPruning"
  "PointUTXOSetOverrideResponseMessage\022#\n\005e"
  "rror\030\350\007 \001(\0132\023.protowire.RPCError\"0\n.Prun"
  "ingPointUTXOSetOverrideNotificationMessa"
  "ge\"8\n6StopNotifyingPruningPointUTXOSetOv"
  "errideRequestMessage\"^\n7StopNotifyingPru"
  "ningPointUTXOSetOverrideResponseMessage\022"
  "#\n\005error\030\350\007 \001(\0132\023.protowire.RPCError\"\037\n\021"
  "BanRequestMessage\022\n\n\002ip\030\001 \001(\t\"9\n\022BanResp"
  "onseMessage\022#\n\005error\030\350\007 \001(\0132\023.protowire."
  "RPCError\"!\n\023UnbanRequestMessage\022\n\n\002ip\030\001 "
  "\001(\t\";\n\024UnbanResponseMessage\022#\n\005error\030\350\007 "
  "\001(\0132\023.protowire.RPCError\"\027\n\025GetInfoReque"
  "stMessage\"\241\001\n\026GetInfoResponseMessage\022\r\n\005"
  "p2pId\030\001 \001(\t\022\023\n\013mempoolSize\030\002 \001(\004\022\025\n\rserv"
  "erVersion\030\003 \001(\t\022\025\n\risUtxoIndexed\030\004 \001(\010\022\020"
  "\n\010isSynced\030\005 \001(\010\022#\n\005error\030\350\007 \001(\0132\023.proto"
  "wire.RPCError\"U\n,EstimateNetworkHashesPe"
  "rSecondRequestMessage\022\022\n\nwindowSize\030\001 \001("
  "\r\022\021\n\tstartHash\030\002 \001(\t\"t\n-EstimateNetworkH"
  "ashesPerSecondResponseMessage\022\036\n\026network"
  "HashesPerSecond\030\001 \001(\004\022#\n\005error\030\350\007 \001(\0132\023."
  "protowire.RPCError\"&\n$NotifyNewBlockTemp"
  "lateRequestMessage\"L\n%NotifyNewBlockTemp"
  "lateResponseMessage\022#\n\005error\030\350\007 \001(\0132\023.pr"
  "otowire.RPCError\"%\n#NewBlockTemplateNoti"
  "ficationMessage\"~\n\025MempoolEntryByAddress"
  "\022\017\n\007address\030\001 \001(\t\022(\n\007sending\030\002 \003(\0132\027.pro"
  "towire.MempoolEntry\022*\n\treceiving\030\003 \003(\0132\027"
  ".protowire.MempoolEntry\"y\n*GetMempoolEnt"
  "riesByAddressesRequestMessage\022\021\n\taddress"
  "es\030\001 \003(\t\022\031\n\021includeOrphanPool\030\002 \001(\010\022\035\n\025f"
  "ilterTransactionPool\030\003 \001(\010\"\205\001\n+GetMempoo"
  "lEntriesByAddressesResponseMessage\0221\n\007en"
  "tries\030\001 \003(\0132 .protowire.MempoolEntryByAd"
  "dress\022#\n\005error\030\350\007 \001(\0132\023.protowire.RPCErr"
  "or\"\035\n\033GetCoinSupplyRequestMessage\"o\n\034Get"
  "CoinSupplyResponseMessage\022\020\n\010maxSompi\030\001 "
  "\001(\004\022\030\n\020circulatingSompi\030\002 \001(\004\022#\n\005error\030\350"
  "\007 \001(\0132\023.protowire.RPCErrorB&Z$github.com"
  "/kaspanet/kaspad/protowireb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_rpc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rpc_2eproto = {
  false, false, 10274, descriptor_table_protodef_rpc_2eproto, "rpc.proto", 
  &descriptor_table_rpc_2eproto_once, nullptr, 0, 108,
  schemas, file_default_instances, TableStruct_rpc_2eproto::offsets,
  file_level_metadata_rpc_2eproto, file_level_enum_descriptors_rpc_2eproto, file_level_service_descriptors_rpc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_rpc_2eproto_getter() {
  return &descriptor_table_rpc_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_rpc_2eproto(&descriptor_table_rpc_2eproto);
namespace protowire {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SubmitBlockResponseMessage_RejectReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rpc_2eproto);
  return file_level_enum_descriptors_rpc_2eproto[0];
}
bool SubmitBlockResponseMessage_RejectReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SubmitBlockResponseMessage_RejectReason SubmitBlockResponseMessage::NONE;
constexpr SubmitBlockResponseMessage_RejectReason SubmitBlockResponseMessage::BLOCK_INVALID;
constexpr SubmitBlockResponseMessage_RejectReason SubmitBlockResponseMessage::IS_IN_IBD;
constexpr SubmitBlockResponseMessage_RejectReason SubmitBlockResponseMessage::RejectReason_MIN;
constexpr SubmitBlockResponseMessage_RejectReason SubmitBlockResponseMessage::RejectReason_MAX;
constexpr int SubmitBlockResponseMessage::RejectReason_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class RPCError::_Internal {
 public:
};

RPCError::RPCError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RPCError)
}
RPCError::RPCError(const RPCError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.RPCError)
}

inline void RPCError::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RPCError::~RPCError() {
  // @@protoc_insertion_point(destructor:protowire.RPCError)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RPCError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RPCError::ArenaDtor(void* object) {
  RPCError* _this = reinterpret_cast< RPCError* >(object);
  (void)_this;
}
void RPCError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RPCError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RPCError::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RPCError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RPCError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RPCError.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RPCError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RPCError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RPCError.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RPCError)
  return target;
}

size_t RPCError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RPCError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RPCError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RPCError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RPCError::GetClassData() const { return &_class_data_; }

void RPCError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RPCError *>(to)->MergeFrom(
      static_cast<const RPCError &>(from));
}


void RPCError::MergeFrom(const RPCError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RPCError)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RPCError::CopyFrom(const RPCError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RPCError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCError::IsInitialized() const {
  return true;
}

void RPCError::InternalSwap(RPCError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RPCError::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[0]);
}

// ===================================================================

class RpcBlock::_Internal {
 public:
  static const ::protowire::RpcBlockHeader& header(const RpcBlock* msg);
  static const ::protowire::RpcBlockVerboseData& verbosedata(const RpcBlock* msg);
};

const ::protowire::RpcBlockHeader&
RpcBlock::_Internal::header(const RpcBlock* msg) {
  return *msg->header_;
}
const ::protowire::RpcBlockVerboseData&
RpcBlock::_Internal::verbosedata(const RpcBlock* msg) {
  return *msg->verbosedata_;
}
RpcBlock::RpcBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  transactions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcBlock)
}
RpcBlock::RpcBlock(const RpcBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      transactions_(from.transactions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::protowire::RpcBlockHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_verbosedata()) {
    verbosedata_ = new ::protowire::RpcBlockVerboseData(*from.verbosedata_);
  } else {
    verbosedata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.RpcBlock)
}

inline void RpcBlock::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&header_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&verbosedata_) -
    reinterpret_cast<char*>(&header_)) + sizeof(verbosedata_));
}

RpcBlock::~RpcBlock() {
  // @@protoc_insertion_point(destructor:protowire.RpcBlock)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete verbosedata_;
}

void RpcBlock::ArenaDtor(void* object) {
  RpcBlock* _this = reinterpret_cast< RpcBlock* >(object);
  (void)_this;
}
void RpcBlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcBlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  if (GetArenaForAllocation() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && verbosedata_ != nullptr) {
    delete verbosedata_;
  }
  verbosedata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RpcBlockHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.RpcTransaction transactions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_transactions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcBlockVerboseData verboseData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_verbosedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcBlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcBlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RpcBlockHeader header = 1;
  if (this->_internal_has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .protowire.RpcTransaction transactions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_transactions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_transactions(i), target, stream);
  }

  // .protowire.RpcBlockVerboseData verboseData = 3;
  if (this->_internal_has_verbosedata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::verbosedata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcBlock)
  return target;
}

size_t RpcBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcBlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.RpcTransaction transactions = 2;
  total_size += 1UL * this->_internal_transactions_size();
  for (const auto& msg : this->transactions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .protowire.RpcBlockHeader header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .protowire.RpcBlockVerboseData verboseData = 3;
  if (this->_internal_has_verbosedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *verbosedata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcBlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcBlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcBlock::GetClassData() const { return &_class_data_; }

void RpcBlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcBlock *>(to)->MergeFrom(
      static_cast<const RpcBlock &>(from));
}


void RpcBlock::MergeFrom(const RpcBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcBlock)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
  if (from._internal_has_header()) {
    _internal_mutable_header()->::protowire::RpcBlockHeader::MergeFrom(from._internal_header());
  }
  if (from._internal_has_verbosedata()) {
    _internal_mutable_verbosedata()->::protowire::RpcBlockVerboseData::MergeFrom(from._internal_verbosedata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcBlock::CopyFrom(const RpcBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcBlock::IsInitialized() const {
  return true;
}

void RpcBlock::InternalSwap(RpcBlock* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  transactions_.InternalSwap(&other->transactions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcBlock, verbosedata_)
      + sizeof(RpcBlock::verbosedata_)
      - PROTOBUF_FIELD_OFFSET(RpcBlock, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcBlock::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[1]);
}

// ===================================================================

class RpcBlockHeader::_Internal {
 public:
};

RpcBlockHeader::RpcBlockHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parents_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcBlockHeader)
}
RpcBlockHeader::RpcBlockHeader(const RpcBlockHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      parents_(from.parents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hashmerkleroot_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    hashmerkleroot_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hashmerkleroot().empty()) {
    hashmerkleroot_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hashmerkleroot(), 
      GetArenaForAllocation());
  }
  acceptedidmerkleroot_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    acceptedidmerkleroot_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_acceptedidmerkleroot().empty()) {
    acceptedidmerkleroot_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_acceptedidmerkleroot(), 
      GetArenaForAllocation());
  }
  utxocommitment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    utxocommitment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_utxocommitment().empty()) {
    utxocommitment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_utxocommitment(), 
      GetArenaForAllocation());
  }
  bluework_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bluework_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bluework().empty()) {
    bluework_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bluework(), 
      GetArenaForAllocation());
  }
  pruningpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pruningpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pruningpoint().empty()) {
    pruningpoint_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pruningpoint(), 
      GetArenaForAllocation());
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&bluescore_) -
    reinterpret_cast<char*>(&version_)) + sizeof(bluescore_));
  // @@protoc_insertion_point(copy_constructor:protowire.RpcBlockHeader)
}

inline void RpcBlockHeader::SharedCtor() {
hashmerkleroot_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  hashmerkleroot_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
acceptedidmerkleroot_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  acceptedidmerkleroot_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
utxocommitment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  utxocommitment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bluework_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bluework_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pruningpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pruningpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bluescore_) -
    reinterpret_cast<char*>(&version_)) + sizeof(bluescore_));
}

RpcBlockHeader::~RpcBlockHeader() {
  // @@protoc_insertion_point(destructor:protowire.RpcBlockHeader)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcBlockHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  hashmerkleroot_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  acceptedidmerkleroot_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  utxocommitment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bluework_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pruningpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcBlockHeader::ArenaDtor(void* object) {
  RpcBlockHeader* _this = reinterpret_cast< RpcBlockHeader* >(object);
  (void)_this;
}
void RpcBlockHeader::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcBlockHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcBlockHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcBlockHeader)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parents_.Clear();
  hashmerkleroot_.ClearToEmpty();
  acceptedidmerkleroot_.ClearToEmpty();
  utxocommitment_.ClearToEmpty();
  bluework_.ClearToEmpty();
  pruningpoint_.ClearToEmpty();
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bluescore_) -
      reinterpret_cast<char*>(&version_)) + sizeof(bluescore_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcBlockHeader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string hashMerkleRoot = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_hashmerkleroot();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockHeader.hashMerkleRoot"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string acceptedIdMerkleRoot = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_acceptedidmerkleroot();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockHeader.acceptedIdMerkleRoot"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string utxoCommitment = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_utxocommitment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockHeader.utxoCommitment"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 timestamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 bits = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          bits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 nonce = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 daaScore = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          daascore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string blueWork = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_bluework();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockHeader.blueWork"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.RpcBlockLevelParents parents = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint64 blueScore = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          bluescore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pruningPoint = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_pruningpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockHeader.pruningPoint"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcBlockHeader::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcBlockHeader)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  // string hashMerkleRoot = 3;
  if (!this->_internal_hashmerkleroot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hashmerkleroot().data(), static_cast<int>(this->_internal_hashmerkleroot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockHeader.hashMerkleRoot");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_hashmerkleroot(), target);
  }

  // string acceptedIdMerkleRoot = 4;
  if (!this->_internal_acceptedidmerkleroot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_acceptedidmerkleroot().data(), static_cast<int>(this->_internal_acceptedidmerkleroot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockHeader.acceptedIdMerkleRoot");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_acceptedidmerkleroot(), target);
  }

  // string utxoCommitment = 5;
  if (!this->_internal_utxocommitment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_utxocommitment().data(), static_cast<int>(this->_internal_utxocommitment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockHeader.utxoCommitment");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_utxocommitment(), target);
  }

  // int64 timestamp = 6;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_timestamp(), target);
  }

  // uint32 bits = 7;
  if (this->_internal_bits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_bits(), target);
  }

  // uint64 nonce = 8;
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_nonce(), target);
  }

  // uint64 daaScore = 9;
  if (this->_internal_daascore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_daascore(), target);
  }

  // string blueWork = 10;
  if (!this->_internal_bluework().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bluework().data(), static_cast<int>(this->_internal_bluework().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockHeader.blueWork");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_bluework(), target);
  }

  // repeated .protowire.RpcBlockLevelParents parents = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_parents_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_parents(i), target, stream);
  }

  // uint64 blueScore = 13;
  if (this->_internal_bluescore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(13, this->_internal_bluescore(), target);
  }

  // string pruningPoint = 14;
  if (!this->_internal_pruningpoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pruningpoint().data(), static_cast<int>(this->_internal_pruningpoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockHeader.pruningPoint");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_pruningpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcBlockHeader)
  return target;
}

size_t RpcBlockHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcBlockHeader)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.RpcBlockLevelParents parents = 12;
  total_size += 1UL * this->_internal_parents_size();
  for (const auto& msg : this->parents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string hashMerkleRoot = 3;
  if (!this->_internal_hashmerkleroot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hashmerkleroot());
  }

  // string acceptedIdMerkleRoot = 4;
  if (!this->_internal_acceptedidmerkleroot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_acceptedidmerkleroot());
  }

  // string utxoCommitment = 5;
  if (!this->_internal_utxocommitment().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_utxocommitment());
  }

  // string blueWork = 10;
  if (!this->_internal_bluework().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bluework());
  }

  // string pruningPoint = 14;
  if (!this->_internal_pruningpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pruningpoint());
  }

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_version());
  }

  // uint32 bits = 7;
  if (this->_internal_bits() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_bits());
  }

  // int64 timestamp = 6;
  if (this->_internal_timestamp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  // uint64 nonce = 8;
  if (this->_internal_nonce() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_nonce());
  }

  // uint64 daaScore = 9;
  if (this->_internal_daascore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_daascore());
  }

  // uint64 blueScore = 13;
  if (this->_internal_bluescore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_bluescore());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcBlockHeader::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcBlockHeader::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcBlockHeader::GetClassData() const { return &_class_data_; }

void RpcBlockHeader::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcBlockHeader *>(to)->MergeFrom(
      static_cast<const RpcBlockHeader &>(from));
}


void RpcBlockHeader::MergeFrom(const RpcBlockHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcBlockHeader)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parents_.MergeFrom(from.parents_);
  if (!from._internal_hashmerkleroot().empty()) {
    _internal_set_hashmerkleroot(from._internal_hashmerkleroot());
  }
  if (!from._internal_acceptedidmerkleroot().empty()) {
    _internal_set_acceptedidmerkleroot(from._internal_acceptedidmerkleroot());
  }
  if (!from._internal_utxocommitment().empty()) {
    _internal_set_utxocommitment(from._internal_utxocommitment());
  }
  if (!from._internal_bluework().empty()) {
    _internal_set_bluework(from._internal_bluework());
  }
  if (!from._internal_pruningpoint().empty()) {
    _internal_set_pruningpoint(from._internal_pruningpoint());
  }
  if (from._internal_version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from._internal_bits() != 0) {
    _internal_set_bits(from._internal_bits());
  }
  if (from._internal_timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_nonce() != 0) {
    _internal_set_nonce(from._internal_nonce());
  }
  if (from._internal_daascore() != 0) {
    _internal_set_daascore(from._internal_daascore());
  }
  if (from._internal_bluescore() != 0) {
    _internal_set_bluescore(from._internal_bluescore());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcBlockHeader::CopyFrom(const RpcBlockHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcBlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcBlockHeader::IsInitialized() const {
  return true;
}

void RpcBlockHeader::InternalSwap(RpcBlockHeader* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parents_.InternalSwap(&other->parents_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &hashmerkleroot_, lhs_arena,
      &other->hashmerkleroot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &acceptedidmerkleroot_, lhs_arena,
      &other->acceptedidmerkleroot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &utxocommitment_, lhs_arena,
      &other->utxocommitment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bluework_, lhs_arena,
      &other->bluework_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pruningpoint_, lhs_arena,
      &other->pruningpoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcBlockHeader, bluescore_)
      + sizeof(RpcBlockHeader::bluescore_)
      - PROTOBUF_FIELD_OFFSET(RpcBlockHeader, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcBlockHeader::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[2]);
}

// ===================================================================

class RpcBlockLevelParents::_Internal {
 public:
};

RpcBlockLevelParents::RpcBlockLevelParents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parenthashes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcBlockLevelParents)
}
RpcBlockLevelParents::RpcBlockLevelParents(const RpcBlockLevelParents& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      parenthashes_(from.parenthashes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.RpcBlockLevelParents)
}

inline void RpcBlockLevelParents::SharedCtor() {
}

RpcBlockLevelParents::~RpcBlockLevelParents() {
  // @@protoc_insertion_point(destructor:protowire.RpcBlockLevelParents)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcBlockLevelParents::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RpcBlockLevelParents::ArenaDtor(void* object) {
  RpcBlockLevelParents* _this = reinterpret_cast< RpcBlockLevelParents* >(object);
  (void)_this;
}
void RpcBlockLevelParents::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcBlockLevelParents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcBlockLevelParents::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcBlockLevelParents)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parenthashes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcBlockLevelParents::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string parentHashes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_parenthashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockLevelParents.parentHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcBlockLevelParents::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcBlockLevelParents)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string parentHashes = 1;
  for (int i = 0, n = this->_internal_parenthashes_size(); i < n; i++) {
    const auto& s = this->_internal_parenthashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockLevelParents.parentHashes");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcBlockLevelParents)
  return target;
}

size_t RpcBlockLevelParents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcBlockLevelParents)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string parentHashes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(parenthashes_.size());
  for (int i = 0, n = parenthashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      parenthashes_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcBlockLevelParents::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcBlockLevelParents::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcBlockLevelParents::GetClassData() const { return &_class_data_; }

void RpcBlockLevelParents::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcBlockLevelParents *>(to)->MergeFrom(
      static_cast<const RpcBlockLevelParents &>(from));
}


void RpcBlockLevelParents::MergeFrom(const RpcBlockLevelParents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcBlockLevelParents)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parenthashes_.MergeFrom(from.parenthashes_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcBlockLevelParents::CopyFrom(const RpcBlockLevelParents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcBlockLevelParents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcBlockLevelParents::IsInitialized() const {
  return true;
}

void RpcBlockLevelParents::InternalSwap(RpcBlockLevelParents* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parenthashes_.InternalSwap(&other->parenthashes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcBlockLevelParents::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[3]);
}

// ===================================================================

class RpcBlockVerboseData::_Internal {
 public:
};

RpcBlockVerboseData::RpcBlockVerboseData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  transactionids_(arena),
  childrenhashes_(arena),
  mergesetblueshashes_(arena),
  mergesetredshashes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcBlockVerboseData)
}
RpcBlockVerboseData::RpcBlockVerboseData(const RpcBlockVerboseData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      transactionids_(from.transactionids_),
      childrenhashes_(from.childrenhashes_),
      mergesetblueshashes_(from.mergesetblueshashes_),
      mergesetredshashes_(from.mergesetredshashes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hash(), 
      GetArenaForAllocation());
  }
  selectedparenthash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    selectedparenthash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_selectedparenthash().empty()) {
    selectedparenthash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_selectedparenthash(), 
      GetArenaForAllocation());
  }
  ::memcpy(&difficulty_, &from.difficulty_,
    static_cast<size_t>(reinterpret_cast<char*>(&bluescore_) -
    reinterpret_cast<char*>(&difficulty_)) + sizeof(bluescore_));
  // @@protoc_insertion_point(copy_constructor:protowire.RpcBlockVerboseData)
}

inline void RpcBlockVerboseData::SharedCtor() {
hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
selectedparenthash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  selectedparenthash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&difficulty_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bluescore_) -
    reinterpret_cast<char*>(&difficulty_)) + sizeof(bluescore_));
}

RpcBlockVerboseData::~RpcBlockVerboseData() {
  // @@protoc_insertion_point(destructor:protowire.RpcBlockVerboseData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcBlockVerboseData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  selectedparenthash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcBlockVerboseData::ArenaDtor(void* object) {
  RpcBlockVerboseData* _this = reinterpret_cast< RpcBlockVerboseData* >(object);
  (void)_this;
}
void RpcBlockVerboseData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcBlockVerboseData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcBlockVerboseData::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcBlockVerboseData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactionids_.Clear();
  childrenhashes_.Clear();
  mergesetblueshashes_.Clear();
  mergesetredshashes_.Clear();
  hash_.ClearToEmpty();
  selectedparenthash_.ClearToEmpty();
  ::memset(&difficulty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bluescore_) -
      reinterpret_cast<char*>(&difficulty_)) + sizeof(bluescore_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcBlockVerboseData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockVerboseData.hash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double difficulty = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 89)) {
          difficulty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string selectedParentHash = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_selectedparenthash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockVerboseData.selectedParentHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string transactionIds = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_transactionids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockVerboseData.transactionIds"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool isHeaderOnly = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          isheaderonly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 blueScore = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          bluescore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string childrenHashes = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_childrenhashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockVerboseData.childrenHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string mergeSetBluesHashes = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_mergesetblueshashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockVerboseData.mergeSetBluesHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string mergeSetRedsHashes = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_mergesetredshashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcBlockVerboseData.mergeSetRedsHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool isChainBlock = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          ischainblock_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcBlockVerboseData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcBlockVerboseData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockVerboseData.hash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_hash(), target);
  }

  // double difficulty = 11;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_difficulty = this->_internal_difficulty();
  uint64_t raw_difficulty;
  memcpy(&raw_difficulty, &tmp_difficulty, sizeof(tmp_difficulty));
  if (raw_difficulty != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_difficulty(), target);
  }

  // string selectedParentHash = 13;
  if (!this->_internal_selectedparenthash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_selectedparenthash().data(), static_cast<int>(this->_internal_selectedparenthash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockVerboseData.selectedParentHash");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_selectedparenthash(), target);
  }

  // repeated string transactionIds = 14;
  for (int i = 0, n = this->_internal_transactionids_size(); i < n; i++) {
    const auto& s = this->_internal_transactionids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockVerboseData.transactionIds");
    target = stream->WriteString(14, s, target);
  }

  // bool isHeaderOnly = 15;
  if (this->_internal_isheaderonly() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_isheaderonly(), target);
  }

  // uint64 blueScore = 16;
  if (this->_internal_bluescore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(16, this->_internal_bluescore(), target);
  }

  // repeated string childrenHashes = 17;
  for (int i = 0, n = this->_internal_childrenhashes_size(); i < n; i++) {
    const auto& s = this->_internal_childrenhashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockVerboseData.childrenHashes");
    target = stream->WriteString(17, s, target);
  }

  // repeated string mergeSetBluesHashes = 18;
  for (int i = 0, n = this->_internal_mergesetblueshashes_size(); i < n; i++) {
    const auto& s = this->_internal_mergesetblueshashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockVerboseData.mergeSetBluesHashes");
    target = stream->WriteString(18, s, target);
  }

  // repeated string mergeSetRedsHashes = 19;
  for (int i = 0, n = this->_internal_mergesetredshashes_size(); i < n; i++) {
    const auto& s = this->_internal_mergesetredshashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcBlockVerboseData.mergeSetRedsHashes");
    target = stream->WriteString(19, s, target);
  }

  // bool isChainBlock = 20;
  if (this->_internal_ischainblock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(20, this->_internal_ischainblock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcBlockVerboseData)
  return target;
}

size_t RpcBlockVerboseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcBlockVerboseData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string transactionIds = 14;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(transactionids_.size());
  for (int i = 0, n = transactionids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      transactionids_.Get(i));
  }

  // repeated string childrenHashes = 17;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(childrenhashes_.size());
  for (int i = 0, n = childrenhashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      childrenhashes_.Get(i));
  }

  // repeated string mergeSetBluesHashes = 18;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(mergesetblueshashes_.size());
  for (int i = 0, n = mergesetblueshashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      mergesetblueshashes_.Get(i));
  }

  // repeated string mergeSetRedsHashes = 19;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(mergesetredshashes_.size());
  for (int i = 0, n = mergesetredshashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      mergesetredshashes_.Get(i));
  }

  // string hash = 1;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // string selectedParentHash = 13;
  if (!this->_internal_selectedparenthash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_selectedparenthash());
  }

  // double difficulty = 11;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_difficulty = this->_internal_difficulty();
  uint64_t raw_difficulty;
  memcpy(&raw_difficulty, &tmp_difficulty, sizeof(tmp_difficulty));
  if (raw_difficulty != 0) {
    total_size += 1 + 8;
  }

  // bool isHeaderOnly = 15;
  if (this->_internal_isheaderonly() != 0) {
    total_size += 1 + 1;
  }

  // bool isChainBlock = 20;
  if (this->_internal_ischainblock() != 0) {
    total_size += 2 + 1;
  }

  // uint64 blueScore = 16;
  if (this->_internal_bluescore() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_bluescore());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcBlockVerboseData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcBlockVerboseData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcBlockVerboseData::GetClassData() const { return &_class_data_; }

void RpcBlockVerboseData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcBlockVerboseData *>(to)->MergeFrom(
      static_cast<const RpcBlockVerboseData &>(from));
}


void RpcBlockVerboseData::MergeFrom(const RpcBlockVerboseData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcBlockVerboseData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  transactionids_.MergeFrom(from.transactionids_);
  childrenhashes_.MergeFrom(from.childrenhashes_);
  mergesetblueshashes_.MergeFrom(from.mergesetblueshashes_);
  mergesetredshashes_.MergeFrom(from.mergesetredshashes_);
  if (!from._internal_hash().empty()) {
    _internal_set_hash(from._internal_hash());
  }
  if (!from._internal_selectedparenthash().empty()) {
    _internal_set_selectedparenthash(from._internal_selectedparenthash());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_difficulty = from._internal_difficulty();
  uint64_t raw_difficulty;
  memcpy(&raw_difficulty, &tmp_difficulty, sizeof(tmp_difficulty));
  if (raw_difficulty != 0) {
    _internal_set_difficulty(from._internal_difficulty());
  }
  if (from._internal_isheaderonly() != 0) {
    _internal_set_isheaderonly(from._internal_isheaderonly());
  }
  if (from._internal_ischainblock() != 0) {
    _internal_set_ischainblock(from._internal_ischainblock());
  }
  if (from._internal_bluescore() != 0) {
    _internal_set_bluescore(from._internal_bluescore());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcBlockVerboseData::CopyFrom(const RpcBlockVerboseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcBlockVerboseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcBlockVerboseData::IsInitialized() const {
  return true;
}

void RpcBlockVerboseData::InternalSwap(RpcBlockVerboseData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  transactionids_.InternalSwap(&other->transactionids_);
  childrenhashes_.InternalSwap(&other->childrenhashes_);
  mergesetblueshashes_.InternalSwap(&other->mergesetblueshashes_);
  mergesetredshashes_.InternalSwap(&other->mergesetredshashes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &hash_, lhs_arena,
      &other->hash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &selectedparenthash_, lhs_arena,
      &other->selectedparenthash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcBlockVerboseData, bluescore_)
      + sizeof(RpcBlockVerboseData::bluescore_)
      - PROTOBUF_FIELD_OFFSET(RpcBlockVerboseData, difficulty_)>(
          reinterpret_cast<char*>(&difficulty_),
          reinterpret_cast<char*>(&other->difficulty_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcBlockVerboseData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[4]);
}

// ===================================================================

class RpcTransaction::_Internal {
 public:
  static const ::protowire::RpcTransactionVerboseData& verbosedata(const RpcTransaction* msg);
};

const ::protowire::RpcTransactionVerboseData&
RpcTransaction::_Internal::verbosedata(const RpcTransaction* msg) {
  return *msg->verbosedata_;
}
RpcTransaction::RpcTransaction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  inputs_(arena),
  outputs_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcTransaction)
}
RpcTransaction::RpcTransaction(const RpcTransaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      inputs_(from.inputs_),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subnetworkid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subnetworkid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subnetworkid().empty()) {
    subnetworkid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnetworkid(), 
      GetArenaForAllocation());
  }
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_verbosedata()) {
    verbosedata_ = new ::protowire::RpcTransactionVerboseData(*from.verbosedata_);
  } else {
    verbosedata_ = nullptr;
  }
  ::memcpy(&locktime_, &from.locktime_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&locktime_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:protowire.RpcTransaction)
}

inline void RpcTransaction::SharedCtor() {
subnetworkid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subnetworkid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&verbosedata_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&verbosedata_)) + sizeof(version_));
}

RpcTransaction::~RpcTransaction() {
  // @@protoc_insertion_point(destructor:protowire.RpcTransaction)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcTransaction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  subnetworkid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete verbosedata_;
}

void RpcTransaction::ArenaDtor(void* object) {
  RpcTransaction* _this = reinterpret_cast< RpcTransaction* >(object);
  (void)_this;
}
void RpcTransaction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcTransaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcTransaction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  subnetworkid_.ClearToEmpty();
  payload_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && verbosedata_ != nullptr) {
    delete verbosedata_;
  }
  verbosedata_ = nullptr;
  ::memset(&locktime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&locktime_)) + sizeof(version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcTransaction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.RpcTransactionInput inputs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.RpcTransactionOutput outputs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint64 lockTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          locktime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string subnetworkId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_subnetworkid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcTransaction.subnetworkId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 gas = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          gas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string payload = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcTransaction.payload"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcTransactionVerboseData verboseData = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_verbosedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcTransaction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcTransaction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  // repeated .protowire.RpcTransactionInput inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_inputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_inputs(i), target, stream);
  }

  // repeated .protowire.RpcTransactionOutput outputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_outputs(i), target, stream);
  }

  // uint64 lockTime = 4;
  if (this->_internal_locktime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_locktime(), target);
  }

  // string subnetworkId = 5;
  if (!this->_internal_subnetworkid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnetworkid().data(), static_cast<int>(this->_internal_subnetworkid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcTransaction.subnetworkId");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_subnetworkid(), target);
  }

  // uint64 gas = 6;
  if (this->_internal_gas() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_gas(), target);
  }

  // string payload = 8;
  if (!this->_internal_payload().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcTransaction.payload");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_payload(), target);
  }

  // .protowire.RpcTransactionVerboseData verboseData = 9;
  if (this->_internal_has_verbosedata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::verbosedata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcTransaction)
  return target;
}

size_t RpcTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcTransaction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.RpcTransactionInput inputs = 2;
  total_size += 1UL * this->_internal_inputs_size();
  for (const auto& msg : this->inputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .protowire.RpcTransactionOutput outputs = 3;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string subnetworkId = 5;
  if (!this->_internal_subnetworkid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnetworkid());
  }

  // string payload = 8;
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  // .protowire.RpcTransactionVerboseData verboseData = 9;
  if (this->_internal_has_verbosedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *verbosedata_);
  }

  // uint64 lockTime = 4;
  if (this->_internal_locktime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_locktime());
  }

  // uint64 gas = 6;
  if (this->_internal_gas() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_gas());
  }

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcTransaction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcTransaction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcTransaction::GetClassData() const { return &_class_data_; }

void RpcTransaction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcTransaction *>(to)->MergeFrom(
      static_cast<const RpcTransaction &>(from));
}


void RpcTransaction::MergeFrom(const RpcTransaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (!from._internal_subnetworkid().empty()) {
    _internal_set_subnetworkid(from._internal_subnetworkid());
  }
  if (!from._internal_payload().empty()) {
    _internal_set_payload(from._internal_payload());
  }
  if (from._internal_has_verbosedata()) {
    _internal_mutable_verbosedata()->::protowire::RpcTransactionVerboseData::MergeFrom(from._internal_verbosedata());
  }
  if (from._internal_locktime() != 0) {
    _internal_set_locktime(from._internal_locktime());
  }
  if (from._internal_gas() != 0) {
    _internal_set_gas(from._internal_gas());
  }
  if (from._internal_version() != 0) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcTransaction::CopyFrom(const RpcTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcTransaction::IsInitialized() const {
  return true;
}

void RpcTransaction::InternalSwap(RpcTransaction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &subnetworkid_, lhs_arena,
      &other->subnetworkid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payload_, lhs_arena,
      &other->payload_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcTransaction, version_)
      + sizeof(RpcTransaction::version_)
      - PROTOBUF_FIELD_OFFSET(RpcTransaction, verbosedata_)>(
          reinterpret_cast<char*>(&verbosedata_),
          reinterpret_cast<char*>(&other->verbosedata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcTransaction::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[5]);
}

// ===================================================================

class RpcTransactionInput::_Internal {
 public:
  static const ::protowire::RpcOutpoint& previousoutpoint(const RpcTransactionInput* msg);
  static const ::protowire::RpcTransactionInputVerboseData& verbosedata(const RpcTransactionInput* msg);
};

const ::protowire::RpcOutpoint&
RpcTransactionInput::_Internal::previousoutpoint(const RpcTransactionInput* msg) {
  return *msg->previousoutpoint_;
}
const ::protowire::RpcTransactionInputVerboseData&
RpcTransactionInput::_Internal::verbosedata(const RpcTransactionInput* msg) {
  return *msg->verbosedata_;
}
RpcTransactionInput::RpcTransactionInput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcTransactionInput)
}
RpcTransactionInput::RpcTransactionInput(const RpcTransactionInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  signaturescript_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    signaturescript_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_signaturescript().empty()) {
    signaturescript_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signaturescript(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_previousoutpoint()) {
    previousoutpoint_ = new ::protowire::RpcOutpoint(*from.previousoutpoint_);
  } else {
    previousoutpoint_ = nullptr;
  }
  if (from._internal_has_verbosedata()) {
    verbosedata_ = new ::protowire::RpcTransactionInputVerboseData(*from.verbosedata_);
  } else {
    verbosedata_ = nullptr;
  }
  ::memcpy(&sequence_, &from.sequence_,
    static_cast<size_t>(reinterpret_cast<char*>(&sigopcount_) -
    reinterpret_cast<char*>(&sequence_)) + sizeof(sigopcount_));
  // @@protoc_insertion_point(copy_constructor:protowire.RpcTransactionInput)
}

inline void RpcTransactionInput::SharedCtor() {
signaturescript_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  signaturescript_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&previousoutpoint_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&sigopcount_) -
    reinterpret_cast<char*>(&previousoutpoint_)) + sizeof(sigopcount_));
}

RpcTransactionInput::~RpcTransactionInput() {
  // @@protoc_insertion_point(destructor:protowire.RpcTransactionInput)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcTransactionInput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  signaturescript_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete previousoutpoint_;
  if (this != internal_default_instance()) delete verbosedata_;
}

void RpcTransactionInput::ArenaDtor(void* object) {
  RpcTransactionInput* _this = reinterpret_cast< RpcTransactionInput* >(object);
  (void)_this;
}
void RpcTransactionInput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcTransactionInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcTransactionInput::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcTransactionInput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signaturescript_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && previousoutpoint_ != nullptr) {
    delete previousoutpoint_;
  }
  previousoutpoint_ = nullptr;
  if (GetArenaForAllocation() == nullptr && verbosedata_ != nullptr) {
    delete verbosedata_;
  }
  verbosedata_ = nullptr;
  ::memset(&sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sigopcount_) -
      reinterpret_cast<char*>(&sequence_)) + sizeof(sigopcount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcTransactionInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RpcOutpoint previousOutpoint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_previousoutpoint(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string signatureScript = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_signaturescript();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcTransactionInput.signatureScript"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 sequence = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          sequence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcTransactionInputVerboseData verboseData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_verbosedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 sigOpCount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          sigopcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcTransactionInput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcTransactionInput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RpcOutpoint previousOutpoint = 1;
  if (this->_internal_has_previousoutpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::previousoutpoint(this), target, stream);
  }

  // string signatureScript = 2;
  if (!this->_internal_signaturescript().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_signaturescript().data(), static_cast<int>(this->_internal_signaturescript().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcTransactionInput.signatureScript");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_signaturescript(), target);
  }

  // uint64 sequence = 3;
  if (this->_internal_sequence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_sequence(), target);
  }

  // .protowire.RpcTransactionInputVerboseData verboseData = 4;
  if (this->_internal_has_verbosedata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::verbosedata(this), target, stream);
  }

  // uint32 sigOpCount = 5;
  if (this->_internal_sigopcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_sigopcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcTransactionInput)
  return target;
}

size_t RpcTransactionInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcTransactionInput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string signatureScript = 2;
  if (!this->_internal_signaturescript().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_signaturescript());
  }

  // .protowire.RpcOutpoint previousOutpoint = 1;
  if (this->_internal_has_previousoutpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *previousoutpoint_);
  }

  // .protowire.RpcTransactionInputVerboseData verboseData = 4;
  if (this->_internal_has_verbosedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *verbosedata_);
  }

  // uint64 sequence = 3;
  if (this->_internal_sequence() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_sequence());
  }

  // uint32 sigOpCount = 5;
  if (this->_internal_sigopcount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_sigopcount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcTransactionInput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcTransactionInput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcTransactionInput::GetClassData() const { return &_class_data_; }

void RpcTransactionInput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcTransactionInput *>(to)->MergeFrom(
      static_cast<const RpcTransactionInput &>(from));
}


void RpcTransactionInput::MergeFrom(const RpcTransactionInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcTransactionInput)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_signaturescript().empty()) {
    _internal_set_signaturescript(from._internal_signaturescript());
  }
  if (from._internal_has_previousoutpoint()) {
    _internal_mutable_previousoutpoint()->::protowire::RpcOutpoint::MergeFrom(from._internal_previousoutpoint());
  }
  if (from._internal_has_verbosedata()) {
    _internal_mutable_verbosedata()->::protowire::RpcTransactionInputVerboseData::MergeFrom(from._internal_verbosedata());
  }
  if (from._internal_sequence() != 0) {
    _internal_set_sequence(from._internal_sequence());
  }
  if (from._internal_sigopcount() != 0) {
    _internal_set_sigopcount(from._internal_sigopcount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcTransactionInput::CopyFrom(const RpcTransactionInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcTransactionInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcTransactionInput::IsInitialized() const {
  return true;
}

void RpcTransactionInput::InternalSwap(RpcTransactionInput* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &signaturescript_, lhs_arena,
      &other->signaturescript_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcTransactionInput, sigopcount_)
      + sizeof(RpcTransactionInput::sigopcount_)
      - PROTOBUF_FIELD_OFFSET(RpcTransactionInput, previousoutpoint_)>(
          reinterpret_cast<char*>(&previousoutpoint_),
          reinterpret_cast<char*>(&other->previousoutpoint_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcTransactionInput::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[6]);
}

// ===================================================================

class RpcScriptPublicKey::_Internal {
 public:
};

RpcScriptPublicKey::RpcScriptPublicKey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcScriptPublicKey)
}
RpcScriptPublicKey::RpcScriptPublicKey(const RpcScriptPublicKey& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scriptpublickey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    scriptpublickey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_scriptpublickey().empty()) {
    scriptpublickey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_scriptpublickey(), 
      GetArenaForAllocation());
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:protowire.RpcScriptPublicKey)
}

inline void RpcScriptPublicKey::SharedCtor() {
scriptpublickey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  scriptpublickey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_ = 0u;
}

RpcScriptPublicKey::~RpcScriptPublicKey() {
  // @@protoc_insertion_point(destructor:protowire.RpcScriptPublicKey)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcScriptPublicKey::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  scriptpublickey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcScriptPublicKey::ArenaDtor(void* object) {
  RpcScriptPublicKey* _this = reinterpret_cast< RpcScriptPublicKey* >(object);
  (void)_this;
}
void RpcScriptPublicKey::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcScriptPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcScriptPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcScriptPublicKey)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scriptpublickey_.ClearToEmpty();
  version_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcScriptPublicKey::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string scriptPublicKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_scriptpublickey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcScriptPublicKey.scriptPublicKey"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcScriptPublicKey::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcScriptPublicKey)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_version(), target);
  }

  // string scriptPublicKey = 2;
  if (!this->_internal_scriptpublickey().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scriptpublickey().data(), static_cast<int>(this->_internal_scriptpublickey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcScriptPublicKey.scriptPublicKey");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_scriptpublickey(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcScriptPublicKey)
  return target;
}

size_t RpcScriptPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcScriptPublicKey)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string scriptPublicKey = 2;
  if (!this->_internal_scriptpublickey().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scriptpublickey());
  }

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcScriptPublicKey::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcScriptPublicKey::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcScriptPublicKey::GetClassData() const { return &_class_data_; }

void RpcScriptPublicKey::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcScriptPublicKey *>(to)->MergeFrom(
      static_cast<const RpcScriptPublicKey &>(from));
}


void RpcScriptPublicKey::MergeFrom(const RpcScriptPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcScriptPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_scriptpublickey().empty()) {
    _internal_set_scriptpublickey(from._internal_scriptpublickey());
  }
  if (from._internal_version() != 0) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcScriptPublicKey::CopyFrom(const RpcScriptPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcScriptPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcScriptPublicKey::IsInitialized() const {
  return true;
}

void RpcScriptPublicKey::InternalSwap(RpcScriptPublicKey* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &scriptpublickey_, lhs_arena,
      &other->scriptpublickey_, rhs_arena
  );
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcScriptPublicKey::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[7]);
}

// ===================================================================

class RpcTransactionOutput::_Internal {
 public:
  static const ::protowire::RpcScriptPublicKey& scriptpublickey(const RpcTransactionOutput* msg);
  static const ::protowire::RpcTransactionOutputVerboseData& verbosedata(const RpcTransactionOutput* msg);
};

const ::protowire::RpcScriptPublicKey&
RpcTransactionOutput::_Internal::scriptpublickey(const RpcTransactionOutput* msg) {
  return *msg->scriptpublickey_;
}
const ::protowire::RpcTransactionOutputVerboseData&
RpcTransactionOutput::_Internal::verbosedata(const RpcTransactionOutput* msg) {
  return *msg->verbosedata_;
}
RpcTransactionOutput::RpcTransactionOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcTransactionOutput)
}
RpcTransactionOutput::RpcTransactionOutput(const RpcTransactionOutput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scriptpublickey()) {
    scriptpublickey_ = new ::protowire::RpcScriptPublicKey(*from.scriptpublickey_);
  } else {
    scriptpublickey_ = nullptr;
  }
  if (from._internal_has_verbosedata()) {
    verbosedata_ = new ::protowire::RpcTransactionOutputVerboseData(*from.verbosedata_);
  } else {
    verbosedata_ = nullptr;
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:protowire.RpcTransactionOutput)
}

inline void RpcTransactionOutput::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&scriptpublickey_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&scriptpublickey_)) + sizeof(amount_));
}

RpcTransactionOutput::~RpcTransactionOutput() {
  // @@protoc_insertion_point(destructor:protowire.RpcTransactionOutput)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcTransactionOutput::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete scriptpublickey_;
  if (this != internal_default_instance()) delete verbosedata_;
}

void RpcTransactionOutput::ArenaDtor(void* object) {
  RpcTransactionOutput* _this = reinterpret_cast< RpcTransactionOutput* >(object);
  (void)_this;
}
void RpcTransactionOutput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcTransactionOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcTransactionOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcTransactionOutput)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && scriptpublickey_ != nullptr) {
    delete scriptpublickey_;
  }
  scriptpublickey_ = nullptr;
  if (GetArenaForAllocation() == nullptr && verbosedata_ != nullptr) {
    delete verbosedata_;
  }
  verbosedata_ = nullptr;
  amount_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcTransactionOutput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcScriptPublicKey scriptPublicKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_scriptpublickey(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcTransactionOutputVerboseData verboseData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_verbosedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcTransactionOutput::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcTransactionOutput)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 amount = 1;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_amount(), target);
  }

  // .protowire.RpcScriptPublicKey scriptPublicKey = 2;
  if (this->_internal_has_scriptpublickey()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::scriptpublickey(this), target, stream);
  }

  // .protowire.RpcTransactionOutputVerboseData verboseData = 3;
  if (this->_internal_has_verbosedata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::verbosedata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcTransactionOutput)
  return target;
}

size_t RpcTransactionOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcTransactionOutput)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RpcScriptPublicKey scriptPublicKey = 2;
  if (this->_internal_has_scriptpublickey()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scriptpublickey_);
  }

  // .protowire.RpcTransactionOutputVerboseData verboseData = 3;
  if (this->_internal_has_verbosedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *verbosedata_);
  }

  // uint64 amount = 1;
  if (this->_internal_amount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcTransactionOutput::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcTransactionOutput::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcTransactionOutput::GetClassData() const { return &_class_data_; }

void RpcTransactionOutput::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcTransactionOutput *>(to)->MergeFrom(
      static_cast<const RpcTransactionOutput &>(from));
}


void RpcTransactionOutput::MergeFrom(const RpcTransactionOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcTransactionOutput)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_scriptpublickey()) {
    _internal_mutable_scriptpublickey()->::protowire::RpcScriptPublicKey::MergeFrom(from._internal_scriptpublickey());
  }
  if (from._internal_has_verbosedata()) {
    _internal_mutable_verbosedata()->::protowire::RpcTransactionOutputVerboseData::MergeFrom(from._internal_verbosedata());
  }
  if (from._internal_amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcTransactionOutput::CopyFrom(const RpcTransactionOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcTransactionOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcTransactionOutput::IsInitialized() const {
  return true;
}

void RpcTransactionOutput::InternalSwap(RpcTransactionOutput* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcTransactionOutput, amount_)
      + sizeof(RpcTransactionOutput::amount_)
      - PROTOBUF_FIELD_OFFSET(RpcTransactionOutput, scriptpublickey_)>(
          reinterpret_cast<char*>(&scriptpublickey_),
          reinterpret_cast<char*>(&other->scriptpublickey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcTransactionOutput::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[8]);
}

// ===================================================================

class RpcOutpoint::_Internal {
 public:
};

RpcOutpoint::RpcOutpoint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcOutpoint)
}
RpcOutpoint::RpcOutpoint(const RpcOutpoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transactionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    transactionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transactionid().empty()) {
    transactionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transactionid(), 
      GetArenaForAllocation());
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:protowire.RpcOutpoint)
}

inline void RpcOutpoint::SharedCtor() {
transactionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  transactionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
index_ = 0u;
}

RpcOutpoint::~RpcOutpoint() {
  // @@protoc_insertion_point(destructor:protowire.RpcOutpoint)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcOutpoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  transactionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcOutpoint::ArenaDtor(void* object) {
  RpcOutpoint* _this = reinterpret_cast< RpcOutpoint* >(object);
  (void)_this;
}
void RpcOutpoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcOutpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcOutpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcOutpoint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactionid_.ClearToEmpty();
  index_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcOutpoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string transactionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_transactionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcOutpoint.transactionId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcOutpoint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcOutpoint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string transactionId = 1;
  if (!this->_internal_transactionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transactionid().data(), static_cast<int>(this->_internal_transactionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcOutpoint.transactionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transactionid(), target);
  }

  // uint32 index = 2;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcOutpoint)
  return target;
}

size_t RpcOutpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcOutpoint)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transactionId = 1;
  if (!this->_internal_transactionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transactionid());
  }

  // uint32 index = 2;
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcOutpoint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcOutpoint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcOutpoint::GetClassData() const { return &_class_data_; }

void RpcOutpoint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcOutpoint *>(to)->MergeFrom(
      static_cast<const RpcOutpoint &>(from));
}


void RpcOutpoint::MergeFrom(const RpcOutpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcOutpoint)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transactionid().empty()) {
    _internal_set_transactionid(from._internal_transactionid());
  }
  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcOutpoint::CopyFrom(const RpcOutpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcOutpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcOutpoint::IsInitialized() const {
  return true;
}

void RpcOutpoint::InternalSwap(RpcOutpoint* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &transactionid_, lhs_arena,
      &other->transactionid_, rhs_arena
  );
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcOutpoint::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[9]);
}

// ===================================================================

class RpcUtxoEntry::_Internal {
 public:
  static const ::protowire::RpcScriptPublicKey& scriptpublickey(const RpcUtxoEntry* msg);
};

const ::protowire::RpcScriptPublicKey&
RpcUtxoEntry::_Internal::scriptpublickey(const RpcUtxoEntry* msg) {
  return *msg->scriptpublickey_;
}
RpcUtxoEntry::RpcUtxoEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcUtxoEntry)
}
RpcUtxoEntry::RpcUtxoEntry(const RpcUtxoEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scriptpublickey()) {
    scriptpublickey_ = new ::protowire::RpcScriptPublicKey(*from.scriptpublickey_);
  } else {
    scriptpublickey_ = nullptr;
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&iscoinbase_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(iscoinbase_));
  // @@protoc_insertion_point(copy_constructor:protowire.RpcUtxoEntry)
}

inline void RpcUtxoEntry::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&scriptpublickey_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&iscoinbase_) -
    reinterpret_cast<char*>(&scriptpublickey_)) + sizeof(iscoinbase_));
}

RpcUtxoEntry::~RpcUtxoEntry() {
  // @@protoc_insertion_point(destructor:protowire.RpcUtxoEntry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcUtxoEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete scriptpublickey_;
}

void RpcUtxoEntry::ArenaDtor(void* object) {
  RpcUtxoEntry* _this = reinterpret_cast< RpcUtxoEntry* >(object);
  (void)_this;
}
void RpcUtxoEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcUtxoEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcUtxoEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcUtxoEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && scriptpublickey_ != nullptr) {
    delete scriptpublickey_;
  }
  scriptpublickey_ = nullptr;
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iscoinbase_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(iscoinbase_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcUtxoEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 amount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcScriptPublicKey scriptPublicKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_scriptpublickey(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 blockDaaScore = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          blockdaascore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isCoinbase = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          iscoinbase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcUtxoEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcUtxoEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 amount = 1;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_amount(), target);
  }

  // .protowire.RpcScriptPublicKey scriptPublicKey = 2;
  if (this->_internal_has_scriptpublickey()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::scriptpublickey(this), target, stream);
  }

  // uint64 blockDaaScore = 3;
  if (this->_internal_blockdaascore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_blockdaascore(), target);
  }

  // bool isCoinbase = 4;
  if (this->_internal_iscoinbase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_iscoinbase(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcUtxoEntry)
  return target;
}

size_t RpcUtxoEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcUtxoEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RpcScriptPublicKey scriptPublicKey = 2;
  if (this->_internal_has_scriptpublickey()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scriptpublickey_);
  }

  // uint64 amount = 1;
  if (this->_internal_amount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_amount());
  }

  // uint64 blockDaaScore = 3;
  if (this->_internal_blockdaascore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_blockdaascore());
  }

  // bool isCoinbase = 4;
  if (this->_internal_iscoinbase() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcUtxoEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcUtxoEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcUtxoEntry::GetClassData() const { return &_class_data_; }

void RpcUtxoEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcUtxoEntry *>(to)->MergeFrom(
      static_cast<const RpcUtxoEntry &>(from));
}


void RpcUtxoEntry::MergeFrom(const RpcUtxoEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcUtxoEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_scriptpublickey()) {
    _internal_mutable_scriptpublickey()->::protowire::RpcScriptPublicKey::MergeFrom(from._internal_scriptpublickey());
  }
  if (from._internal_amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from._internal_blockdaascore() != 0) {
    _internal_set_blockdaascore(from._internal_blockdaascore());
  }
  if (from._internal_iscoinbase() != 0) {
    _internal_set_iscoinbase(from._internal_iscoinbase());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcUtxoEntry::CopyFrom(const RpcUtxoEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcUtxoEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcUtxoEntry::IsInitialized() const {
  return true;
}

void RpcUtxoEntry::InternalSwap(RpcUtxoEntry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcUtxoEntry, iscoinbase_)
      + sizeof(RpcUtxoEntry::iscoinbase_)
      - PROTOBUF_FIELD_OFFSET(RpcUtxoEntry, scriptpublickey_)>(
          reinterpret_cast<char*>(&scriptpublickey_),
          reinterpret_cast<char*>(&other->scriptpublickey_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcUtxoEntry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[10]);
}

// ===================================================================

class RpcTransactionVerboseData::_Internal {
 public:
};

RpcTransactionVerboseData::RpcTransactionVerboseData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcTransactionVerboseData)
}
RpcTransactionVerboseData::RpcTransactionVerboseData(const RpcTransactionVerboseData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transactionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    transactionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transactionid().empty()) {
    transactionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transactionid(), 
      GetArenaForAllocation());
  }
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hash(), 
      GetArenaForAllocation());
  }
  blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    blockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_blockhash().empty()) {
    blockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_blockhash(), 
      GetArenaForAllocation());
  }
  ::memcpy(&mass_, &from.mass_,
    static_cast<size_t>(reinterpret_cast<char*>(&blocktime_) -
    reinterpret_cast<char*>(&mass_)) + sizeof(blocktime_));
  // @@protoc_insertion_point(copy_constructor:protowire.RpcTransactionVerboseData)
}

inline void RpcTransactionVerboseData::SharedCtor() {
transactionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  transactionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
blockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  blockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mass_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&blocktime_) -
    reinterpret_cast<char*>(&mass_)) + sizeof(blocktime_));
}

RpcTransactionVerboseData::~RpcTransactionVerboseData() {
  // @@protoc_insertion_point(destructor:protowire.RpcTransactionVerboseData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcTransactionVerboseData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  transactionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  blockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcTransactionVerboseData::ArenaDtor(void* object) {
  RpcTransactionVerboseData* _this = reinterpret_cast< RpcTransactionVerboseData* >(object);
  (void)_this;
}
void RpcTransactionVerboseData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcTransactionVerboseData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcTransactionVerboseData::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcTransactionVerboseData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactionid_.ClearToEmpty();
  hash_.ClearToEmpty();
  blockhash_.ClearToEmpty();
  ::memset(&mass_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blocktime_) -
      reinterpret_cast<char*>(&mass_)) + sizeof(blocktime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcTransactionVerboseData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string transactionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_transactionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcTransactionVerboseData.transactionId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcTransactionVerboseData.hash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 mass = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          mass_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string blockHash = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_blockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcTransactionVerboseData.blockHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 blockTime = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          blocktime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcTransactionVerboseData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcTransactionVerboseData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string transactionId = 1;
  if (!this->_internal_transactionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transactionid().data(), static_cast<int>(this->_internal_transactionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcTransactionVerboseData.transactionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transactionid(), target);
  }

  // string hash = 2;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcTransactionVerboseData.hash");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_hash(), target);
  }

  // uint64 mass = 4;
  if (this->_internal_mass() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_mass(), target);
  }

  // string blockHash = 12;
  if (!this->_internal_blockhash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_blockhash().data(), static_cast<int>(this->_internal_blockhash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcTransactionVerboseData.blockHash");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_blockhash(), target);
  }

  // uint64 blockTime = 14;
  if (this->_internal_blocktime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(14, this->_internal_blocktime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcTransactionVerboseData)
  return target;
}

size_t RpcTransactionVerboseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcTransactionVerboseData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transactionId = 1;
  if (!this->_internal_transactionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transactionid());
  }

  // string hash = 2;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // string blockHash = 12;
  if (!this->_internal_blockhash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_blockhash());
  }

  // uint64 mass = 4;
  if (this->_internal_mass() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_mass());
  }

  // uint64 blockTime = 14;
  if (this->_internal_blocktime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_blocktime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcTransactionVerboseData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcTransactionVerboseData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcTransactionVerboseData::GetClassData() const { return &_class_data_; }

void RpcTransactionVerboseData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcTransactionVerboseData *>(to)->MergeFrom(
      static_cast<const RpcTransactionVerboseData &>(from));
}


void RpcTransactionVerboseData::MergeFrom(const RpcTransactionVerboseData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcTransactionVerboseData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transactionid().empty()) {
    _internal_set_transactionid(from._internal_transactionid());
  }
  if (!from._internal_hash().empty()) {
    _internal_set_hash(from._internal_hash());
  }
  if (!from._internal_blockhash().empty()) {
    _internal_set_blockhash(from._internal_blockhash());
  }
  if (from._internal_mass() != 0) {
    _internal_set_mass(from._internal_mass());
  }
  if (from._internal_blocktime() != 0) {
    _internal_set_blocktime(from._internal_blocktime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcTransactionVerboseData::CopyFrom(const RpcTransactionVerboseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcTransactionVerboseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcTransactionVerboseData::IsInitialized() const {
  return true;
}

void RpcTransactionVerboseData::InternalSwap(RpcTransactionVerboseData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &transactionid_, lhs_arena,
      &other->transactionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &hash_, lhs_arena,
      &other->hash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &blockhash_, lhs_arena,
      &other->blockhash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcTransactionVerboseData, blocktime_)
      + sizeof(RpcTransactionVerboseData::blocktime_)
      - PROTOBUF_FIELD_OFFSET(RpcTransactionVerboseData, mass_)>(
          reinterpret_cast<char*>(&mass_),
          reinterpret_cast<char*>(&other->mass_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcTransactionVerboseData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[11]);
}

// ===================================================================

class RpcTransactionInputVerboseData::_Internal {
 public:
};

RpcTransactionInputVerboseData::RpcTransactionInputVerboseData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.RpcTransactionInputVerboseData)
}
RpcTransactionInputVerboseData::RpcTransactionInputVerboseData(const RpcTransactionInputVerboseData& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.RpcTransactionInputVerboseData)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcTransactionInputVerboseData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcTransactionInputVerboseData::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RpcTransactionInputVerboseData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[12]);
}

// ===================================================================

class RpcTransactionOutputVerboseData::_Internal {
 public:
};

RpcTransactionOutputVerboseData::RpcTransactionOutputVerboseData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.RpcTransactionOutputVerboseData)
}
RpcTransactionOutputVerboseData::RpcTransactionOutputVerboseData(const RpcTransactionOutputVerboseData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scriptpublickeytype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    scriptpublickeytype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_scriptpublickeytype().empty()) {
    scriptpublickeytype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_scriptpublickeytype(), 
      GetArenaForAllocation());
  }
  scriptpublickeyaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    scriptpublickeyaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_scriptpublickeyaddress().empty()) {
    scriptpublickeyaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_scriptpublickeyaddress(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.RpcTransactionOutputVerboseData)
}

inline void RpcTransactionOutputVerboseData::SharedCtor() {
scriptpublickeytype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  scriptpublickeytype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
scriptpublickeyaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  scriptpublickeyaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RpcTransactionOutputVerboseData::~RpcTransactionOutputVerboseData() {
  // @@protoc_insertion_point(destructor:protowire.RpcTransactionOutputVerboseData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RpcTransactionOutputVerboseData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  scriptpublickeytype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scriptpublickeyaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RpcTransactionOutputVerboseData::ArenaDtor(void* object) {
  RpcTransactionOutputVerboseData* _this = reinterpret_cast< RpcTransactionOutputVerboseData* >(object);
  (void)_this;
}
void RpcTransactionOutputVerboseData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RpcTransactionOutputVerboseData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RpcTransactionOutputVerboseData::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.RpcTransactionOutputVerboseData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scriptpublickeytype_.ClearToEmpty();
  scriptpublickeyaddress_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RpcTransactionOutputVerboseData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string scriptPublicKeyType = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_scriptpublickeytype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcTransactionOutputVerboseData.scriptPublicKeyType"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string scriptPublicKeyAddress = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_scriptpublickeyaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.RpcTransactionOutputVerboseData.scriptPublicKeyAddress"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RpcTransactionOutputVerboseData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.RpcTransactionOutputVerboseData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string scriptPublicKeyType = 5;
  if (!this->_internal_scriptpublickeytype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scriptpublickeytype().data(), static_cast<int>(this->_internal_scriptpublickeytype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcTransactionOutputVerboseData.scriptPublicKeyType");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_scriptpublickeytype(), target);
  }

  // string scriptPublicKeyAddress = 6;
  if (!this->_internal_scriptpublickeyaddress().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scriptpublickeyaddress().data(), static_cast<int>(this->_internal_scriptpublickeyaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.RpcTransactionOutputVerboseData.scriptPublicKeyAddress");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_scriptpublickeyaddress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.RpcTransactionOutputVerboseData)
  return target;
}

size_t RpcTransactionOutputVerboseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.RpcTransactionOutputVerboseData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string scriptPublicKeyType = 5;
  if (!this->_internal_scriptpublickeytype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scriptpublickeytype());
  }

  // string scriptPublicKeyAddress = 6;
  if (!this->_internal_scriptpublickeyaddress().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scriptpublickeyaddress());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RpcTransactionOutputVerboseData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RpcTransactionOutputVerboseData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RpcTransactionOutputVerboseData::GetClassData() const { return &_class_data_; }

void RpcTransactionOutputVerboseData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RpcTransactionOutputVerboseData *>(to)->MergeFrom(
      static_cast<const RpcTransactionOutputVerboseData &>(from));
}


void RpcTransactionOutputVerboseData::MergeFrom(const RpcTransactionOutputVerboseData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.RpcTransactionOutputVerboseData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_scriptpublickeytype().empty()) {
    _internal_set_scriptpublickeytype(from._internal_scriptpublickeytype());
  }
  if (!from._internal_scriptpublickeyaddress().empty()) {
    _internal_set_scriptpublickeyaddress(from._internal_scriptpublickeyaddress());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RpcTransactionOutputVerboseData::CopyFrom(const RpcTransactionOutputVerboseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.RpcTransactionOutputVerboseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcTransactionOutputVerboseData::IsInitialized() const {
  return true;
}

void RpcTransactionOutputVerboseData::InternalSwap(RpcTransactionOutputVerboseData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &scriptpublickeytype_, lhs_arena,
      &other->scriptpublickeytype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &scriptpublickeyaddress_, lhs_arena,
      &other->scriptpublickeyaddress_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RpcTransactionOutputVerboseData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[13]);
}

// ===================================================================

class GetCurrentNetworkRequestMessage::_Internal {
 public:
};

GetCurrentNetworkRequestMessage::GetCurrentNetworkRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetCurrentNetworkRequestMessage)
}
GetCurrentNetworkRequestMessage::GetCurrentNetworkRequestMessage(const GetCurrentNetworkRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetCurrentNetworkRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCurrentNetworkRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCurrentNetworkRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetCurrentNetworkRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[14]);
}

// ===================================================================

class GetCurrentNetworkResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetCurrentNetworkResponseMessage* msg);
};

const ::protowire::RPCError&
GetCurrentNetworkResponseMessage::_Internal::error(const GetCurrentNetworkResponseMessage* msg) {
  return *msg->error_;
}
GetCurrentNetworkResponseMessage::GetCurrentNetworkResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetCurrentNetworkResponseMessage)
}
GetCurrentNetworkResponseMessage::GetCurrentNetworkResponseMessage(const GetCurrentNetworkResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  currentnetwork_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    currentnetwork_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_currentnetwork().empty()) {
    currentnetwork_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currentnetwork(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetCurrentNetworkResponseMessage)
}

inline void GetCurrentNetworkResponseMessage::SharedCtor() {
currentnetwork_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  currentnetwork_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_ = nullptr;
}

GetCurrentNetworkResponseMessage::~GetCurrentNetworkResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetCurrentNetworkResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetCurrentNetworkResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  currentnetwork_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void GetCurrentNetworkResponseMessage::ArenaDtor(void* object) {
  GetCurrentNetworkResponseMessage* _this = reinterpret_cast< GetCurrentNetworkResponseMessage* >(object);
  (void)_this;
}
void GetCurrentNetworkResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCurrentNetworkResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCurrentNetworkResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetCurrentNetworkResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currentnetwork_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCurrentNetworkResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string currentNetwork = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_currentnetwork();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetCurrentNetworkResponseMessage.currentNetwork"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCurrentNetworkResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetCurrentNetworkResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string currentNetwork = 1;
  if (!this->_internal_currentnetwork().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currentnetwork().data(), static_cast<int>(this->_internal_currentnetwork().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetCurrentNetworkResponseMessage.currentNetwork");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_currentnetwork(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetCurrentNetworkResponseMessage)
  return target;
}

size_t GetCurrentNetworkResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetCurrentNetworkResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string currentNetwork = 1;
  if (!this->_internal_currentnetwork().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currentnetwork());
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCurrentNetworkResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCurrentNetworkResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCurrentNetworkResponseMessage::GetClassData() const { return &_class_data_; }

void GetCurrentNetworkResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetCurrentNetworkResponseMessage *>(to)->MergeFrom(
      static_cast<const GetCurrentNetworkResponseMessage &>(from));
}


void GetCurrentNetworkResponseMessage::MergeFrom(const GetCurrentNetworkResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetCurrentNetworkResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_currentnetwork().empty()) {
    _internal_set_currentnetwork(from._internal_currentnetwork());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrentNetworkResponseMessage::CopyFrom(const GetCurrentNetworkResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetCurrentNetworkResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrentNetworkResponseMessage::IsInitialized() const {
  return true;
}

void GetCurrentNetworkResponseMessage::InternalSwap(GetCurrentNetworkResponseMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &currentnetwork_, lhs_arena,
      &other->currentnetwork_, rhs_arena
  );
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCurrentNetworkResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[15]);
}

// ===================================================================

class SubmitBlockRequestMessage::_Internal {
 public:
  static const ::protowire::RpcBlock& block(const SubmitBlockRequestMessage* msg);
};

const ::protowire::RpcBlock&
SubmitBlockRequestMessage::_Internal::block(const SubmitBlockRequestMessage* msg) {
  return *msg->block_;
}
SubmitBlockRequestMessage::SubmitBlockRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.SubmitBlockRequestMessage)
}
SubmitBlockRequestMessage::SubmitBlockRequestMessage(const SubmitBlockRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block()) {
    block_ = new ::protowire::RpcBlock(*from.block_);
  } else {
    block_ = nullptr;
  }
  allownondaablocks_ = from.allownondaablocks_;
  // @@protoc_insertion_point(copy_constructor:protowire.SubmitBlockRequestMessage)
}

inline void SubmitBlockRequestMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&block_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&allownondaablocks_) -
    reinterpret_cast<char*>(&block_)) + sizeof(allownondaablocks_));
}

SubmitBlockRequestMessage::~SubmitBlockRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.SubmitBlockRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SubmitBlockRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete block_;
}

void SubmitBlockRequestMessage::ArenaDtor(void* object) {
  SubmitBlockRequestMessage* _this = reinterpret_cast< SubmitBlockRequestMessage* >(object);
  (void)_this;
}
void SubmitBlockRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubmitBlockRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubmitBlockRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.SubmitBlockRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  allownondaablocks_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitBlockRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RpcBlock block = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool allowNonDAABlocks = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          allownondaablocks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubmitBlockRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.SubmitBlockRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RpcBlock block = 2;
  if (this->_internal_has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::block(this), target, stream);
  }

  // bool allowNonDAABlocks = 3;
  if (this->_internal_allownondaablocks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_allownondaablocks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.SubmitBlockRequestMessage)
  return target;
}

size_t SubmitBlockRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.SubmitBlockRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RpcBlock block = 2;
  if (this->_internal_has_block()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_);
  }

  // bool allowNonDAABlocks = 3;
  if (this->_internal_allownondaablocks() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubmitBlockRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SubmitBlockRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubmitBlockRequestMessage::GetClassData() const { return &_class_data_; }

void SubmitBlockRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SubmitBlockRequestMessage *>(to)->MergeFrom(
      static_cast<const SubmitBlockRequestMessage &>(from));
}


void SubmitBlockRequestMessage::MergeFrom(const SubmitBlockRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.SubmitBlockRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_block()) {
    _internal_mutable_block()->::protowire::RpcBlock::MergeFrom(from._internal_block());
  }
  if (from._internal_allownondaablocks() != 0) {
    _internal_set_allownondaablocks(from._internal_allownondaablocks());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitBlockRequestMessage::CopyFrom(const SubmitBlockRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.SubmitBlockRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitBlockRequestMessage::IsInitialized() const {
  return true;
}

void SubmitBlockRequestMessage::InternalSwap(SubmitBlockRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitBlockRequestMessage, allownondaablocks_)
      + sizeof(SubmitBlockRequestMessage::allownondaablocks_)
      - PROTOBUF_FIELD_OFFSET(SubmitBlockRequestMessage, block_)>(
          reinterpret_cast<char*>(&block_),
          reinterpret_cast<char*>(&other->block_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitBlockRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[16]);
}

// ===================================================================

class SubmitBlockResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const SubmitBlockResponseMessage* msg);
};

const ::protowire::RPCError&
SubmitBlockResponseMessage::_Internal::error(const SubmitBlockResponseMessage* msg) {
  return *msg->error_;
}
SubmitBlockResponseMessage::SubmitBlockResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.SubmitBlockResponseMessage)
}
SubmitBlockResponseMessage::SubmitBlockResponseMessage(const SubmitBlockResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  rejectreason_ = from.rejectreason_;
  // @@protoc_insertion_point(copy_constructor:protowire.SubmitBlockResponseMessage)
}

inline void SubmitBlockResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rejectreason_) -
    reinterpret_cast<char*>(&error_)) + sizeof(rejectreason_));
}

SubmitBlockResponseMessage::~SubmitBlockResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.SubmitBlockResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SubmitBlockResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void SubmitBlockResponseMessage::ArenaDtor(void* object) {
  SubmitBlockResponseMessage* _this = reinterpret_cast< SubmitBlockResponseMessage* >(object);
  (void)_this;
}
void SubmitBlockResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubmitBlockResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubmitBlockResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.SubmitBlockResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  rejectreason_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitBlockResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.SubmitBlockResponseMessage.RejectReason rejectReason = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_rejectreason(static_cast<::protowire::SubmitBlockResponseMessage_RejectReason>(val));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubmitBlockResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.SubmitBlockResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.SubmitBlockResponseMessage.RejectReason rejectReason = 1;
  if (this->_internal_rejectreason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_rejectreason(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.SubmitBlockResponseMessage)
  return target;
}

size_t SubmitBlockResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.SubmitBlockResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // .protowire.SubmitBlockResponseMessage.RejectReason rejectReason = 1;
  if (this->_internal_rejectreason() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rejectreason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubmitBlockResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SubmitBlockResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubmitBlockResponseMessage::GetClassData() const { return &_class_data_; }

void SubmitBlockResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SubmitBlockResponseMessage *>(to)->MergeFrom(
      static_cast<const SubmitBlockResponseMessage &>(from));
}


void SubmitBlockResponseMessage::MergeFrom(const SubmitBlockResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.SubmitBlockResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_rejectreason() != 0) {
    _internal_set_rejectreason(from._internal_rejectreason());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitBlockResponseMessage::CopyFrom(const SubmitBlockResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.SubmitBlockResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitBlockResponseMessage::IsInitialized() const {
  return true;
}

void SubmitBlockResponseMessage::InternalSwap(SubmitBlockResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitBlockResponseMessage, rejectreason_)
      + sizeof(SubmitBlockResponseMessage::rejectreason_)
      - PROTOBUF_FIELD_OFFSET(SubmitBlockResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitBlockResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[17]);
}

// ===================================================================

class GetBlockTemplateRequestMessage::_Internal {
 public:
};

GetBlockTemplateRequestMessage::GetBlockTemplateRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlockTemplateRequestMessage)
}
GetBlockTemplateRequestMessage::GetBlockTemplateRequestMessage(const GetBlockTemplateRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    payaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payaddress().empty()) {
    payaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payaddress(), 
      GetArenaForAllocation());
  }
  extradata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    extradata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_extradata().empty()) {
    extradata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_extradata(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlockTemplateRequestMessage)
}

inline void GetBlockTemplateRequestMessage::SharedCtor() {
payaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  payaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extradata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  extradata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBlockTemplateRequestMessage::~GetBlockTemplateRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBlockTemplateRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBlockTemplateRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  payaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extradata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBlockTemplateRequestMessage::ArenaDtor(void* object) {
  GetBlockTemplateRequestMessage* _this = reinterpret_cast< GetBlockTemplateRequestMessage* >(object);
  (void)_this;
}
void GetBlockTemplateRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockTemplateRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockTemplateRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBlockTemplateRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payaddress_.ClearToEmpty();
  extradata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockTemplateRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string payAddress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_payaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlockTemplateRequestMessage.payAddress"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string extraData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_extradata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlockTemplateRequestMessage.extraData"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockTemplateRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBlockTemplateRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string payAddress = 1;
  if (!this->_internal_payaddress().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payaddress().data(), static_cast<int>(this->_internal_payaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlockTemplateRequestMessage.payAddress");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_payaddress(), target);
  }

  // string extraData = 2;
  if (!this->_internal_extradata().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_extradata().data(), static_cast<int>(this->_internal_extradata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlockTemplateRequestMessage.extraData");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_extradata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBlockTemplateRequestMessage)
  return target;
}

size_t GetBlockTemplateRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBlockTemplateRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payAddress = 1;
  if (!this->_internal_payaddress().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payaddress());
  }

  // string extraData = 2;
  if (!this->_internal_extradata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_extradata());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockTemplateRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBlockTemplateRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockTemplateRequestMessage::GetClassData() const { return &_class_data_; }

void GetBlockTemplateRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBlockTemplateRequestMessage *>(to)->MergeFrom(
      static_cast<const GetBlockTemplateRequestMessage &>(from));
}


void GetBlockTemplateRequestMessage::MergeFrom(const GetBlockTemplateRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBlockTemplateRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payaddress().empty()) {
    _internal_set_payaddress(from._internal_payaddress());
  }
  if (!from._internal_extradata().empty()) {
    _internal_set_extradata(from._internal_extradata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockTemplateRequestMessage::CopyFrom(const GetBlockTemplateRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBlockTemplateRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockTemplateRequestMessage::IsInitialized() const {
  return true;
}

void GetBlockTemplateRequestMessage::InternalSwap(GetBlockTemplateRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payaddress_, lhs_arena,
      &other->payaddress_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &extradata_, lhs_arena,
      &other->extradata_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockTemplateRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[18]);
}

// ===================================================================

class GetBlockTemplateResponseMessage::_Internal {
 public:
  static const ::protowire::RpcBlock& block(const GetBlockTemplateResponseMessage* msg);
  static const ::protowire::RPCError& error(const GetBlockTemplateResponseMessage* msg);
};

const ::protowire::RpcBlock&
GetBlockTemplateResponseMessage::_Internal::block(const GetBlockTemplateResponseMessage* msg) {
  return *msg->block_;
}
const ::protowire::RPCError&
GetBlockTemplateResponseMessage::_Internal::error(const GetBlockTemplateResponseMessage* msg) {
  return *msg->error_;
}
GetBlockTemplateResponseMessage::GetBlockTemplateResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlockTemplateResponseMessage)
}
GetBlockTemplateResponseMessage::GetBlockTemplateResponseMessage(const GetBlockTemplateResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block()) {
    block_ = new ::protowire::RpcBlock(*from.block_);
  } else {
    block_ = nullptr;
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  issynced_ = from.issynced_;
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlockTemplateResponseMessage)
}

inline void GetBlockTemplateResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&block_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&issynced_) -
    reinterpret_cast<char*>(&block_)) + sizeof(issynced_));
}

GetBlockTemplateResponseMessage::~GetBlockTemplateResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBlockTemplateResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBlockTemplateResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete block_;
  if (this != internal_default_instance()) delete error_;
}

void GetBlockTemplateResponseMessage::ArenaDtor(void* object) {
  GetBlockTemplateResponseMessage* _this = reinterpret_cast< GetBlockTemplateResponseMessage* >(object);
  (void)_this;
}
void GetBlockTemplateResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockTemplateResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockTemplateResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBlockTemplateResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  issynced_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockTemplateResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isSynced = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          issynced_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcBlock block = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockTemplateResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBlockTemplateResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isSynced = 2;
  if (this->_internal_issynced() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_issynced(), target);
  }

  // .protowire.RpcBlock block = 3;
  if (this->_internal_has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::block(this), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBlockTemplateResponseMessage)
  return target;
}

size_t GetBlockTemplateResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBlockTemplateResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RpcBlock block = 3;
  if (this->_internal_has_block()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // bool isSynced = 2;
  if (this->_internal_issynced() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockTemplateResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBlockTemplateResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockTemplateResponseMessage::GetClassData() const { return &_class_data_; }

void GetBlockTemplateResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBlockTemplateResponseMessage *>(to)->MergeFrom(
      static_cast<const GetBlockTemplateResponseMessage &>(from));
}


void GetBlockTemplateResponseMessage::MergeFrom(const GetBlockTemplateResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBlockTemplateResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_block()) {
    _internal_mutable_block()->::protowire::RpcBlock::MergeFrom(from._internal_block());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_issynced() != 0) {
    _internal_set_issynced(from._internal_issynced());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockTemplateResponseMessage::CopyFrom(const GetBlockTemplateResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBlockTemplateResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockTemplateResponseMessage::IsInitialized() const {
  return true;
}

void GetBlockTemplateResponseMessage::InternalSwap(GetBlockTemplateResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBlockTemplateResponseMessage, issynced_)
      + sizeof(GetBlockTemplateResponseMessage::issynced_)
      - PROTOBUF_FIELD_OFFSET(GetBlockTemplateResponseMessage, block_)>(
          reinterpret_cast<char*>(&block_),
          reinterpret_cast<char*>(&other->block_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockTemplateResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[19]);
}

// ===================================================================

class NotifyBlockAddedRequestMessage::_Internal {
 public:
};

NotifyBlockAddedRequestMessage::NotifyBlockAddedRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyBlockAddedRequestMessage)
}
NotifyBlockAddedRequestMessage::NotifyBlockAddedRequestMessage(const NotifyBlockAddedRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyBlockAddedRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyBlockAddedRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyBlockAddedRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyBlockAddedRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[20]);
}

// ===================================================================

class NotifyBlockAddedResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const NotifyBlockAddedResponseMessage* msg);
};

const ::protowire::RPCError&
NotifyBlockAddedResponseMessage::_Internal::error(const NotifyBlockAddedResponseMessage* msg) {
  return *msg->error_;
}
NotifyBlockAddedResponseMessage::NotifyBlockAddedResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyBlockAddedResponseMessage)
}
NotifyBlockAddedResponseMessage::NotifyBlockAddedResponseMessage(const NotifyBlockAddedResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyBlockAddedResponseMessage)
}

inline void NotifyBlockAddedResponseMessage::SharedCtor() {
error_ = nullptr;
}

NotifyBlockAddedResponseMessage::~NotifyBlockAddedResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyBlockAddedResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyBlockAddedResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void NotifyBlockAddedResponseMessage::ArenaDtor(void* object) {
  NotifyBlockAddedResponseMessage* _this = reinterpret_cast< NotifyBlockAddedResponseMessage* >(object);
  (void)_this;
}
void NotifyBlockAddedResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyBlockAddedResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyBlockAddedResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyBlockAddedResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyBlockAddedResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyBlockAddedResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyBlockAddedResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyBlockAddedResponseMessage)
  return target;
}

size_t NotifyBlockAddedResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyBlockAddedResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyBlockAddedResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyBlockAddedResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyBlockAddedResponseMessage::GetClassData() const { return &_class_data_; }

void NotifyBlockAddedResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyBlockAddedResponseMessage *>(to)->MergeFrom(
      static_cast<const NotifyBlockAddedResponseMessage &>(from));
}


void NotifyBlockAddedResponseMessage::MergeFrom(const NotifyBlockAddedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyBlockAddedResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyBlockAddedResponseMessage::CopyFrom(const NotifyBlockAddedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyBlockAddedResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyBlockAddedResponseMessage::IsInitialized() const {
  return true;
}

void NotifyBlockAddedResponseMessage::InternalSwap(NotifyBlockAddedResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyBlockAddedResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[21]);
}

// ===================================================================

class BlockAddedNotificationMessage::_Internal {
 public:
  static const ::protowire::RpcBlock& block(const BlockAddedNotificationMessage* msg);
};

const ::protowire::RpcBlock&
BlockAddedNotificationMessage::_Internal::block(const BlockAddedNotificationMessage* msg) {
  return *msg->block_;
}
BlockAddedNotificationMessage::BlockAddedNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.BlockAddedNotificationMessage)
}
BlockAddedNotificationMessage::BlockAddedNotificationMessage(const BlockAddedNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block()) {
    block_ = new ::protowire::RpcBlock(*from.block_);
  } else {
    block_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.BlockAddedNotificationMessage)
}

inline void BlockAddedNotificationMessage::SharedCtor() {
block_ = nullptr;
}

BlockAddedNotificationMessage::~BlockAddedNotificationMessage() {
  // @@protoc_insertion_point(destructor:protowire.BlockAddedNotificationMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BlockAddedNotificationMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete block_;
}

void BlockAddedNotificationMessage::ArenaDtor(void* object) {
  BlockAddedNotificationMessage* _this = reinterpret_cast< BlockAddedNotificationMessage* >(object);
  (void)_this;
}
void BlockAddedNotificationMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockAddedNotificationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockAddedNotificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.BlockAddedNotificationMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockAddedNotificationMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RpcBlock block = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BlockAddedNotificationMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.BlockAddedNotificationMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RpcBlock block = 3;
  if (this->_internal_has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::block(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.BlockAddedNotificationMessage)
  return target;
}

size_t BlockAddedNotificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.BlockAddedNotificationMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RpcBlock block = 3;
  if (this->_internal_has_block()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockAddedNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BlockAddedNotificationMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockAddedNotificationMessage::GetClassData() const { return &_class_data_; }

void BlockAddedNotificationMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BlockAddedNotificationMessage *>(to)->MergeFrom(
      static_cast<const BlockAddedNotificationMessage &>(from));
}


void BlockAddedNotificationMessage::MergeFrom(const BlockAddedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.BlockAddedNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_block()) {
    _internal_mutable_block()->::protowire::RpcBlock::MergeFrom(from._internal_block());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockAddedNotificationMessage::CopyFrom(const BlockAddedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.BlockAddedNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockAddedNotificationMessage::IsInitialized() const {
  return true;
}

void BlockAddedNotificationMessage::InternalSwap(BlockAddedNotificationMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(block_, other->block_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockAddedNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[22]);
}

// ===================================================================

class GetPeerAddressesRequestMessage::_Internal {
 public:
};

GetPeerAddressesRequestMessage::GetPeerAddressesRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetPeerAddressesRequestMessage)
}
GetPeerAddressesRequestMessage::GetPeerAddressesRequestMessage(const GetPeerAddressesRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetPeerAddressesRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPeerAddressesRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPeerAddressesRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetPeerAddressesRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[23]);
}

// ===================================================================

class GetPeerAddressesResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetPeerAddressesResponseMessage* msg);
};

const ::protowire::RPCError&
GetPeerAddressesResponseMessage::_Internal::error(const GetPeerAddressesResponseMessage* msg) {
  return *msg->error_;
}
GetPeerAddressesResponseMessage::GetPeerAddressesResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  addresses_(arena),
  bannedaddresses_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetPeerAddressesResponseMessage)
}
GetPeerAddressesResponseMessage::GetPeerAddressesResponseMessage(const GetPeerAddressesResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_(from.addresses_),
      bannedaddresses_(from.bannedaddresses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetPeerAddressesResponseMessage)
}

inline void GetPeerAddressesResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetPeerAddressesResponseMessage::~GetPeerAddressesResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetPeerAddressesResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPeerAddressesResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetPeerAddressesResponseMessage::ArenaDtor(void* object) {
  GetPeerAddressesResponseMessage* _this = reinterpret_cast< GetPeerAddressesResponseMessage* >(object);
  (void)_this;
}
void GetPeerAddressesResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeerAddressesResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPeerAddressesResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetPeerAddressesResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  bannedaddresses_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeerAddressesResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protowire.GetPeerAddressesKnownAddressMessage addresses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_addresses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.GetPeerAddressesKnownAddressMessage bannedAddresses = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bannedaddresses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPeerAddressesResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetPeerAddressesResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protowire.GetPeerAddressesKnownAddressMessage addresses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_addresses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_addresses(i), target, stream);
  }

  // repeated .protowire.GetPeerAddressesKnownAddressMessage bannedAddresses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bannedaddresses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_bannedaddresses(i), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetPeerAddressesResponseMessage)
  return target;
}

size_t GetPeerAddressesResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetPeerAddressesResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.GetPeerAddressesKnownAddressMessage addresses = 1;
  total_size += 1UL * this->_internal_addresses_size();
  for (const auto& msg : this->addresses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .protowire.GetPeerAddressesKnownAddressMessage bannedAddresses = 2;
  total_size += 1UL * this->_internal_bannedaddresses_size();
  for (const auto& msg : this->bannedaddresses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPeerAddressesResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPeerAddressesResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPeerAddressesResponseMessage::GetClassData() const { return &_class_data_; }

void GetPeerAddressesResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPeerAddressesResponseMessage *>(to)->MergeFrom(
      static_cast<const GetPeerAddressesResponseMessage &>(from));
}


void GetPeerAddressesResponseMessage::MergeFrom(const GetPeerAddressesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetPeerAddressesResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  bannedaddresses_.MergeFrom(from.bannedaddresses_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPeerAddressesResponseMessage::CopyFrom(const GetPeerAddressesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetPeerAddressesResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerAddressesResponseMessage::IsInitialized() const {
  return true;
}

void GetPeerAddressesResponseMessage::InternalSwap(GetPeerAddressesResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  addresses_.InternalSwap(&other->addresses_);
  bannedaddresses_.InternalSwap(&other->bannedaddresses_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeerAddressesResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[24]);
}

// ===================================================================

class GetPeerAddressesKnownAddressMessage::_Internal {
 public:
};

GetPeerAddressesKnownAddressMessage::GetPeerAddressesKnownAddressMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetPeerAddressesKnownAddressMessage)
}
GetPeerAddressesKnownAddressMessage::GetPeerAddressesKnownAddressMessage(const GetPeerAddressesKnownAddressMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addr().empty()) {
    addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_addr(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetPeerAddressesKnownAddressMessage)
}

inline void GetPeerAddressesKnownAddressMessage::SharedCtor() {
addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  addr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPeerAddressesKnownAddressMessage::~GetPeerAddressesKnownAddressMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetPeerAddressesKnownAddressMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPeerAddressesKnownAddressMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPeerAddressesKnownAddressMessage::ArenaDtor(void* object) {
  GetPeerAddressesKnownAddressMessage* _this = reinterpret_cast< GetPeerAddressesKnownAddressMessage* >(object);
  (void)_this;
}
void GetPeerAddressesKnownAddressMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPeerAddressesKnownAddressMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPeerAddressesKnownAddressMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetPeerAddressesKnownAddressMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addr_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPeerAddressesKnownAddressMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetPeerAddressesKnownAddressMessage.Addr"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPeerAddressesKnownAddressMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetPeerAddressesKnownAddressMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string Addr = 1;
  if (!this->_internal_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addr().data(), static_cast<int>(this->_internal_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetPeerAddressesKnownAddressMessage.Addr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_addr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetPeerAddressesKnownAddressMessage)
  return target;
}

size_t GetPeerAddressesKnownAddressMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetPeerAddressesKnownAddressMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Addr = 1;
  if (!this->_internal_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPeerAddressesKnownAddressMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPeerAddressesKnownAddressMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPeerAddressesKnownAddressMessage::GetClassData() const { return &_class_data_; }

void GetPeerAddressesKnownAddressMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPeerAddressesKnownAddressMessage *>(to)->MergeFrom(
      static_cast<const GetPeerAddressesKnownAddressMessage &>(from));
}


void GetPeerAddressesKnownAddressMessage::MergeFrom(const GetPeerAddressesKnownAddressMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetPeerAddressesKnownAddressMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_addr().empty()) {
    _internal_set_addr(from._internal_addr());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPeerAddressesKnownAddressMessage::CopyFrom(const GetPeerAddressesKnownAddressMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetPeerAddressesKnownAddressMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPeerAddressesKnownAddressMessage::IsInitialized() const {
  return true;
}

void GetPeerAddressesKnownAddressMessage::InternalSwap(GetPeerAddressesKnownAddressMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &addr_, lhs_arena,
      &other->addr_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPeerAddressesKnownAddressMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[25]);
}

// ===================================================================

class GetSelectedTipHashRequestMessage::_Internal {
 public:
};

GetSelectedTipHashRequestMessage::GetSelectedTipHashRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetSelectedTipHashRequestMessage)
}
GetSelectedTipHashRequestMessage::GetSelectedTipHashRequestMessage(const GetSelectedTipHashRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetSelectedTipHashRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSelectedTipHashRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSelectedTipHashRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetSelectedTipHashRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[26]);
}

// ===================================================================

class GetSelectedTipHashResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetSelectedTipHashResponseMessage* msg);
};

const ::protowire::RPCError&
GetSelectedTipHashResponseMessage::_Internal::error(const GetSelectedTipHashResponseMessage* msg) {
  return *msg->error_;
}
GetSelectedTipHashResponseMessage::GetSelectedTipHashResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetSelectedTipHashResponseMessage)
}
GetSelectedTipHashResponseMessage::GetSelectedTipHashResponseMessage(const GetSelectedTipHashResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  selectedtiphash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    selectedtiphash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_selectedtiphash().empty()) {
    selectedtiphash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_selectedtiphash(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetSelectedTipHashResponseMessage)
}

inline void GetSelectedTipHashResponseMessage::SharedCtor() {
selectedtiphash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  selectedtiphash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_ = nullptr;
}

GetSelectedTipHashResponseMessage::~GetSelectedTipHashResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetSelectedTipHashResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSelectedTipHashResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  selectedtiphash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void GetSelectedTipHashResponseMessage::ArenaDtor(void* object) {
  GetSelectedTipHashResponseMessage* _this = reinterpret_cast< GetSelectedTipHashResponseMessage* >(object);
  (void)_this;
}
void GetSelectedTipHashResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSelectedTipHashResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSelectedTipHashResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetSelectedTipHashResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selectedtiphash_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSelectedTipHashResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string selectedTipHash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_selectedtiphash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetSelectedTipHashResponseMessage.selectedTipHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSelectedTipHashResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetSelectedTipHashResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string selectedTipHash = 1;
  if (!this->_internal_selectedtiphash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_selectedtiphash().data(), static_cast<int>(this->_internal_selectedtiphash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetSelectedTipHashResponseMessage.selectedTipHash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_selectedtiphash(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetSelectedTipHashResponseMessage)
  return target;
}

size_t GetSelectedTipHashResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetSelectedTipHashResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string selectedTipHash = 1;
  if (!this->_internal_selectedtiphash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_selectedtiphash());
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSelectedTipHashResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSelectedTipHashResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSelectedTipHashResponseMessage::GetClassData() const { return &_class_data_; }

void GetSelectedTipHashResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetSelectedTipHashResponseMessage *>(to)->MergeFrom(
      static_cast<const GetSelectedTipHashResponseMessage &>(from));
}


void GetSelectedTipHashResponseMessage::MergeFrom(const GetSelectedTipHashResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetSelectedTipHashResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_selectedtiphash().empty()) {
    _internal_set_selectedtiphash(from._internal_selectedtiphash());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSelectedTipHashResponseMessage::CopyFrom(const GetSelectedTipHashResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetSelectedTipHashResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSelectedTipHashResponseMessage::IsInitialized() const {
  return true;
}

void GetSelectedTipHashResponseMessage::InternalSwap(GetSelectedTipHashResponseMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &selectedtiphash_, lhs_arena,
      &other->selectedtiphash_, rhs_arena
  );
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSelectedTipHashResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[27]);
}

// ===================================================================

class GetMempoolEntryRequestMessage::_Internal {
 public:
};

GetMempoolEntryRequestMessage::GetMempoolEntryRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetMempoolEntryRequestMessage)
}
GetMempoolEntryRequestMessage::GetMempoolEntryRequestMessage(const GetMempoolEntryRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  txid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    txid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_txid().empty()) {
    txid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_txid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&includeorphanpool_, &from.includeorphanpool_,
    static_cast<size_t>(reinterpret_cast<char*>(&filtertransactionpool_) -
    reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetMempoolEntryRequestMessage)
}

inline void GetMempoolEntryRequestMessage::SharedCtor() {
txid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  txid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&includeorphanpool_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&filtertransactionpool_) -
    reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
}

GetMempoolEntryRequestMessage::~GetMempoolEntryRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetMempoolEntryRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMempoolEntryRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  txid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetMempoolEntryRequestMessage::ArenaDtor(void* object) {
  GetMempoolEntryRequestMessage* _this = reinterpret_cast< GetMempoolEntryRequestMessage* >(object);
  (void)_this;
}
void GetMempoolEntryRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMempoolEntryRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMempoolEntryRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetMempoolEntryRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txid_.ClearToEmpty();
  ::memset(&includeorphanpool_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filtertransactionpool_) -
      reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMempoolEntryRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string txId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_txid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetMempoolEntryRequestMessage.txId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool includeOrphanPool = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          includeorphanpool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool filterTransactionPool = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          filtertransactionpool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMempoolEntryRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetMempoolEntryRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string txId = 1;
  if (!this->_internal_txid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_txid().data(), static_cast<int>(this->_internal_txid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetMempoolEntryRequestMessage.txId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_txid(), target);
  }

  // bool includeOrphanPool = 2;
  if (this->_internal_includeorphanpool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_includeorphanpool(), target);
  }

  // bool filterTransactionPool = 3;
  if (this->_internal_filtertransactionpool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_filtertransactionpool(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetMempoolEntryRequestMessage)
  return target;
}

size_t GetMempoolEntryRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetMempoolEntryRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string txId = 1;
  if (!this->_internal_txid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_txid());
  }

  // bool includeOrphanPool = 2;
  if (this->_internal_includeorphanpool() != 0) {
    total_size += 1 + 1;
  }

  // bool filterTransactionPool = 3;
  if (this->_internal_filtertransactionpool() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMempoolEntryRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMempoolEntryRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMempoolEntryRequestMessage::GetClassData() const { return &_class_data_; }

void GetMempoolEntryRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMempoolEntryRequestMessage *>(to)->MergeFrom(
      static_cast<const GetMempoolEntryRequestMessage &>(from));
}


void GetMempoolEntryRequestMessage::MergeFrom(const GetMempoolEntryRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetMempoolEntryRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_txid().empty()) {
    _internal_set_txid(from._internal_txid());
  }
  if (from._internal_includeorphanpool() != 0) {
    _internal_set_includeorphanpool(from._internal_includeorphanpool());
  }
  if (from._internal_filtertransactionpool() != 0) {
    _internal_set_filtertransactionpool(from._internal_filtertransactionpool());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMempoolEntryRequestMessage::CopyFrom(const GetMempoolEntryRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetMempoolEntryRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolEntryRequestMessage::IsInitialized() const {
  return true;
}

void GetMempoolEntryRequestMessage::InternalSwap(GetMempoolEntryRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &txid_, lhs_arena,
      &other->txid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMempoolEntryRequestMessage, filtertransactionpool_)
      + sizeof(GetMempoolEntryRequestMessage::filtertransactionpool_)
      - PROTOBUF_FIELD_OFFSET(GetMempoolEntryRequestMessage, includeorphanpool_)>(
          reinterpret_cast<char*>(&includeorphanpool_),
          reinterpret_cast<char*>(&other->includeorphanpool_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMempoolEntryRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[28]);
}

// ===================================================================

class GetMempoolEntryResponseMessage::_Internal {
 public:
  static const ::protowire::MempoolEntry& entry(const GetMempoolEntryResponseMessage* msg);
  static const ::protowire::RPCError& error(const GetMempoolEntryResponseMessage* msg);
};

const ::protowire::MempoolEntry&
GetMempoolEntryResponseMessage::_Internal::entry(const GetMempoolEntryResponseMessage* msg) {
  return *msg->entry_;
}
const ::protowire::RPCError&
GetMempoolEntryResponseMessage::_Internal::error(const GetMempoolEntryResponseMessage* msg) {
  return *msg->error_;
}
GetMempoolEntryResponseMessage::GetMempoolEntryResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetMempoolEntryResponseMessage)
}
GetMempoolEntryResponseMessage::GetMempoolEntryResponseMessage(const GetMempoolEntryResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entry()) {
    entry_ = new ::protowire::MempoolEntry(*from.entry_);
  } else {
    entry_ = nullptr;
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetMempoolEntryResponseMessage)
}

inline void GetMempoolEntryResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&entry_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&entry_)) + sizeof(error_));
}

GetMempoolEntryResponseMessage::~GetMempoolEntryResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetMempoolEntryResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMempoolEntryResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete entry_;
  if (this != internal_default_instance()) delete error_;
}

void GetMempoolEntryResponseMessage::ArenaDtor(void* object) {
  GetMempoolEntryResponseMessage* _this = reinterpret_cast< GetMempoolEntryResponseMessage* >(object);
  (void)_this;
}
void GetMempoolEntryResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMempoolEntryResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMempoolEntryResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetMempoolEntryResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && entry_ != nullptr) {
    delete entry_;
  }
  entry_ = nullptr;
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMempoolEntryResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.MempoolEntry entry = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entry(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMempoolEntryResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetMempoolEntryResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.MempoolEntry entry = 1;
  if (this->_internal_has_entry()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::entry(this), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetMempoolEntryResponseMessage)
  return target;
}

size_t GetMempoolEntryResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetMempoolEntryResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.MempoolEntry entry = 1;
  if (this->_internal_has_entry()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *entry_);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMempoolEntryResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMempoolEntryResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMempoolEntryResponseMessage::GetClassData() const { return &_class_data_; }

void GetMempoolEntryResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMempoolEntryResponseMessage *>(to)->MergeFrom(
      static_cast<const GetMempoolEntryResponseMessage &>(from));
}


void GetMempoolEntryResponseMessage::MergeFrom(const GetMempoolEntryResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetMempoolEntryResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entry()) {
    _internal_mutable_entry()->::protowire::MempoolEntry::MergeFrom(from._internal_entry());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMempoolEntryResponseMessage::CopyFrom(const GetMempoolEntryResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetMempoolEntryResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolEntryResponseMessage::IsInitialized() const {
  return true;
}

void GetMempoolEntryResponseMessage::InternalSwap(GetMempoolEntryResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMempoolEntryResponseMessage, error_)
      + sizeof(GetMempoolEntryResponseMessage::error_)
      - PROTOBUF_FIELD_OFFSET(GetMempoolEntryResponseMessage, entry_)>(
          reinterpret_cast<char*>(&entry_),
          reinterpret_cast<char*>(&other->entry_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMempoolEntryResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[29]);
}

// ===================================================================

class GetMempoolEntriesRequestMessage::_Internal {
 public:
};

GetMempoolEntriesRequestMessage::GetMempoolEntriesRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetMempoolEntriesRequestMessage)
}
GetMempoolEntriesRequestMessage::GetMempoolEntriesRequestMessage(const GetMempoolEntriesRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&includeorphanpool_, &from.includeorphanpool_,
    static_cast<size_t>(reinterpret_cast<char*>(&filtertransactionpool_) -
    reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetMempoolEntriesRequestMessage)
}

inline void GetMempoolEntriesRequestMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&includeorphanpool_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&filtertransactionpool_) -
    reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
}

GetMempoolEntriesRequestMessage::~GetMempoolEntriesRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetMempoolEntriesRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMempoolEntriesRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMempoolEntriesRequestMessage::ArenaDtor(void* object) {
  GetMempoolEntriesRequestMessage* _this = reinterpret_cast< GetMempoolEntriesRequestMessage* >(object);
  (void)_this;
}
void GetMempoolEntriesRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMempoolEntriesRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMempoolEntriesRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetMempoolEntriesRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&includeorphanpool_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filtertransactionpool_) -
      reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMempoolEntriesRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool includeOrphanPool = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          includeorphanpool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool filterTransactionPool = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          filtertransactionpool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMempoolEntriesRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetMempoolEntriesRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool includeOrphanPool = 1;
  if (this->_internal_includeorphanpool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_includeorphanpool(), target);
  }

  // bool filterTransactionPool = 2;
  if (this->_internal_filtertransactionpool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_filtertransactionpool(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetMempoolEntriesRequestMessage)
  return target;
}

size_t GetMempoolEntriesRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetMempoolEntriesRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool includeOrphanPool = 1;
  if (this->_internal_includeorphanpool() != 0) {
    total_size += 1 + 1;
  }

  // bool filterTransactionPool = 2;
  if (this->_internal_filtertransactionpool() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMempoolEntriesRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMempoolEntriesRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMempoolEntriesRequestMessage::GetClassData() const { return &_class_data_; }

void GetMempoolEntriesRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMempoolEntriesRequestMessage *>(to)->MergeFrom(
      static_cast<const GetMempoolEntriesRequestMessage &>(from));
}


void GetMempoolEntriesRequestMessage::MergeFrom(const GetMempoolEntriesRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetMempoolEntriesRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_includeorphanpool() != 0) {
    _internal_set_includeorphanpool(from._internal_includeorphanpool());
  }
  if (from._internal_filtertransactionpool() != 0) {
    _internal_set_filtertransactionpool(from._internal_filtertransactionpool());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMempoolEntriesRequestMessage::CopyFrom(const GetMempoolEntriesRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetMempoolEntriesRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolEntriesRequestMessage::IsInitialized() const {
  return true;
}

void GetMempoolEntriesRequestMessage::InternalSwap(GetMempoolEntriesRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMempoolEntriesRequestMessage, filtertransactionpool_)
      + sizeof(GetMempoolEntriesRequestMessage::filtertransactionpool_)
      - PROTOBUF_FIELD_OFFSET(GetMempoolEntriesRequestMessage, includeorphanpool_)>(
          reinterpret_cast<char*>(&includeorphanpool_),
          reinterpret_cast<char*>(&other->includeorphanpool_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMempoolEntriesRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[30]);
}

// ===================================================================

class GetMempoolEntriesResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetMempoolEntriesResponseMessage* msg);
};

const ::protowire::RPCError&
GetMempoolEntriesResponseMessage::_Internal::error(const GetMempoolEntriesResponseMessage* msg) {
  return *msg->error_;
}
GetMempoolEntriesResponseMessage::GetMempoolEntriesResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetMempoolEntriesResponseMessage)
}
GetMempoolEntriesResponseMessage::GetMempoolEntriesResponseMessage(const GetMempoolEntriesResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetMempoolEntriesResponseMessage)
}

inline void GetMempoolEntriesResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetMempoolEntriesResponseMessage::~GetMempoolEntriesResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetMempoolEntriesResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMempoolEntriesResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetMempoolEntriesResponseMessage::ArenaDtor(void* object) {
  GetMempoolEntriesResponseMessage* _this = reinterpret_cast< GetMempoolEntriesResponseMessage* >(object);
  (void)_this;
}
void GetMempoolEntriesResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMempoolEntriesResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMempoolEntriesResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetMempoolEntriesResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMempoolEntriesResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protowire.MempoolEntry entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMempoolEntriesResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetMempoolEntriesResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protowire.MempoolEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entries(i), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetMempoolEntriesResponseMessage)
  return target;
}

size_t GetMempoolEntriesResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetMempoolEntriesResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.MempoolEntry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMempoolEntriesResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMempoolEntriesResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMempoolEntriesResponseMessage::GetClassData() const { return &_class_data_; }

void GetMempoolEntriesResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMempoolEntriesResponseMessage *>(to)->MergeFrom(
      static_cast<const GetMempoolEntriesResponseMessage &>(from));
}


void GetMempoolEntriesResponseMessage::MergeFrom(const GetMempoolEntriesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetMempoolEntriesResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMempoolEntriesResponseMessage::CopyFrom(const GetMempoolEntriesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetMempoolEntriesResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolEntriesResponseMessage::IsInitialized() const {
  return true;
}

void GetMempoolEntriesResponseMessage::InternalSwap(GetMempoolEntriesResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMempoolEntriesResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[31]);
}

// ===================================================================

class MempoolEntry::_Internal {
 public:
  static const ::protowire::RpcTransaction& transaction(const MempoolEntry* msg);
};

const ::protowire::RpcTransaction&
MempoolEntry::_Internal::transaction(const MempoolEntry* msg) {
  return *msg->transaction_;
}
MempoolEntry::MempoolEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.MempoolEntry)
}
MempoolEntry::MempoolEntry(const MempoolEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction()) {
    transaction_ = new ::protowire::RpcTransaction(*from.transaction_);
  } else {
    transaction_ = nullptr;
  }
  ::memcpy(&fee_, &from.fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&isorphan_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(isorphan_));
  // @@protoc_insertion_point(copy_constructor:protowire.MempoolEntry)
}

inline void MempoolEntry::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&transaction_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&isorphan_) -
    reinterpret_cast<char*>(&transaction_)) + sizeof(isorphan_));
}

MempoolEntry::~MempoolEntry() {
  // @@protoc_insertion_point(destructor:protowire.MempoolEntry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MempoolEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete transaction_;
}

void MempoolEntry::ArenaDtor(void* object) {
  MempoolEntry* _this = reinterpret_cast< MempoolEntry* >(object);
  (void)_this;
}
void MempoolEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MempoolEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MempoolEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.MempoolEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && transaction_ != nullptr) {
    delete transaction_;
  }
  transaction_ = nullptr;
  ::memset(&fee_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isorphan_) -
      reinterpret_cast<char*>(&fee_)) + sizeof(isorphan_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MempoolEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 fee = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          fee_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcTransaction transaction = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isOrphan = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          isorphan_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MempoolEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.MempoolEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fee = 1;
  if (this->_internal_fee() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_fee(), target);
  }

  // .protowire.RpcTransaction transaction = 3;
  if (this->_internal_has_transaction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::transaction(this), target, stream);
  }

  // bool isOrphan = 4;
  if (this->_internal_isorphan() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_isorphan(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.MempoolEntry)
  return target;
}

size_t MempoolEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.MempoolEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RpcTransaction transaction = 3;
  if (this->_internal_has_transaction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transaction_);
  }

  // uint64 fee = 1;
  if (this->_internal_fee() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_fee());
  }

  // bool isOrphan = 4;
  if (this->_internal_isorphan() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MempoolEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MempoolEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MempoolEntry::GetClassData() const { return &_class_data_; }

void MempoolEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MempoolEntry *>(to)->MergeFrom(
      static_cast<const MempoolEntry &>(from));
}


void MempoolEntry::MergeFrom(const MempoolEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.MempoolEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transaction()) {
    _internal_mutable_transaction()->::protowire::RpcTransaction::MergeFrom(from._internal_transaction());
  }
  if (from._internal_fee() != 0) {
    _internal_set_fee(from._internal_fee());
  }
  if (from._internal_isorphan() != 0) {
    _internal_set_isorphan(from._internal_isorphan());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MempoolEntry::CopyFrom(const MempoolEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.MempoolEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MempoolEntry::IsInitialized() const {
  return true;
}

void MempoolEntry::InternalSwap(MempoolEntry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MempoolEntry, isorphan_)
      + sizeof(MempoolEntry::isorphan_)
      - PROTOBUF_FIELD_OFFSET(MempoolEntry, transaction_)>(
          reinterpret_cast<char*>(&transaction_),
          reinterpret_cast<char*>(&other->transaction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MempoolEntry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[32]);
}

// ===================================================================

class GetConnectedPeerInfoRequestMessage::_Internal {
 public:
};

GetConnectedPeerInfoRequestMessage::GetConnectedPeerInfoRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetConnectedPeerInfoRequestMessage)
}
GetConnectedPeerInfoRequestMessage::GetConnectedPeerInfoRequestMessage(const GetConnectedPeerInfoRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetConnectedPeerInfoRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConnectedPeerInfoRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConnectedPeerInfoRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetConnectedPeerInfoRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[33]);
}

// ===================================================================

class GetConnectedPeerInfoResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetConnectedPeerInfoResponseMessage* msg);
};

const ::protowire::RPCError&
GetConnectedPeerInfoResponseMessage::_Internal::error(const GetConnectedPeerInfoResponseMessage* msg) {
  return *msg->error_;
}
GetConnectedPeerInfoResponseMessage::GetConnectedPeerInfoResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  infos_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetConnectedPeerInfoResponseMessage)
}
GetConnectedPeerInfoResponseMessage::GetConnectedPeerInfoResponseMessage(const GetConnectedPeerInfoResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetConnectedPeerInfoResponseMessage)
}

inline void GetConnectedPeerInfoResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetConnectedPeerInfoResponseMessage::~GetConnectedPeerInfoResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetConnectedPeerInfoResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetConnectedPeerInfoResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetConnectedPeerInfoResponseMessage::ArenaDtor(void* object) {
  GetConnectedPeerInfoResponseMessage* _this = reinterpret_cast< GetConnectedPeerInfoResponseMessage* >(object);
  (void)_this;
}
void GetConnectedPeerInfoResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConnectedPeerInfoResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetConnectedPeerInfoResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetConnectedPeerInfoResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConnectedPeerInfoResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protowire.GetConnectedPeerInfoMessage infos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetConnectedPeerInfoResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetConnectedPeerInfoResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protowire.GetConnectedPeerInfoMessage infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_infos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_infos(i), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetConnectedPeerInfoResponseMessage)
  return target;
}

size_t GetConnectedPeerInfoResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetConnectedPeerInfoResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.GetConnectedPeerInfoMessage infos = 1;
  total_size += 1UL * this->_internal_infos_size();
  for (const auto& msg : this->infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConnectedPeerInfoResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetConnectedPeerInfoResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConnectedPeerInfoResponseMessage::GetClassData() const { return &_class_data_; }

void GetConnectedPeerInfoResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetConnectedPeerInfoResponseMessage *>(to)->MergeFrom(
      static_cast<const GetConnectedPeerInfoResponseMessage &>(from));
}


void GetConnectedPeerInfoResponseMessage::MergeFrom(const GetConnectedPeerInfoResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetConnectedPeerInfoResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetConnectedPeerInfoResponseMessage::CopyFrom(const GetConnectedPeerInfoResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetConnectedPeerInfoResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectedPeerInfoResponseMessage::IsInitialized() const {
  return true;
}

void GetConnectedPeerInfoResponseMessage::InternalSwap(GetConnectedPeerInfoResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  infos_.InternalSwap(&other->infos_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConnectedPeerInfoResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[34]);
}

// ===================================================================

class GetConnectedPeerInfoMessage::_Internal {
 public:
};

GetConnectedPeerInfoMessage::GetConnectedPeerInfoMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetConnectedPeerInfoMessage)
}
GetConnectedPeerInfoMessage::GetConnectedPeerInfoMessage(const GetConnectedPeerInfoMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArenaForAllocation());
  }
  useragent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    useragent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_useragent().empty()) {
    useragent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_useragent(), 
      GetArenaForAllocation());
  }
  ::memcpy(&lastpingduration_, &from.lastpingduration_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeconnected_) -
    reinterpret_cast<char*>(&lastpingduration_)) + sizeof(timeconnected_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetConnectedPeerInfoMessage)
}

inline void GetConnectedPeerInfoMessage::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
useragent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  useragent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lastpingduration_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timeconnected_) -
    reinterpret_cast<char*>(&lastpingduration_)) + sizeof(timeconnected_));
}

GetConnectedPeerInfoMessage::~GetConnectedPeerInfoMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetConnectedPeerInfoMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetConnectedPeerInfoMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  useragent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetConnectedPeerInfoMessage::ArenaDtor(void* object) {
  GetConnectedPeerInfoMessage* _this = reinterpret_cast< GetConnectedPeerInfoMessage* >(object);
  (void)_this;
}
void GetConnectedPeerInfoMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConnectedPeerInfoMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetConnectedPeerInfoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetConnectedPeerInfoMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  address_.ClearToEmpty();
  useragent_.ClearToEmpty();
  ::memset(&lastpingduration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeconnected_) -
      reinterpret_cast<char*>(&lastpingduration_)) + sizeof(timeconnected_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConnectedPeerInfoMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetConnectedPeerInfoMessage.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetConnectedPeerInfoMessage.address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 lastPingDuration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          lastpingduration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isOutbound = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          isoutbound_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 timeOffset = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          timeoffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string userAgent = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_useragent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetConnectedPeerInfoMessage.userAgent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 advertisedProtocolVersion = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          advertisedprotocolversion_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 timeConnected = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          timeconnected_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isIbdPeer = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          isibdpeer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetConnectedPeerInfoMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetConnectedPeerInfoMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetConnectedPeerInfoMessage.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string address = 2;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetConnectedPeerInfoMessage.address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_address(), target);
  }

  // int64 lastPingDuration = 3;
  if (this->_internal_lastpingduration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_lastpingduration(), target);
  }

  // bool isOutbound = 6;
  if (this->_internal_isoutbound() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_isoutbound(), target);
  }

  // int64 timeOffset = 7;
  if (this->_internal_timeoffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_timeoffset(), target);
  }

  // string userAgent = 8;
  if (!this->_internal_useragent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_useragent().data(), static_cast<int>(this->_internal_useragent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetConnectedPeerInfoMessage.userAgent");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_useragent(), target);
  }

  // uint32 advertisedProtocolVersion = 9;
  if (this->_internal_advertisedprotocolversion() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_advertisedprotocolversion(), target);
  }

  // int64 timeConnected = 10;
  if (this->_internal_timeconnected() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_timeconnected(), target);
  }

  // bool isIbdPeer = 11;
  if (this->_internal_isibdpeer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_isibdpeer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetConnectedPeerInfoMessage)
  return target;
}

size_t GetConnectedPeerInfoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetConnectedPeerInfoMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string address = 2;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // string userAgent = 8;
  if (!this->_internal_useragent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_useragent());
  }

  // int64 lastPingDuration = 3;
  if (this->_internal_lastpingduration() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_lastpingduration());
  }

  // int64 timeOffset = 7;
  if (this->_internal_timeoffset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_timeoffset());
  }

  // bool isOutbound = 6;
  if (this->_internal_isoutbound() != 0) {
    total_size += 1 + 1;
  }

  // bool isIbdPeer = 11;
  if (this->_internal_isibdpeer() != 0) {
    total_size += 1 + 1;
  }

  // uint32 advertisedProtocolVersion = 9;
  if (this->_internal_advertisedprotocolversion() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_advertisedprotocolversion());
  }

  // int64 timeConnected = 10;
  if (this->_internal_timeconnected() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_timeconnected());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConnectedPeerInfoMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetConnectedPeerInfoMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConnectedPeerInfoMessage::GetClassData() const { return &_class_data_; }

void GetConnectedPeerInfoMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetConnectedPeerInfoMessage *>(to)->MergeFrom(
      static_cast<const GetConnectedPeerInfoMessage &>(from));
}


void GetConnectedPeerInfoMessage::MergeFrom(const GetConnectedPeerInfoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetConnectedPeerInfoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_address().empty()) {
    _internal_set_address(from._internal_address());
  }
  if (!from._internal_useragent().empty()) {
    _internal_set_useragent(from._internal_useragent());
  }
  if (from._internal_lastpingduration() != 0) {
    _internal_set_lastpingduration(from._internal_lastpingduration());
  }
  if (from._internal_timeoffset() != 0) {
    _internal_set_timeoffset(from._internal_timeoffset());
  }
  if (from._internal_isoutbound() != 0) {
    _internal_set_isoutbound(from._internal_isoutbound());
  }
  if (from._internal_isibdpeer() != 0) {
    _internal_set_isibdpeer(from._internal_isibdpeer());
  }
  if (from._internal_advertisedprotocolversion() != 0) {
    _internal_set_advertisedprotocolversion(from._internal_advertisedprotocolversion());
  }
  if (from._internal_timeconnected() != 0) {
    _internal_set_timeconnected(from._internal_timeconnected());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetConnectedPeerInfoMessage::CopyFrom(const GetConnectedPeerInfoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetConnectedPeerInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConnectedPeerInfoMessage::IsInitialized() const {
  return true;
}

void GetConnectedPeerInfoMessage::InternalSwap(GetConnectedPeerInfoMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &address_, lhs_arena,
      &other->address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &useragent_, lhs_arena,
      &other->useragent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConnectedPeerInfoMessage, timeconnected_)
      + sizeof(GetConnectedPeerInfoMessage::timeconnected_)
      - PROTOBUF_FIELD_OFFSET(GetConnectedPeerInfoMessage, lastpingduration_)>(
          reinterpret_cast<char*>(&lastpingduration_),
          reinterpret_cast<char*>(&other->lastpingduration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConnectedPeerInfoMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[35]);
}

// ===================================================================

class AddPeerRequestMessage::_Internal {
 public:
};

AddPeerRequestMessage::AddPeerRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.AddPeerRequestMessage)
}
AddPeerRequestMessage::AddPeerRequestMessage(const AddPeerRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArenaForAllocation());
  }
  ispermanent_ = from.ispermanent_;
  // @@protoc_insertion_point(copy_constructor:protowire.AddPeerRequestMessage)
}

inline void AddPeerRequestMessage::SharedCtor() {
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ispermanent_ = false;
}

AddPeerRequestMessage::~AddPeerRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.AddPeerRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AddPeerRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddPeerRequestMessage::ArenaDtor(void* object) {
  AddPeerRequestMessage* _this = reinterpret_cast< AddPeerRequestMessage* >(object);
  (void)_this;
}
void AddPeerRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddPeerRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.AddPeerRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmpty();
  ispermanent_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.AddPeerRequestMessage.address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isPermanent = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ispermanent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddPeerRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.AddPeerRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.AddPeerRequestMessage.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // bool isPermanent = 2;
  if (this->_internal_ispermanent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_ispermanent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.AddPeerRequestMessage)
  return target;
}

size_t AddPeerRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.AddPeerRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // bool isPermanent = 2;
  if (this->_internal_ispermanent() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddPeerRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AddPeerRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddPeerRequestMessage::GetClassData() const { return &_class_data_; }

void AddPeerRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AddPeerRequestMessage *>(to)->MergeFrom(
      static_cast<const AddPeerRequestMessage &>(from));
}


void AddPeerRequestMessage::MergeFrom(const AddPeerRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.AddPeerRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _internal_set_address(from._internal_address());
  }
  if (from._internal_ispermanent() != 0) {
    _internal_set_ispermanent(from._internal_ispermanent());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddPeerRequestMessage::CopyFrom(const AddPeerRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.AddPeerRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerRequestMessage::IsInitialized() const {
  return true;
}

void AddPeerRequestMessage::InternalSwap(AddPeerRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &address_, lhs_arena,
      &other->address_, rhs_arena
  );
  swap(ispermanent_, other->ispermanent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[36]);
}

// ===================================================================

class AddPeerResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const AddPeerResponseMessage* msg);
};

const ::protowire::RPCError&
AddPeerResponseMessage::_Internal::error(const AddPeerResponseMessage* msg) {
  return *msg->error_;
}
AddPeerResponseMessage::AddPeerResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.AddPeerResponseMessage)
}
AddPeerResponseMessage::AddPeerResponseMessage(const AddPeerResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.AddPeerResponseMessage)
}

inline void AddPeerResponseMessage::SharedCtor() {
error_ = nullptr;
}

AddPeerResponseMessage::~AddPeerResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.AddPeerResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AddPeerResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void AddPeerResponseMessage::ArenaDtor(void* object) {
  AddPeerResponseMessage* _this = reinterpret_cast< AddPeerResponseMessage* >(object);
  (void)_this;
}
void AddPeerResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPeerResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddPeerResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.AddPeerResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPeerResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddPeerResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.AddPeerResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.AddPeerResponseMessage)
  return target;
}

size_t AddPeerResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.AddPeerResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddPeerResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AddPeerResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddPeerResponseMessage::GetClassData() const { return &_class_data_; }

void AddPeerResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AddPeerResponseMessage *>(to)->MergeFrom(
      static_cast<const AddPeerResponseMessage &>(from));
}


void AddPeerResponseMessage::MergeFrom(const AddPeerResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.AddPeerResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddPeerResponseMessage::CopyFrom(const AddPeerResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.AddPeerResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerResponseMessage::IsInitialized() const {
  return true;
}

void AddPeerResponseMessage::InternalSwap(AddPeerResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPeerResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[37]);
}

// ===================================================================

class SubmitTransactionRequestMessage::_Internal {
 public:
  static const ::protowire::RpcTransaction& transaction(const SubmitTransactionRequestMessage* msg);
};

const ::protowire::RpcTransaction&
SubmitTransactionRequestMessage::_Internal::transaction(const SubmitTransactionRequestMessage* msg) {
  return *msg->transaction_;
}
SubmitTransactionRequestMessage::SubmitTransactionRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.SubmitTransactionRequestMessage)
}
SubmitTransactionRequestMessage::SubmitTransactionRequestMessage(const SubmitTransactionRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction()) {
    transaction_ = new ::protowire::RpcTransaction(*from.transaction_);
  } else {
    transaction_ = nullptr;
  }
  alloworphan_ = from.alloworphan_;
  // @@protoc_insertion_point(copy_constructor:protowire.SubmitTransactionRequestMessage)
}

inline void SubmitTransactionRequestMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&transaction_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&alloworphan_) -
    reinterpret_cast<char*>(&transaction_)) + sizeof(alloworphan_));
}

SubmitTransactionRequestMessage::~SubmitTransactionRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.SubmitTransactionRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SubmitTransactionRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete transaction_;
}

void SubmitTransactionRequestMessage::ArenaDtor(void* object) {
  SubmitTransactionRequestMessage* _this = reinterpret_cast< SubmitTransactionRequestMessage* >(object);
  (void)_this;
}
void SubmitTransactionRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubmitTransactionRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubmitTransactionRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.SubmitTransactionRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && transaction_ != nullptr) {
    delete transaction_;
  }
  transaction_ = nullptr;
  alloworphan_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitTransactionRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RpcTransaction transaction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool allowOrphan = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          alloworphan_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubmitTransactionRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.SubmitTransactionRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RpcTransaction transaction = 1;
  if (this->_internal_has_transaction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::transaction(this), target, stream);
  }

  // bool allowOrphan = 2;
  if (this->_internal_alloworphan() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_alloworphan(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.SubmitTransactionRequestMessage)
  return target;
}

size_t SubmitTransactionRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.SubmitTransactionRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RpcTransaction transaction = 1;
  if (this->_internal_has_transaction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transaction_);
  }

  // bool allowOrphan = 2;
  if (this->_internal_alloworphan() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubmitTransactionRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SubmitTransactionRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubmitTransactionRequestMessage::GetClassData() const { return &_class_data_; }

void SubmitTransactionRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SubmitTransactionRequestMessage *>(to)->MergeFrom(
      static_cast<const SubmitTransactionRequestMessage &>(from));
}


void SubmitTransactionRequestMessage::MergeFrom(const SubmitTransactionRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.SubmitTransactionRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transaction()) {
    _internal_mutable_transaction()->::protowire::RpcTransaction::MergeFrom(from._internal_transaction());
  }
  if (from._internal_alloworphan() != 0) {
    _internal_set_alloworphan(from._internal_alloworphan());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitTransactionRequestMessage::CopyFrom(const SubmitTransactionRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.SubmitTransactionRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitTransactionRequestMessage::IsInitialized() const {
  return true;
}

void SubmitTransactionRequestMessage::InternalSwap(SubmitTransactionRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitTransactionRequestMessage, alloworphan_)
      + sizeof(SubmitTransactionRequestMessage::alloworphan_)
      - PROTOBUF_FIELD_OFFSET(SubmitTransactionRequestMessage, transaction_)>(
          reinterpret_cast<char*>(&transaction_),
          reinterpret_cast<char*>(&other->transaction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitTransactionRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[38]);
}

// ===================================================================

class SubmitTransactionResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const SubmitTransactionResponseMessage* msg);
};

const ::protowire::RPCError&
SubmitTransactionResponseMessage::_Internal::error(const SubmitTransactionResponseMessage* msg) {
  return *msg->error_;
}
SubmitTransactionResponseMessage::SubmitTransactionResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.SubmitTransactionResponseMessage)
}
SubmitTransactionResponseMessage::SubmitTransactionResponseMessage(const SubmitTransactionResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transactionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    transactionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_transactionid().empty()) {
    transactionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transactionid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.SubmitTransactionResponseMessage)
}

inline void SubmitTransactionResponseMessage::SharedCtor() {
transactionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  transactionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_ = nullptr;
}

SubmitTransactionResponseMessage::~SubmitTransactionResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.SubmitTransactionResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SubmitTransactionResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  transactionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void SubmitTransactionResponseMessage::ArenaDtor(void* object) {
  SubmitTransactionResponseMessage* _this = reinterpret_cast< SubmitTransactionResponseMessage* >(object);
  (void)_this;
}
void SubmitTransactionResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubmitTransactionResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubmitTransactionResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.SubmitTransactionResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactionid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubmitTransactionResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string transactionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_transactionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.SubmitTransactionResponseMessage.transactionId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SubmitTransactionResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.SubmitTransactionResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string transactionId = 1;
  if (!this->_internal_transactionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transactionid().data(), static_cast<int>(this->_internal_transactionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.SubmitTransactionResponseMessage.transactionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transactionid(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.SubmitTransactionResponseMessage)
  return target;
}

size_t SubmitTransactionResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.SubmitTransactionResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transactionId = 1;
  if (!this->_internal_transactionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transactionid());
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SubmitTransactionResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SubmitTransactionResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SubmitTransactionResponseMessage::GetClassData() const { return &_class_data_; }

void SubmitTransactionResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SubmitTransactionResponseMessage *>(to)->MergeFrom(
      static_cast<const SubmitTransactionResponseMessage &>(from));
}


void SubmitTransactionResponseMessage::MergeFrom(const SubmitTransactionResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.SubmitTransactionResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transactionid().empty()) {
    _internal_set_transactionid(from._internal_transactionid());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitTransactionResponseMessage::CopyFrom(const SubmitTransactionResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.SubmitTransactionResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitTransactionResponseMessage::IsInitialized() const {
  return true;
}

void SubmitTransactionResponseMessage::InternalSwap(SubmitTransactionResponseMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &transactionid_, lhs_arena,
      &other->transactionid_, rhs_arena
  );
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitTransactionResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[39]);
}

// ===================================================================

class NotifyVirtualSelectedParentChainChangedRequestMessage::_Internal {
 public:
};

NotifyVirtualSelectedParentChainChangedRequestMessage::NotifyVirtualSelectedParentChainChangedRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
}
NotifyVirtualSelectedParentChainChangedRequestMessage::NotifyVirtualSelectedParentChainChangedRequestMessage(const NotifyVirtualSelectedParentChainChangedRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  includeacceptedtransactionids_ = from.includeacceptedtransactionids_;
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
}

inline void NotifyVirtualSelectedParentChainChangedRequestMessage::SharedCtor() {
includeacceptedtransactionids_ = false;
}

NotifyVirtualSelectedParentChainChangedRequestMessage::~NotifyVirtualSelectedParentChainChangedRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyVirtualSelectedParentChainChangedRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyVirtualSelectedParentChainChangedRequestMessage::ArenaDtor(void* object) {
  NotifyVirtualSelectedParentChainChangedRequestMessage* _this = reinterpret_cast< NotifyVirtualSelectedParentChainChangedRequestMessage* >(object);
  (void)_this;
}
void NotifyVirtualSelectedParentChainChangedRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyVirtualSelectedParentChainChangedRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyVirtualSelectedParentChainChangedRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  includeacceptedtransactionids_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyVirtualSelectedParentChainChangedRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool includeAcceptedTransactionIds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          includeacceptedtransactionids_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyVirtualSelectedParentChainChangedRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool includeAcceptedTransactionIds = 1;
  if (this->_internal_includeacceptedtransactionids() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_includeacceptedtransactionids(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
  return target;
}

size_t NotifyVirtualSelectedParentChainChangedRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool includeAcceptedTransactionIds = 1;
  if (this->_internal_includeacceptedtransactionids() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyVirtualSelectedParentChainChangedRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyVirtualSelectedParentChainChangedRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyVirtualSelectedParentChainChangedRequestMessage::GetClassData() const { return &_class_data_; }

void NotifyVirtualSelectedParentChainChangedRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyVirtualSelectedParentChainChangedRequestMessage *>(to)->MergeFrom(
      static_cast<const NotifyVirtualSelectedParentChainChangedRequestMessage &>(from));
}


void NotifyVirtualSelectedParentChainChangedRequestMessage::MergeFrom(const NotifyVirtualSelectedParentChainChangedRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_includeacceptedtransactionids() != 0) {
    _internal_set_includeacceptedtransactionids(from._internal_includeacceptedtransactionids());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyVirtualSelectedParentChainChangedRequestMessage::CopyFrom(const NotifyVirtualSelectedParentChainChangedRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyVirtualSelectedParentChainChangedRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyVirtualSelectedParentChainChangedRequestMessage::IsInitialized() const {
  return true;
}

void NotifyVirtualSelectedParentChainChangedRequestMessage::InternalSwap(NotifyVirtualSelectedParentChainChangedRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(includeacceptedtransactionids_, other->includeacceptedtransactionids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyVirtualSelectedParentChainChangedRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[40]);
}

// ===================================================================

class NotifyVirtualSelectedParentChainChangedResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const NotifyVirtualSelectedParentChainChangedResponseMessage* msg);
};

const ::protowire::RPCError&
NotifyVirtualSelectedParentChainChangedResponseMessage::_Internal::error(const NotifyVirtualSelectedParentChainChangedResponseMessage* msg) {
  return *msg->error_;
}
NotifyVirtualSelectedParentChainChangedResponseMessage::NotifyVirtualSelectedParentChainChangedResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
}
NotifyVirtualSelectedParentChainChangedResponseMessage::NotifyVirtualSelectedParentChainChangedResponseMessage(const NotifyVirtualSelectedParentChainChangedResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
}

inline void NotifyVirtualSelectedParentChainChangedResponseMessage::SharedCtor() {
error_ = nullptr;
}

NotifyVirtualSelectedParentChainChangedResponseMessage::~NotifyVirtualSelectedParentChainChangedResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyVirtualSelectedParentChainChangedResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void NotifyVirtualSelectedParentChainChangedResponseMessage::ArenaDtor(void* object) {
  NotifyVirtualSelectedParentChainChangedResponseMessage* _this = reinterpret_cast< NotifyVirtualSelectedParentChainChangedResponseMessage* >(object);
  (void)_this;
}
void NotifyVirtualSelectedParentChainChangedResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyVirtualSelectedParentChainChangedResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyVirtualSelectedParentChainChangedResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyVirtualSelectedParentChainChangedResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyVirtualSelectedParentChainChangedResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
  return target;
}

size_t NotifyVirtualSelectedParentChainChangedResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyVirtualSelectedParentChainChangedResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyVirtualSelectedParentChainChangedResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyVirtualSelectedParentChainChangedResponseMessage::GetClassData() const { return &_class_data_; }

void NotifyVirtualSelectedParentChainChangedResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyVirtualSelectedParentChainChangedResponseMessage *>(to)->MergeFrom(
      static_cast<const NotifyVirtualSelectedParentChainChangedResponseMessage &>(from));
}


void NotifyVirtualSelectedParentChainChangedResponseMessage::MergeFrom(const NotifyVirtualSelectedParentChainChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyVirtualSelectedParentChainChangedResponseMessage::CopyFrom(const NotifyVirtualSelectedParentChainChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyVirtualSelectedParentChainChangedResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyVirtualSelectedParentChainChangedResponseMessage::IsInitialized() const {
  return true;
}

void NotifyVirtualSelectedParentChainChangedResponseMessage::InternalSwap(NotifyVirtualSelectedParentChainChangedResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyVirtualSelectedParentChainChangedResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[41]);
}

// ===================================================================

class VirtualSelectedParentChainChangedNotificationMessage::_Internal {
 public:
};

VirtualSelectedParentChainChangedNotificationMessage::VirtualSelectedParentChainChangedNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  removedchainblockhashes_(arena),
  acceptedtransactionids_(arena),
  addedchainblockhashes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.VirtualSelectedParentChainChangedNotificationMessage)
}
VirtualSelectedParentChainChangedNotificationMessage::VirtualSelectedParentChainChangedNotificationMessage(const VirtualSelectedParentChainChangedNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      removedchainblockhashes_(from.removedchainblockhashes_),
      acceptedtransactionids_(from.acceptedtransactionids_),
      addedchainblockhashes_(from.addedchainblockhashes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.VirtualSelectedParentChainChangedNotificationMessage)
}

inline void VirtualSelectedParentChainChangedNotificationMessage::SharedCtor() {
}

VirtualSelectedParentChainChangedNotificationMessage::~VirtualSelectedParentChainChangedNotificationMessage() {
  // @@protoc_insertion_point(destructor:protowire.VirtualSelectedParentChainChangedNotificationMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void VirtualSelectedParentChainChangedNotificationMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VirtualSelectedParentChainChangedNotificationMessage::ArenaDtor(void* object) {
  VirtualSelectedParentChainChangedNotificationMessage* _this = reinterpret_cast< VirtualSelectedParentChainChangedNotificationMessage* >(object);
  (void)_this;
}
void VirtualSelectedParentChainChangedNotificationMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VirtualSelectedParentChainChangedNotificationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VirtualSelectedParentChainChangedNotificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.VirtualSelectedParentChainChangedNotificationMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  removedchainblockhashes_.Clear();
  acceptedtransactionids_.Clear();
  addedchainblockhashes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VirtualSelectedParentChainChangedNotificationMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string removedChainBlockHashes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_removedchainblockhashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.VirtualSelectedParentChainChangedNotificationMessage.removedChainBlockHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.AcceptedTransactionIds acceptedTransactionIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_acceptedtransactionids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string addedChainBlockHashes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addedchainblockhashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.VirtualSelectedParentChainChangedNotificationMessage.addedChainBlockHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VirtualSelectedParentChainChangedNotificationMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.VirtualSelectedParentChainChangedNotificationMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string removedChainBlockHashes = 1;
  for (int i = 0, n = this->_internal_removedchainblockhashes_size(); i < n; i++) {
    const auto& s = this->_internal_removedchainblockhashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.VirtualSelectedParentChainChangedNotificationMessage.removedChainBlockHashes");
    target = stream->WriteString(1, s, target);
  }

  // repeated .protowire.AcceptedTransactionIds acceptedTransactionIds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_acceptedtransactionids_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_acceptedtransactionids(i), target, stream);
  }

  // repeated string addedChainBlockHashes = 3;
  for (int i = 0, n = this->_internal_addedchainblockhashes_size(); i < n; i++) {
    const auto& s = this->_internal_addedchainblockhashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.VirtualSelectedParentChainChangedNotificationMessage.addedChainBlockHashes");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.VirtualSelectedParentChainChangedNotificationMessage)
  return target;
}

size_t VirtualSelectedParentChainChangedNotificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.VirtualSelectedParentChainChangedNotificationMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string removedChainBlockHashes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(removedchainblockhashes_.size());
  for (int i = 0, n = removedchainblockhashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      removedchainblockhashes_.Get(i));
  }

  // repeated .protowire.AcceptedTransactionIds acceptedTransactionIds = 2;
  total_size += 1UL * this->_internal_acceptedtransactionids_size();
  for (const auto& msg : this->acceptedtransactionids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string addedChainBlockHashes = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addedchainblockhashes_.size());
  for (int i = 0, n = addedchainblockhashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addedchainblockhashes_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VirtualSelectedParentChainChangedNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VirtualSelectedParentChainChangedNotificationMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VirtualSelectedParentChainChangedNotificationMessage::GetClassData() const { return &_class_data_; }

void VirtualSelectedParentChainChangedNotificationMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VirtualSelectedParentChainChangedNotificationMessage *>(to)->MergeFrom(
      static_cast<const VirtualSelectedParentChainChangedNotificationMessage &>(from));
}


void VirtualSelectedParentChainChangedNotificationMessage::MergeFrom(const VirtualSelectedParentChainChangedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.VirtualSelectedParentChainChangedNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  removedchainblockhashes_.MergeFrom(from.removedchainblockhashes_);
  acceptedtransactionids_.MergeFrom(from.acceptedtransactionids_);
  addedchainblockhashes_.MergeFrom(from.addedchainblockhashes_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VirtualSelectedParentChainChangedNotificationMessage::CopyFrom(const VirtualSelectedParentChainChangedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.VirtualSelectedParentChainChangedNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtualSelectedParentChainChangedNotificationMessage::IsInitialized() const {
  return true;
}

void VirtualSelectedParentChainChangedNotificationMessage::InternalSwap(VirtualSelectedParentChainChangedNotificationMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  removedchainblockhashes_.InternalSwap(&other->removedchainblockhashes_);
  acceptedtransactionids_.InternalSwap(&other->acceptedtransactionids_);
  addedchainblockhashes_.InternalSwap(&other->addedchainblockhashes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VirtualSelectedParentChainChangedNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[42]);
}

// ===================================================================

class GetBlockRequestMessage::_Internal {
 public:
};

GetBlockRequestMessage::GetBlockRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlockRequestMessage)
}
GetBlockRequestMessage::GetBlockRequestMessage(const GetBlockRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hash(), 
      GetArenaForAllocation());
  }
  includetransactions_ = from.includetransactions_;
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlockRequestMessage)
}

inline void GetBlockRequestMessage::SharedCtor() {
hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
includetransactions_ = false;
}

GetBlockRequestMessage::~GetBlockRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBlockRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBlockRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBlockRequestMessage::ArenaDtor(void* object) {
  GetBlockRequestMessage* _this = reinterpret_cast< GetBlockRequestMessage* >(object);
  (void)_this;
}
void GetBlockRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBlockRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmpty();
  includetransactions_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlockRequestMessage.hash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool includeTransactions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          includetransactions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBlockRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlockRequestMessage.hash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_hash(), target);
  }

  // bool includeTransactions = 3;
  if (this->_internal_includetransactions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_includetransactions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBlockRequestMessage)
  return target;
}

size_t GetBlockRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBlockRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 1;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // bool includeTransactions = 3;
  if (this->_internal_includetransactions() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBlockRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockRequestMessage::GetClassData() const { return &_class_data_; }

void GetBlockRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBlockRequestMessage *>(to)->MergeFrom(
      static_cast<const GetBlockRequestMessage &>(from));
}


void GetBlockRequestMessage::MergeFrom(const GetBlockRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBlockRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _internal_set_hash(from._internal_hash());
  }
  if (from._internal_includetransactions() != 0) {
    _internal_set_includetransactions(from._internal_includetransactions());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockRequestMessage::CopyFrom(const GetBlockRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBlockRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockRequestMessage::IsInitialized() const {
  return true;
}

void GetBlockRequestMessage::InternalSwap(GetBlockRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &hash_, lhs_arena,
      &other->hash_, rhs_arena
  );
  swap(includetransactions_, other->includetransactions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[43]);
}

// ===================================================================

class GetBlockResponseMessage::_Internal {
 public:
  static const ::protowire::RpcBlock& block(const GetBlockResponseMessage* msg);
  static const ::protowire::RPCError& error(const GetBlockResponseMessage* msg);
};

const ::protowire::RpcBlock&
GetBlockResponseMessage::_Internal::block(const GetBlockResponseMessage* msg) {
  return *msg->block_;
}
const ::protowire::RPCError&
GetBlockResponseMessage::_Internal::error(const GetBlockResponseMessage* msg) {
  return *msg->error_;
}
GetBlockResponseMessage::GetBlockResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlockResponseMessage)
}
GetBlockResponseMessage::GetBlockResponseMessage(const GetBlockResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block()) {
    block_ = new ::protowire::RpcBlock(*from.block_);
  } else {
    block_ = nullptr;
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlockResponseMessage)
}

inline void GetBlockResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&block_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&block_)) + sizeof(error_));
}

GetBlockResponseMessage::~GetBlockResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBlockResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBlockResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete block_;
  if (this != internal_default_instance()) delete error_;
}

void GetBlockResponseMessage::ArenaDtor(void* object) {
  GetBlockResponseMessage* _this = reinterpret_cast< GetBlockResponseMessage* >(object);
  (void)_this;
}
void GetBlockResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBlockResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RpcBlock block = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBlockResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RpcBlock block = 3;
  if (this->_internal_has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::block(this), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBlockResponseMessage)
  return target;
}

size_t GetBlockResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBlockResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RpcBlock block = 3;
  if (this->_internal_has_block()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBlockResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockResponseMessage::GetClassData() const { return &_class_data_; }

void GetBlockResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBlockResponseMessage *>(to)->MergeFrom(
      static_cast<const GetBlockResponseMessage &>(from));
}


void GetBlockResponseMessage::MergeFrom(const GetBlockResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBlockResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_block()) {
    _internal_mutable_block()->::protowire::RpcBlock::MergeFrom(from._internal_block());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockResponseMessage::CopyFrom(const GetBlockResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBlockResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockResponseMessage::IsInitialized() const {
  return true;
}

void GetBlockResponseMessage::InternalSwap(GetBlockResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBlockResponseMessage, error_)
      + sizeof(GetBlockResponseMessage::error_)
      - PROTOBUF_FIELD_OFFSET(GetBlockResponseMessage, block_)>(
          reinterpret_cast<char*>(&block_),
          reinterpret_cast<char*>(&other->block_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[44]);
}

// ===================================================================

class GetSubnetworkRequestMessage::_Internal {
 public:
};

GetSubnetworkRequestMessage::GetSubnetworkRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetSubnetworkRequestMessage)
}
GetSubnetworkRequestMessage::GetSubnetworkRequestMessage(const GetSubnetworkRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subnetworkid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subnetworkid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subnetworkid().empty()) {
    subnetworkid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnetworkid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetSubnetworkRequestMessage)
}

inline void GetSubnetworkRequestMessage::SharedCtor() {
subnetworkid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subnetworkid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSubnetworkRequestMessage::~GetSubnetworkRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetSubnetworkRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSubnetworkRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  subnetworkid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSubnetworkRequestMessage::ArenaDtor(void* object) {
  GetSubnetworkRequestMessage* _this = reinterpret_cast< GetSubnetworkRequestMessage* >(object);
  (void)_this;
}
void GetSubnetworkRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSubnetworkRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSubnetworkRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetSubnetworkRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnetworkid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSubnetworkRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string subnetworkId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_subnetworkid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetSubnetworkRequestMessage.subnetworkId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSubnetworkRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetSubnetworkRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string subnetworkId = 1;
  if (!this->_internal_subnetworkid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnetworkid().data(), static_cast<int>(this->_internal_subnetworkid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetSubnetworkRequestMessage.subnetworkId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subnetworkid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetSubnetworkRequestMessage)
  return target;
}

size_t GetSubnetworkRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetSubnetworkRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subnetworkId = 1;
  if (!this->_internal_subnetworkid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnetworkid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSubnetworkRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSubnetworkRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSubnetworkRequestMessage::GetClassData() const { return &_class_data_; }

void GetSubnetworkRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetSubnetworkRequestMessage *>(to)->MergeFrom(
      static_cast<const GetSubnetworkRequestMessage &>(from));
}


void GetSubnetworkRequestMessage::MergeFrom(const GetSubnetworkRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetSubnetworkRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subnetworkid().empty()) {
    _internal_set_subnetworkid(from._internal_subnetworkid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubnetworkRequestMessage::CopyFrom(const GetSubnetworkRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetSubnetworkRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSubnetworkRequestMessage::IsInitialized() const {
  return true;
}

void GetSubnetworkRequestMessage::InternalSwap(GetSubnetworkRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &subnetworkid_, lhs_arena,
      &other->subnetworkid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSubnetworkRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[45]);
}

// ===================================================================

class GetSubnetworkResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetSubnetworkResponseMessage* msg);
};

const ::protowire::RPCError&
GetSubnetworkResponseMessage::_Internal::error(const GetSubnetworkResponseMessage* msg) {
  return *msg->error_;
}
GetSubnetworkResponseMessage::GetSubnetworkResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetSubnetworkResponseMessage)
}
GetSubnetworkResponseMessage::GetSubnetworkResponseMessage(const GetSubnetworkResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  gaslimit_ = from.gaslimit_;
  // @@protoc_insertion_point(copy_constructor:protowire.GetSubnetworkResponseMessage)
}

inline void GetSubnetworkResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gaslimit_) -
    reinterpret_cast<char*>(&error_)) + sizeof(gaslimit_));
}

GetSubnetworkResponseMessage::~GetSubnetworkResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetSubnetworkResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSubnetworkResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetSubnetworkResponseMessage::ArenaDtor(void* object) {
  GetSubnetworkResponseMessage* _this = reinterpret_cast< GetSubnetworkResponseMessage* >(object);
  (void)_this;
}
void GetSubnetworkResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSubnetworkResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSubnetworkResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetSubnetworkResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  gaslimit_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSubnetworkResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 gasLimit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          gaslimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSubnetworkResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetSubnetworkResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gasLimit = 1;
  if (this->_internal_gaslimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_gaslimit(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetSubnetworkResponseMessage)
  return target;
}

size_t GetSubnetworkResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetSubnetworkResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 gasLimit = 1;
  if (this->_internal_gaslimit() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_gaslimit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSubnetworkResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSubnetworkResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSubnetworkResponseMessage::GetClassData() const { return &_class_data_; }

void GetSubnetworkResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetSubnetworkResponseMessage *>(to)->MergeFrom(
      static_cast<const GetSubnetworkResponseMessage &>(from));
}


void GetSubnetworkResponseMessage::MergeFrom(const GetSubnetworkResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetSubnetworkResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_gaslimit() != 0) {
    _internal_set_gaslimit(from._internal_gaslimit());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubnetworkResponseMessage::CopyFrom(const GetSubnetworkResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetSubnetworkResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSubnetworkResponseMessage::IsInitialized() const {
  return true;
}

void GetSubnetworkResponseMessage::InternalSwap(GetSubnetworkResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSubnetworkResponseMessage, gaslimit_)
      + sizeof(GetSubnetworkResponseMessage::gaslimit_)
      - PROTOBUF_FIELD_OFFSET(GetSubnetworkResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSubnetworkResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[46]);
}

// ===================================================================

class GetVirtualSelectedParentChainFromBlockRequestMessage::_Internal {
 public:
};

GetVirtualSelectedParentChainFromBlockRequestMessage::GetVirtualSelectedParentChainFromBlockRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
}
GetVirtualSelectedParentChainFromBlockRequestMessage::GetVirtualSelectedParentChainFromBlockRequestMessage(const GetVirtualSelectedParentChainFromBlockRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  starthash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    starthash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starthash().empty()) {
    starthash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_starthash(), 
      GetArenaForAllocation());
  }
  includeacceptedtransactionids_ = from.includeacceptedtransactionids_;
  // @@protoc_insertion_point(copy_constructor:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
}

inline void GetVirtualSelectedParentChainFromBlockRequestMessage::SharedCtor() {
starthash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  starthash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
includeacceptedtransactionids_ = false;
}

GetVirtualSelectedParentChainFromBlockRequestMessage::~GetVirtualSelectedParentChainFromBlockRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetVirtualSelectedParentChainFromBlockRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  starthash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetVirtualSelectedParentChainFromBlockRequestMessage::ArenaDtor(void* object) {
  GetVirtualSelectedParentChainFromBlockRequestMessage* _this = reinterpret_cast< GetVirtualSelectedParentChainFromBlockRequestMessage* >(object);
  (void)_this;
}
void GetVirtualSelectedParentChainFromBlockRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVirtualSelectedParentChainFromBlockRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVirtualSelectedParentChainFromBlockRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  starthash_.ClearToEmpty();
  includeacceptedtransactionids_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualSelectedParentChainFromBlockRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string startHash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starthash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetVirtualSelectedParentChainFromBlockRequestMessage.startHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool includeAcceptedTransactionIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          includeacceptedtransactionids_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVirtualSelectedParentChainFromBlockRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string startHash = 1;
  if (!this->_internal_starthash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starthash().data(), static_cast<int>(this->_internal_starthash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetVirtualSelectedParentChainFromBlockRequestMessage.startHash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starthash(), target);
  }

  // bool includeAcceptedTransactionIds = 2;
  if (this->_internal_includeacceptedtransactionids() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_includeacceptedtransactionids(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
  return target;
}

size_t GetVirtualSelectedParentChainFromBlockRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string startHash = 1;
  if (!this->_internal_starthash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starthash());
  }

  // bool includeAcceptedTransactionIds = 2;
  if (this->_internal_includeacceptedtransactionids() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtualSelectedParentChainFromBlockRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVirtualSelectedParentChainFromBlockRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtualSelectedParentChainFromBlockRequestMessage::GetClassData() const { return &_class_data_; }

void GetVirtualSelectedParentChainFromBlockRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVirtualSelectedParentChainFromBlockRequestMessage *>(to)->MergeFrom(
      static_cast<const GetVirtualSelectedParentChainFromBlockRequestMessage &>(from));
}


void GetVirtualSelectedParentChainFromBlockRequestMessage::MergeFrom(const GetVirtualSelectedParentChainFromBlockRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starthash().empty()) {
    _internal_set_starthash(from._internal_starthash());
  }
  if (from._internal_includeacceptedtransactionids() != 0) {
    _internal_set_includeacceptedtransactionids(from._internal_includeacceptedtransactionids());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVirtualSelectedParentChainFromBlockRequestMessage::CopyFrom(const GetVirtualSelectedParentChainFromBlockRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetVirtualSelectedParentChainFromBlockRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualSelectedParentChainFromBlockRequestMessage::IsInitialized() const {
  return true;
}

void GetVirtualSelectedParentChainFromBlockRequestMessage::InternalSwap(GetVirtualSelectedParentChainFromBlockRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &starthash_, lhs_arena,
      &other->starthash_, rhs_arena
  );
  swap(includeacceptedtransactionids_, other->includeacceptedtransactionids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualSelectedParentChainFromBlockRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[47]);
}

// ===================================================================

class AcceptedTransactionIds::_Internal {
 public:
};

AcceptedTransactionIds::AcceptedTransactionIds(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  acceptedtransactionids_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.AcceptedTransactionIds)
}
AcceptedTransactionIds::AcceptedTransactionIds(const AcceptedTransactionIds& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      acceptedtransactionids_(from.acceptedtransactionids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  acceptingblockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    acceptingblockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_acceptingblockhash().empty()) {
    acceptingblockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_acceptingblockhash(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.AcceptedTransactionIds)
}

inline void AcceptedTransactionIds::SharedCtor() {
acceptingblockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  acceptingblockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AcceptedTransactionIds::~AcceptedTransactionIds() {
  // @@protoc_insertion_point(destructor:protowire.AcceptedTransactionIds)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AcceptedTransactionIds::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  acceptingblockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AcceptedTransactionIds::ArenaDtor(void* object) {
  AcceptedTransactionIds* _this = reinterpret_cast< AcceptedTransactionIds* >(object);
  (void)_this;
}
void AcceptedTransactionIds::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AcceptedTransactionIds::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AcceptedTransactionIds::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.AcceptedTransactionIds)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acceptedtransactionids_.Clear();
  acceptingblockhash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AcceptedTransactionIds::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string acceptingBlockHash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_acceptingblockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.AcceptedTransactionIds.acceptingBlockHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string acceptedTransactionIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_acceptedtransactionids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.AcceptedTransactionIds.acceptedTransactionIds"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AcceptedTransactionIds::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.AcceptedTransactionIds)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string acceptingBlockHash = 1;
  if (!this->_internal_acceptingblockhash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_acceptingblockhash().data(), static_cast<int>(this->_internal_acceptingblockhash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.AcceptedTransactionIds.acceptingBlockHash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_acceptingblockhash(), target);
  }

  // repeated string acceptedTransactionIds = 2;
  for (int i = 0, n = this->_internal_acceptedtransactionids_size(); i < n; i++) {
    const auto& s = this->_internal_acceptedtransactionids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.AcceptedTransactionIds.acceptedTransactionIds");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.AcceptedTransactionIds)
  return target;
}

size_t AcceptedTransactionIds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.AcceptedTransactionIds)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string acceptedTransactionIds = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(acceptedtransactionids_.size());
  for (int i = 0, n = acceptedtransactionids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      acceptedtransactionids_.Get(i));
  }

  // string acceptingBlockHash = 1;
  if (!this->_internal_acceptingblockhash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_acceptingblockhash());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AcceptedTransactionIds::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AcceptedTransactionIds::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AcceptedTransactionIds::GetClassData() const { return &_class_data_; }

void AcceptedTransactionIds::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AcceptedTransactionIds *>(to)->MergeFrom(
      static_cast<const AcceptedTransactionIds &>(from));
}


void AcceptedTransactionIds::MergeFrom(const AcceptedTransactionIds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.AcceptedTransactionIds)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  acceptedtransactionids_.MergeFrom(from.acceptedtransactionids_);
  if (!from._internal_acceptingblockhash().empty()) {
    _internal_set_acceptingblockhash(from._internal_acceptingblockhash());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AcceptedTransactionIds::CopyFrom(const AcceptedTransactionIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.AcceptedTransactionIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptedTransactionIds::IsInitialized() const {
  return true;
}

void AcceptedTransactionIds::InternalSwap(AcceptedTransactionIds* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  acceptedtransactionids_.InternalSwap(&other->acceptedtransactionids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &acceptingblockhash_, lhs_arena,
      &other->acceptingblockhash_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AcceptedTransactionIds::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[48]);
}

// ===================================================================

class GetVirtualSelectedParentChainFromBlockResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetVirtualSelectedParentChainFromBlockResponseMessage* msg);
};

const ::protowire::RPCError&
GetVirtualSelectedParentChainFromBlockResponseMessage::_Internal::error(const GetVirtualSelectedParentChainFromBlockResponseMessage* msg) {
  return *msg->error_;
}
GetVirtualSelectedParentChainFromBlockResponseMessage::GetVirtualSelectedParentChainFromBlockResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  removedchainblockhashes_(arena),
  acceptedtransactionids_(arena),
  addedchainblockhashes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
}
GetVirtualSelectedParentChainFromBlockResponseMessage::GetVirtualSelectedParentChainFromBlockResponseMessage(const GetVirtualSelectedParentChainFromBlockResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      removedchainblockhashes_(from.removedchainblockhashes_),
      acceptedtransactionids_(from.acceptedtransactionids_),
      addedchainblockhashes_(from.addedchainblockhashes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
}

inline void GetVirtualSelectedParentChainFromBlockResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetVirtualSelectedParentChainFromBlockResponseMessage::~GetVirtualSelectedParentChainFromBlockResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetVirtualSelectedParentChainFromBlockResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetVirtualSelectedParentChainFromBlockResponseMessage::ArenaDtor(void* object) {
  GetVirtualSelectedParentChainFromBlockResponseMessage* _this = reinterpret_cast< GetVirtualSelectedParentChainFromBlockResponseMessage* >(object);
  (void)_this;
}
void GetVirtualSelectedParentChainFromBlockResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVirtualSelectedParentChainFromBlockResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVirtualSelectedParentChainFromBlockResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  removedchainblockhashes_.Clear();
  acceptedtransactionids_.Clear();
  addedchainblockhashes_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualSelectedParentChainFromBlockResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string removedChainBlockHashes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_removedchainblockhashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetVirtualSelectedParentChainFromBlockResponseMessage.removedChainBlockHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.AcceptedTransactionIds acceptedTransactionIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_acceptedtransactionids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string addedChainBlockHashes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addedchainblockhashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetVirtualSelectedParentChainFromBlockResponseMessage.addedChainBlockHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVirtualSelectedParentChainFromBlockResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string removedChainBlockHashes = 1;
  for (int i = 0, n = this->_internal_removedchainblockhashes_size(); i < n; i++) {
    const auto& s = this->_internal_removedchainblockhashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetVirtualSelectedParentChainFromBlockResponseMessage.removedChainBlockHashes");
    target = stream->WriteString(1, s, target);
  }

  // repeated .protowire.AcceptedTransactionIds acceptedTransactionIds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_acceptedtransactionids_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_acceptedtransactionids(i), target, stream);
  }

  // repeated string addedChainBlockHashes = 3;
  for (int i = 0, n = this->_internal_addedchainblockhashes_size(); i < n; i++) {
    const auto& s = this->_internal_addedchainblockhashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetVirtualSelectedParentChainFromBlockResponseMessage.addedChainBlockHashes");
    target = stream->WriteString(3, s, target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
  return target;
}

size_t GetVirtualSelectedParentChainFromBlockResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string removedChainBlockHashes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(removedchainblockhashes_.size());
  for (int i = 0, n = removedchainblockhashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      removedchainblockhashes_.Get(i));
  }

  // repeated .protowire.AcceptedTransactionIds acceptedTransactionIds = 2;
  total_size += 1UL * this->_internal_acceptedtransactionids_size();
  for (const auto& msg : this->acceptedtransactionids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string addedChainBlockHashes = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addedchainblockhashes_.size());
  for (int i = 0, n = addedchainblockhashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addedchainblockhashes_.Get(i));
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtualSelectedParentChainFromBlockResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVirtualSelectedParentChainFromBlockResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtualSelectedParentChainFromBlockResponseMessage::GetClassData() const { return &_class_data_; }

void GetVirtualSelectedParentChainFromBlockResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVirtualSelectedParentChainFromBlockResponseMessage *>(to)->MergeFrom(
      static_cast<const GetVirtualSelectedParentChainFromBlockResponseMessage &>(from));
}


void GetVirtualSelectedParentChainFromBlockResponseMessage::MergeFrom(const GetVirtualSelectedParentChainFromBlockResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  removedchainblockhashes_.MergeFrom(from.removedchainblockhashes_);
  acceptedtransactionids_.MergeFrom(from.acceptedtransactionids_);
  addedchainblockhashes_.MergeFrom(from.addedchainblockhashes_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVirtualSelectedParentChainFromBlockResponseMessage::CopyFrom(const GetVirtualSelectedParentChainFromBlockResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetVirtualSelectedParentChainFromBlockResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualSelectedParentChainFromBlockResponseMessage::IsInitialized() const {
  return true;
}

void GetVirtualSelectedParentChainFromBlockResponseMessage::InternalSwap(GetVirtualSelectedParentChainFromBlockResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  removedchainblockhashes_.InternalSwap(&other->removedchainblockhashes_);
  acceptedtransactionids_.InternalSwap(&other->acceptedtransactionids_);
  addedchainblockhashes_.InternalSwap(&other->addedchainblockhashes_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualSelectedParentChainFromBlockResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[49]);
}

// ===================================================================

class GetBlocksRequestMessage::_Internal {
 public:
};

GetBlocksRequestMessage::GetBlocksRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlocksRequestMessage)
}
GetBlocksRequestMessage::GetBlocksRequestMessage(const GetBlocksRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  lowhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    lowhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lowhash().empty()) {
    lowhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lowhash(), 
      GetArenaForAllocation());
  }
  ::memcpy(&includeblocks_, &from.includeblocks_,
    static_cast<size_t>(reinterpret_cast<char*>(&includetransactions_) -
    reinterpret_cast<char*>(&includeblocks_)) + sizeof(includetransactions_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlocksRequestMessage)
}

inline void GetBlocksRequestMessage::SharedCtor() {
lowhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  lowhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&includeblocks_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&includetransactions_) -
    reinterpret_cast<char*>(&includeblocks_)) + sizeof(includetransactions_));
}

GetBlocksRequestMessage::~GetBlocksRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBlocksRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBlocksRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  lowhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBlocksRequestMessage::ArenaDtor(void* object) {
  GetBlocksRequestMessage* _this = reinterpret_cast< GetBlocksRequestMessage* >(object);
  (void)_this;
}
void GetBlocksRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlocksRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlocksRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBlocksRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lowhash_.ClearToEmpty();
  ::memset(&includeblocks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&includetransactions_) -
      reinterpret_cast<char*>(&includeblocks_)) + sizeof(includetransactions_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlocksRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string lowHash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_lowhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlocksRequestMessage.lowHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool includeBlocks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          includeblocks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool includeTransactions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          includetransactions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlocksRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBlocksRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string lowHash = 1;
  if (!this->_internal_lowhash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lowhash().data(), static_cast<int>(this->_internal_lowhash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlocksRequestMessage.lowHash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_lowhash(), target);
  }

  // bool includeBlocks = 2;
  if (this->_internal_includeblocks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_includeblocks(), target);
  }

  // bool includeTransactions = 3;
  if (this->_internal_includetransactions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_includetransactions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBlocksRequestMessage)
  return target;
}

size_t GetBlocksRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBlocksRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string lowHash = 1;
  if (!this->_internal_lowhash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lowhash());
  }

  // bool includeBlocks = 2;
  if (this->_internal_includeblocks() != 0) {
    total_size += 1 + 1;
  }

  // bool includeTransactions = 3;
  if (this->_internal_includetransactions() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlocksRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBlocksRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlocksRequestMessage::GetClassData() const { return &_class_data_; }

void GetBlocksRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBlocksRequestMessage *>(to)->MergeFrom(
      static_cast<const GetBlocksRequestMessage &>(from));
}


void GetBlocksRequestMessage::MergeFrom(const GetBlocksRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBlocksRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lowhash().empty()) {
    _internal_set_lowhash(from._internal_lowhash());
  }
  if (from._internal_includeblocks() != 0) {
    _internal_set_includeblocks(from._internal_includeblocks());
  }
  if (from._internal_includetransactions() != 0) {
    _internal_set_includetransactions(from._internal_includetransactions());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlocksRequestMessage::CopyFrom(const GetBlocksRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBlocksRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlocksRequestMessage::IsInitialized() const {
  return true;
}

void GetBlocksRequestMessage::InternalSwap(GetBlocksRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lowhash_, lhs_arena,
      &other->lowhash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBlocksRequestMessage, includetransactions_)
      + sizeof(GetBlocksRequestMessage::includetransactions_)
      - PROTOBUF_FIELD_OFFSET(GetBlocksRequestMessage, includeblocks_)>(
          reinterpret_cast<char*>(&includeblocks_),
          reinterpret_cast<char*>(&other->includeblocks_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlocksRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[50]);
}

// ===================================================================

class GetBlocksResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetBlocksResponseMessage* msg);
};

const ::protowire::RPCError&
GetBlocksResponseMessage::_Internal::error(const GetBlocksResponseMessage* msg) {
  return *msg->error_;
}
GetBlocksResponseMessage::GetBlocksResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  blocks_(arena),
  blockhashes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlocksResponseMessage)
}
GetBlocksResponseMessage::GetBlocksResponseMessage(const GetBlocksResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      blocks_(from.blocks_),
      blockhashes_(from.blockhashes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlocksResponseMessage)
}

inline void GetBlocksResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetBlocksResponseMessage::~GetBlocksResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBlocksResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBlocksResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetBlocksResponseMessage::ArenaDtor(void* object) {
  GetBlocksResponseMessage* _this = reinterpret_cast< GetBlocksResponseMessage* >(object);
  (void)_this;
}
void GetBlocksResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlocksResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlocksResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBlocksResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blocks_.Clear();
  blockhashes_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlocksResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protowire.RpcBlock blocks = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_blocks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string blockHashes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blockhashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlocksResponseMessage.blockHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlocksResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBlocksResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protowire.RpcBlock blocks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_blocks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_blocks(i), target, stream);
  }

  // repeated string blockHashes = 4;
  for (int i = 0, n = this->_internal_blockhashes_size(); i < n; i++) {
    const auto& s = this->_internal_blockhashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlocksResponseMessage.blockHashes");
    target = stream->WriteString(4, s, target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBlocksResponseMessage)
  return target;
}

size_t GetBlocksResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBlocksResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.RpcBlock blocks = 3;
  total_size += 1UL * this->_internal_blocks_size();
  for (const auto& msg : this->blocks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string blockHashes = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(blockhashes_.size());
  for (int i = 0, n = blockhashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      blockhashes_.Get(i));
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlocksResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBlocksResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlocksResponseMessage::GetClassData() const { return &_class_data_; }

void GetBlocksResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBlocksResponseMessage *>(to)->MergeFrom(
      static_cast<const GetBlocksResponseMessage &>(from));
}


void GetBlocksResponseMessage::MergeFrom(const GetBlocksResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBlocksResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
  blockhashes_.MergeFrom(from.blockhashes_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlocksResponseMessage::CopyFrom(const GetBlocksResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBlocksResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlocksResponseMessage::IsInitialized() const {
  return true;
}

void GetBlocksResponseMessage::InternalSwap(GetBlocksResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  blocks_.InternalSwap(&other->blocks_);
  blockhashes_.InternalSwap(&other->blockhashes_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlocksResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[51]);
}

// ===================================================================

class GetBlockCountRequestMessage::_Internal {
 public:
};

GetBlockCountRequestMessage::GetBlockCountRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlockCountRequestMessage)
}
GetBlockCountRequestMessage::GetBlockCountRequestMessage(const GetBlockCountRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlockCountRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockCountRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockCountRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetBlockCountRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[52]);
}

// ===================================================================

class GetBlockCountResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetBlockCountResponseMessage* msg);
};

const ::protowire::RPCError&
GetBlockCountResponseMessage::_Internal::error(const GetBlockCountResponseMessage* msg) {
  return *msg->error_;
}
GetBlockCountResponseMessage::GetBlockCountResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlockCountResponseMessage)
}
GetBlockCountResponseMessage::GetBlockCountResponseMessage(const GetBlockCountResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  ::memcpy(&blockcount_, &from.blockcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&headercount_) -
    reinterpret_cast<char*>(&blockcount_)) + sizeof(headercount_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlockCountResponseMessage)
}

inline void GetBlockCountResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&headercount_) -
    reinterpret_cast<char*>(&error_)) + sizeof(headercount_));
}

GetBlockCountResponseMessage::~GetBlockCountResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBlockCountResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBlockCountResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetBlockCountResponseMessage::ArenaDtor(void* object) {
  GetBlockCountResponseMessage* _this = reinterpret_cast< GetBlockCountResponseMessage* >(object);
  (void)_this;
}
void GetBlockCountResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockCountResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockCountResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBlockCountResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  ::memset(&blockcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&headercount_) -
      reinterpret_cast<char*>(&blockcount_)) + sizeof(headercount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockCountResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 blockCount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          blockcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 headerCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          headercount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockCountResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBlockCountResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 blockCount = 1;
  if (this->_internal_blockcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_blockcount(), target);
  }

  // uint64 headerCount = 2;
  if (this->_internal_headercount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_headercount(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBlockCountResponseMessage)
  return target;
}

size_t GetBlockCountResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBlockCountResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 blockCount = 1;
  if (this->_internal_blockcount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_blockcount());
  }

  // uint64 headerCount = 2;
  if (this->_internal_headercount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_headercount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockCountResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBlockCountResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockCountResponseMessage::GetClassData() const { return &_class_data_; }

void GetBlockCountResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBlockCountResponseMessage *>(to)->MergeFrom(
      static_cast<const GetBlockCountResponseMessage &>(from));
}


void GetBlockCountResponseMessage::MergeFrom(const GetBlockCountResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBlockCountResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_blockcount() != 0) {
    _internal_set_blockcount(from._internal_blockcount());
  }
  if (from._internal_headercount() != 0) {
    _internal_set_headercount(from._internal_headercount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockCountResponseMessage::CopyFrom(const GetBlockCountResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBlockCountResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockCountResponseMessage::IsInitialized() const {
  return true;
}

void GetBlockCountResponseMessage::InternalSwap(GetBlockCountResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBlockCountResponseMessage, headercount_)
      + sizeof(GetBlockCountResponseMessage::headercount_)
      - PROTOBUF_FIELD_OFFSET(GetBlockCountResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockCountResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[53]);
}

// ===================================================================

class GetBlockDagInfoRequestMessage::_Internal {
 public:
};

GetBlockDagInfoRequestMessage::GetBlockDagInfoRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlockDagInfoRequestMessage)
}
GetBlockDagInfoRequestMessage::GetBlockDagInfoRequestMessage(const GetBlockDagInfoRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlockDagInfoRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockDagInfoRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockDagInfoRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetBlockDagInfoRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[54]);
}

// ===================================================================

class GetBlockDagInfoResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetBlockDagInfoResponseMessage* msg);
};

const ::protowire::RPCError&
GetBlockDagInfoResponseMessage::_Internal::error(const GetBlockDagInfoResponseMessage* msg) {
  return *msg->error_;
}
GetBlockDagInfoResponseMessage::GetBlockDagInfoResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  tiphashes_(arena),
  virtualparenthashes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBlockDagInfoResponseMessage)
}
GetBlockDagInfoResponseMessage::GetBlockDagInfoResponseMessage(const GetBlockDagInfoResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tiphashes_(from.tiphashes_),
      virtualparenthashes_(from.virtualparenthashes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  networkname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    networkname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_networkname().empty()) {
    networkname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_networkname(), 
      GetArenaForAllocation());
  }
  pruningpointhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pruningpointhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pruningpointhash().empty()) {
    pruningpointhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pruningpointhash(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  ::memcpy(&blockcount_, &from.blockcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&virtualdaascore_) -
    reinterpret_cast<char*>(&blockcount_)) + sizeof(virtualdaascore_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetBlockDagInfoResponseMessage)
}

inline void GetBlockDagInfoResponseMessage::SharedCtor() {
networkname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  networkname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pruningpointhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pruningpointhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&virtualdaascore_) -
    reinterpret_cast<char*>(&error_)) + sizeof(virtualdaascore_));
}

GetBlockDagInfoResponseMessage::~GetBlockDagInfoResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBlockDagInfoResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBlockDagInfoResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  networkname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pruningpointhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void GetBlockDagInfoResponseMessage::ArenaDtor(void* object) {
  GetBlockDagInfoResponseMessage* _this = reinterpret_cast< GetBlockDagInfoResponseMessage* >(object);
  (void)_this;
}
void GetBlockDagInfoResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockDagInfoResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockDagInfoResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBlockDagInfoResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tiphashes_.Clear();
  virtualparenthashes_.Clear();
  networkname_.ClearToEmpty();
  pruningpointhash_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  ::memset(&blockcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&virtualdaascore_) -
      reinterpret_cast<char*>(&blockcount_)) + sizeof(virtualdaascore_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockDagInfoResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string networkName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_networkname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlockDagInfoResponseMessage.networkName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 blockCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          blockcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 headerCount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          headercount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string tipHashes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tiphashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlockDagInfoResponseMessage.tipHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // double difficulty = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          difficulty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // int64 pastMedianTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          pastmediantime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string virtualParentHashes = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_virtualparenthashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlockDagInfoResponseMessage.virtualParentHashes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string pruningPointHash = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_pruningpointhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBlockDagInfoResponseMessage.pruningPointHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 virtualDaaScore = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          virtualdaascore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockDagInfoResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBlockDagInfoResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string networkName = 1;
  if (!this->_internal_networkname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_networkname().data(), static_cast<int>(this->_internal_networkname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlockDagInfoResponseMessage.networkName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_networkname(), target);
  }

  // uint64 blockCount = 2;
  if (this->_internal_blockcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_blockcount(), target);
  }

  // uint64 headerCount = 3;
  if (this->_internal_headercount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_headercount(), target);
  }

  // repeated string tipHashes = 4;
  for (int i = 0, n = this->_internal_tiphashes_size(); i < n; i++) {
    const auto& s = this->_internal_tiphashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlockDagInfoResponseMessage.tipHashes");
    target = stream->WriteString(4, s, target);
  }

  // double difficulty = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_difficulty = this->_internal_difficulty();
  uint64_t raw_difficulty;
  memcpy(&raw_difficulty, &tmp_difficulty, sizeof(tmp_difficulty));
  if (raw_difficulty != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_difficulty(), target);
  }

  // int64 pastMedianTime = 6;
  if (this->_internal_pastmediantime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_pastmediantime(), target);
  }

  // repeated string virtualParentHashes = 7;
  for (int i = 0, n = this->_internal_virtualparenthashes_size(); i < n; i++) {
    const auto& s = this->_internal_virtualparenthashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlockDagInfoResponseMessage.virtualParentHashes");
    target = stream->WriteString(7, s, target);
  }

  // string pruningPointHash = 8;
  if (!this->_internal_pruningpointhash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pruningpointhash().data(), static_cast<int>(this->_internal_pruningpointhash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBlockDagInfoResponseMessage.pruningPointHash");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_pruningpointhash(), target);
  }

  // uint64 virtualDaaScore = 9;
  if (this->_internal_virtualdaascore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_virtualdaascore(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBlockDagInfoResponseMessage)
  return target;
}

size_t GetBlockDagInfoResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBlockDagInfoResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tipHashes = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tiphashes_.size());
  for (int i = 0, n = tiphashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tiphashes_.Get(i));
  }

  // repeated string virtualParentHashes = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(virtualparenthashes_.size());
  for (int i = 0, n = virtualparenthashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      virtualparenthashes_.Get(i));
  }

  // string networkName = 1;
  if (!this->_internal_networkname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_networkname());
  }

  // string pruningPointHash = 8;
  if (!this->_internal_pruningpointhash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pruningpointhash());
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 blockCount = 2;
  if (this->_internal_blockcount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_blockcount());
  }

  // uint64 headerCount = 3;
  if (this->_internal_headercount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_headercount());
  }

  // double difficulty = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_difficulty = this->_internal_difficulty();
  uint64_t raw_difficulty;
  memcpy(&raw_difficulty, &tmp_difficulty, sizeof(tmp_difficulty));
  if (raw_difficulty != 0) {
    total_size += 1 + 8;
  }

  // int64 pastMedianTime = 6;
  if (this->_internal_pastmediantime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_pastmediantime());
  }

  // uint64 virtualDaaScore = 9;
  if (this->_internal_virtualdaascore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_virtualdaascore());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockDagInfoResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBlockDagInfoResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockDagInfoResponseMessage::GetClassData() const { return &_class_data_; }

void GetBlockDagInfoResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBlockDagInfoResponseMessage *>(to)->MergeFrom(
      static_cast<const GetBlockDagInfoResponseMessage &>(from));
}


void GetBlockDagInfoResponseMessage::MergeFrom(const GetBlockDagInfoResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBlockDagInfoResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  tiphashes_.MergeFrom(from.tiphashes_);
  virtualparenthashes_.MergeFrom(from.virtualparenthashes_);
  if (!from._internal_networkname().empty()) {
    _internal_set_networkname(from._internal_networkname());
  }
  if (!from._internal_pruningpointhash().empty()) {
    _internal_set_pruningpointhash(from._internal_pruningpointhash());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_blockcount() != 0) {
    _internal_set_blockcount(from._internal_blockcount());
  }
  if (from._internal_headercount() != 0) {
    _internal_set_headercount(from._internal_headercount());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_difficulty = from._internal_difficulty();
  uint64_t raw_difficulty;
  memcpy(&raw_difficulty, &tmp_difficulty, sizeof(tmp_difficulty));
  if (raw_difficulty != 0) {
    _internal_set_difficulty(from._internal_difficulty());
  }
  if (from._internal_pastmediantime() != 0) {
    _internal_set_pastmediantime(from._internal_pastmediantime());
  }
  if (from._internal_virtualdaascore() != 0) {
    _internal_set_virtualdaascore(from._internal_virtualdaascore());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockDagInfoResponseMessage::CopyFrom(const GetBlockDagInfoResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBlockDagInfoResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockDagInfoResponseMessage::IsInitialized() const {
  return true;
}

void GetBlockDagInfoResponseMessage::InternalSwap(GetBlockDagInfoResponseMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  tiphashes_.InternalSwap(&other->tiphashes_);
  virtualparenthashes_.InternalSwap(&other->virtualparenthashes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &networkname_, lhs_arena,
      &other->networkname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pruningpointhash_, lhs_arena,
      &other->pruningpointhash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBlockDagInfoResponseMessage, virtualdaascore_)
      + sizeof(GetBlockDagInfoResponseMessage::virtualdaascore_)
      - PROTOBUF_FIELD_OFFSET(GetBlockDagInfoResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockDagInfoResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[55]);
}

// ===================================================================

class ResolveFinalityConflictRequestMessage::_Internal {
 public:
};

ResolveFinalityConflictRequestMessage::ResolveFinalityConflictRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.ResolveFinalityConflictRequestMessage)
}
ResolveFinalityConflictRequestMessage::ResolveFinalityConflictRequestMessage(const ResolveFinalityConflictRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  finalityblockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    finalityblockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_finalityblockhash().empty()) {
    finalityblockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_finalityblockhash(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.ResolveFinalityConflictRequestMessage)
}

inline void ResolveFinalityConflictRequestMessage::SharedCtor() {
finalityblockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  finalityblockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResolveFinalityConflictRequestMessage::~ResolveFinalityConflictRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.ResolveFinalityConflictRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResolveFinalityConflictRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  finalityblockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResolveFinalityConflictRequestMessage::ArenaDtor(void* object) {
  ResolveFinalityConflictRequestMessage* _this = reinterpret_cast< ResolveFinalityConflictRequestMessage* >(object);
  (void)_this;
}
void ResolveFinalityConflictRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResolveFinalityConflictRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResolveFinalityConflictRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.ResolveFinalityConflictRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  finalityblockhash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResolveFinalityConflictRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string finalityBlockHash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_finalityblockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.ResolveFinalityConflictRequestMessage.finalityBlockHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResolveFinalityConflictRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.ResolveFinalityConflictRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string finalityBlockHash = 1;
  if (!this->_internal_finalityblockhash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_finalityblockhash().data(), static_cast<int>(this->_internal_finalityblockhash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.ResolveFinalityConflictRequestMessage.finalityBlockHash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_finalityblockhash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.ResolveFinalityConflictRequestMessage)
  return target;
}

size_t ResolveFinalityConflictRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.ResolveFinalityConflictRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string finalityBlockHash = 1;
  if (!this->_internal_finalityblockhash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_finalityblockhash());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResolveFinalityConflictRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResolveFinalityConflictRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResolveFinalityConflictRequestMessage::GetClassData() const { return &_class_data_; }

void ResolveFinalityConflictRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResolveFinalityConflictRequestMessage *>(to)->MergeFrom(
      static_cast<const ResolveFinalityConflictRequestMessage &>(from));
}


void ResolveFinalityConflictRequestMessage::MergeFrom(const ResolveFinalityConflictRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.ResolveFinalityConflictRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_finalityblockhash().empty()) {
    _internal_set_finalityblockhash(from._internal_finalityblockhash());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResolveFinalityConflictRequestMessage::CopyFrom(const ResolveFinalityConflictRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.ResolveFinalityConflictRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolveFinalityConflictRequestMessage::IsInitialized() const {
  return true;
}

void ResolveFinalityConflictRequestMessage::InternalSwap(ResolveFinalityConflictRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &finalityblockhash_, lhs_arena,
      &other->finalityblockhash_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResolveFinalityConflictRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[56]);
}

// ===================================================================

class ResolveFinalityConflictResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const ResolveFinalityConflictResponseMessage* msg);
};

const ::protowire::RPCError&
ResolveFinalityConflictResponseMessage::_Internal::error(const ResolveFinalityConflictResponseMessage* msg) {
  return *msg->error_;
}
ResolveFinalityConflictResponseMessage::ResolveFinalityConflictResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.ResolveFinalityConflictResponseMessage)
}
ResolveFinalityConflictResponseMessage::ResolveFinalityConflictResponseMessage(const ResolveFinalityConflictResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.ResolveFinalityConflictResponseMessage)
}

inline void ResolveFinalityConflictResponseMessage::SharedCtor() {
error_ = nullptr;
}

ResolveFinalityConflictResponseMessage::~ResolveFinalityConflictResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.ResolveFinalityConflictResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResolveFinalityConflictResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void ResolveFinalityConflictResponseMessage::ArenaDtor(void* object) {
  ResolveFinalityConflictResponseMessage* _this = reinterpret_cast< ResolveFinalityConflictResponseMessage* >(object);
  (void)_this;
}
void ResolveFinalityConflictResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResolveFinalityConflictResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResolveFinalityConflictResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.ResolveFinalityConflictResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResolveFinalityConflictResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResolveFinalityConflictResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.ResolveFinalityConflictResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.ResolveFinalityConflictResponseMessage)
  return target;
}

size_t ResolveFinalityConflictResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.ResolveFinalityConflictResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResolveFinalityConflictResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResolveFinalityConflictResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResolveFinalityConflictResponseMessage::GetClassData() const { return &_class_data_; }

void ResolveFinalityConflictResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResolveFinalityConflictResponseMessage *>(to)->MergeFrom(
      static_cast<const ResolveFinalityConflictResponseMessage &>(from));
}


void ResolveFinalityConflictResponseMessage::MergeFrom(const ResolveFinalityConflictResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.ResolveFinalityConflictResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResolveFinalityConflictResponseMessage::CopyFrom(const ResolveFinalityConflictResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.ResolveFinalityConflictResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolveFinalityConflictResponseMessage::IsInitialized() const {
  return true;
}

void ResolveFinalityConflictResponseMessage::InternalSwap(ResolveFinalityConflictResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResolveFinalityConflictResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[57]);
}

// ===================================================================

class NotifyFinalityConflictsRequestMessage::_Internal {
 public:
};

NotifyFinalityConflictsRequestMessage::NotifyFinalityConflictsRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyFinalityConflictsRequestMessage)
}
NotifyFinalityConflictsRequestMessage::NotifyFinalityConflictsRequestMessage(const NotifyFinalityConflictsRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyFinalityConflictsRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyFinalityConflictsRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyFinalityConflictsRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyFinalityConflictsRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[58]);
}

// ===================================================================

class NotifyFinalityConflictsResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const NotifyFinalityConflictsResponseMessage* msg);
};

const ::protowire::RPCError&
NotifyFinalityConflictsResponseMessage::_Internal::error(const NotifyFinalityConflictsResponseMessage* msg) {
  return *msg->error_;
}
NotifyFinalityConflictsResponseMessage::NotifyFinalityConflictsResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyFinalityConflictsResponseMessage)
}
NotifyFinalityConflictsResponseMessage::NotifyFinalityConflictsResponseMessage(const NotifyFinalityConflictsResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyFinalityConflictsResponseMessage)
}

inline void NotifyFinalityConflictsResponseMessage::SharedCtor() {
error_ = nullptr;
}

NotifyFinalityConflictsResponseMessage::~NotifyFinalityConflictsResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyFinalityConflictsResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyFinalityConflictsResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void NotifyFinalityConflictsResponseMessage::ArenaDtor(void* object) {
  NotifyFinalityConflictsResponseMessage* _this = reinterpret_cast< NotifyFinalityConflictsResponseMessage* >(object);
  (void)_this;
}
void NotifyFinalityConflictsResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyFinalityConflictsResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyFinalityConflictsResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyFinalityConflictsResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyFinalityConflictsResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyFinalityConflictsResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyFinalityConflictsResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyFinalityConflictsResponseMessage)
  return target;
}

size_t NotifyFinalityConflictsResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyFinalityConflictsResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyFinalityConflictsResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyFinalityConflictsResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyFinalityConflictsResponseMessage::GetClassData() const { return &_class_data_; }

void NotifyFinalityConflictsResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyFinalityConflictsResponseMessage *>(to)->MergeFrom(
      static_cast<const NotifyFinalityConflictsResponseMessage &>(from));
}


void NotifyFinalityConflictsResponseMessage::MergeFrom(const NotifyFinalityConflictsResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyFinalityConflictsResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyFinalityConflictsResponseMessage::CopyFrom(const NotifyFinalityConflictsResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyFinalityConflictsResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyFinalityConflictsResponseMessage::IsInitialized() const {
  return true;
}

void NotifyFinalityConflictsResponseMessage::InternalSwap(NotifyFinalityConflictsResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyFinalityConflictsResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[59]);
}

// ===================================================================

class FinalityConflictNotificationMessage::_Internal {
 public:
};

FinalityConflictNotificationMessage::FinalityConflictNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.FinalityConflictNotificationMessage)
}
FinalityConflictNotificationMessage::FinalityConflictNotificationMessage(const FinalityConflictNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  violatingblockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    violatingblockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_violatingblockhash().empty()) {
    violatingblockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_violatingblockhash(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.FinalityConflictNotificationMessage)
}

inline void FinalityConflictNotificationMessage::SharedCtor() {
violatingblockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  violatingblockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FinalityConflictNotificationMessage::~FinalityConflictNotificationMessage() {
  // @@protoc_insertion_point(destructor:protowire.FinalityConflictNotificationMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FinalityConflictNotificationMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  violatingblockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FinalityConflictNotificationMessage::ArenaDtor(void* object) {
  FinalityConflictNotificationMessage* _this = reinterpret_cast< FinalityConflictNotificationMessage* >(object);
  (void)_this;
}
void FinalityConflictNotificationMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FinalityConflictNotificationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FinalityConflictNotificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.FinalityConflictNotificationMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  violatingblockhash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FinalityConflictNotificationMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string violatingBlockHash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_violatingblockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.FinalityConflictNotificationMessage.violatingBlockHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FinalityConflictNotificationMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.FinalityConflictNotificationMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string violatingBlockHash = 1;
  if (!this->_internal_violatingblockhash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_violatingblockhash().data(), static_cast<int>(this->_internal_violatingblockhash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.FinalityConflictNotificationMessage.violatingBlockHash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_violatingblockhash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.FinalityConflictNotificationMessage)
  return target;
}

size_t FinalityConflictNotificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.FinalityConflictNotificationMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string violatingBlockHash = 1;
  if (!this->_internal_violatingblockhash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_violatingblockhash());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FinalityConflictNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FinalityConflictNotificationMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FinalityConflictNotificationMessage::GetClassData() const { return &_class_data_; }

void FinalityConflictNotificationMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FinalityConflictNotificationMessage *>(to)->MergeFrom(
      static_cast<const FinalityConflictNotificationMessage &>(from));
}


void FinalityConflictNotificationMessage::MergeFrom(const FinalityConflictNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.FinalityConflictNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_violatingblockhash().empty()) {
    _internal_set_violatingblockhash(from._internal_violatingblockhash());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FinalityConflictNotificationMessage::CopyFrom(const FinalityConflictNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.FinalityConflictNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinalityConflictNotificationMessage::IsInitialized() const {
  return true;
}

void FinalityConflictNotificationMessage::InternalSwap(FinalityConflictNotificationMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &violatingblockhash_, lhs_arena,
      &other->violatingblockhash_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FinalityConflictNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[60]);
}

// ===================================================================

class FinalityConflictResolvedNotificationMessage::_Internal {
 public:
};

FinalityConflictResolvedNotificationMessage::FinalityConflictResolvedNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.FinalityConflictResolvedNotificationMessage)
}
FinalityConflictResolvedNotificationMessage::FinalityConflictResolvedNotificationMessage(const FinalityConflictResolvedNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  finalityblockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    finalityblockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_finalityblockhash().empty()) {
    finalityblockhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_finalityblockhash(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.FinalityConflictResolvedNotificationMessage)
}

inline void FinalityConflictResolvedNotificationMessage::SharedCtor() {
finalityblockhash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  finalityblockhash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FinalityConflictResolvedNotificationMessage::~FinalityConflictResolvedNotificationMessage() {
  // @@protoc_insertion_point(destructor:protowire.FinalityConflictResolvedNotificationMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FinalityConflictResolvedNotificationMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  finalityblockhash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FinalityConflictResolvedNotificationMessage::ArenaDtor(void* object) {
  FinalityConflictResolvedNotificationMessage* _this = reinterpret_cast< FinalityConflictResolvedNotificationMessage* >(object);
  (void)_this;
}
void FinalityConflictResolvedNotificationMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FinalityConflictResolvedNotificationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FinalityConflictResolvedNotificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.FinalityConflictResolvedNotificationMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  finalityblockhash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FinalityConflictResolvedNotificationMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string finalityBlockHash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_finalityblockhash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.FinalityConflictResolvedNotificationMessage.finalityBlockHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FinalityConflictResolvedNotificationMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.FinalityConflictResolvedNotificationMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string finalityBlockHash = 1;
  if (!this->_internal_finalityblockhash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_finalityblockhash().data(), static_cast<int>(this->_internal_finalityblockhash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.FinalityConflictResolvedNotificationMessage.finalityBlockHash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_finalityblockhash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.FinalityConflictResolvedNotificationMessage)
  return target;
}

size_t FinalityConflictResolvedNotificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.FinalityConflictResolvedNotificationMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string finalityBlockHash = 1;
  if (!this->_internal_finalityblockhash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_finalityblockhash());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FinalityConflictResolvedNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FinalityConflictResolvedNotificationMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FinalityConflictResolvedNotificationMessage::GetClassData() const { return &_class_data_; }

void FinalityConflictResolvedNotificationMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FinalityConflictResolvedNotificationMessage *>(to)->MergeFrom(
      static_cast<const FinalityConflictResolvedNotificationMessage &>(from));
}


void FinalityConflictResolvedNotificationMessage::MergeFrom(const FinalityConflictResolvedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.FinalityConflictResolvedNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_finalityblockhash().empty()) {
    _internal_set_finalityblockhash(from._internal_finalityblockhash());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FinalityConflictResolvedNotificationMessage::CopyFrom(const FinalityConflictResolvedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.FinalityConflictResolvedNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinalityConflictResolvedNotificationMessage::IsInitialized() const {
  return true;
}

void FinalityConflictResolvedNotificationMessage::InternalSwap(FinalityConflictResolvedNotificationMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &finalityblockhash_, lhs_arena,
      &other->finalityblockhash_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FinalityConflictResolvedNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[61]);
}

// ===================================================================

class ShutDownRequestMessage::_Internal {
 public:
};

ShutDownRequestMessage::ShutDownRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.ShutDownRequestMessage)
}
ShutDownRequestMessage::ShutDownRequestMessage(const ShutDownRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.ShutDownRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShutDownRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShutDownRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ShutDownRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[62]);
}

// ===================================================================

class ShutDownResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const ShutDownResponseMessage* msg);
};

const ::protowire::RPCError&
ShutDownResponseMessage::_Internal::error(const ShutDownResponseMessage* msg) {
  return *msg->error_;
}
ShutDownResponseMessage::ShutDownResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.ShutDownResponseMessage)
}
ShutDownResponseMessage::ShutDownResponseMessage(const ShutDownResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.ShutDownResponseMessage)
}

inline void ShutDownResponseMessage::SharedCtor() {
error_ = nullptr;
}

ShutDownResponseMessage::~ShutDownResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.ShutDownResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ShutDownResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void ShutDownResponseMessage::ArenaDtor(void* object) {
  ShutDownResponseMessage* _this = reinterpret_cast< ShutDownResponseMessage* >(object);
  (void)_this;
}
void ShutDownResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShutDownResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ShutDownResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.ShutDownResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShutDownResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShutDownResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.ShutDownResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.ShutDownResponseMessage)
  return target;
}

size_t ShutDownResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.ShutDownResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShutDownResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ShutDownResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShutDownResponseMessage::GetClassData() const { return &_class_data_; }

void ShutDownResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ShutDownResponseMessage *>(to)->MergeFrom(
      static_cast<const ShutDownResponseMessage &>(from));
}


void ShutDownResponseMessage::MergeFrom(const ShutDownResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.ShutDownResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShutDownResponseMessage::CopyFrom(const ShutDownResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.ShutDownResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutDownResponseMessage::IsInitialized() const {
  return true;
}

void ShutDownResponseMessage::InternalSwap(ShutDownResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShutDownResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[63]);
}

// ===================================================================

class GetHeadersRequestMessage::_Internal {
 public:
};

GetHeadersRequestMessage::GetHeadersRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetHeadersRequestMessage)
}
GetHeadersRequestMessage::GetHeadersRequestMessage(const GetHeadersRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  starthash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    starthash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starthash().empty()) {
    starthash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_starthash(), 
      GetArenaForAllocation());
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&isascending_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(isascending_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetHeadersRequestMessage)
}

inline void GetHeadersRequestMessage::SharedCtor() {
starthash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  starthash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&limit_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&isascending_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(isascending_));
}

GetHeadersRequestMessage::~GetHeadersRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetHeadersRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetHeadersRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  starthash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetHeadersRequestMessage::ArenaDtor(void* object) {
  GetHeadersRequestMessage* _this = reinterpret_cast< GetHeadersRequestMessage* >(object);
  (void)_this;
}
void GetHeadersRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetHeadersRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetHeadersRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetHeadersRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  starthash_.ClearToEmpty();
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isascending_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(isascending_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetHeadersRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string startHash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starthash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetHeadersRequestMessage.startHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 limit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isAscending = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          isascending_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetHeadersRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetHeadersRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string startHash = 1;
  if (!this->_internal_starthash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starthash().data(), static_cast<int>(this->_internal_starthash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetHeadersRequestMessage.startHash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starthash(), target);
  }

  // uint64 limit = 2;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_limit(), target);
  }

  // bool isAscending = 3;
  if (this->_internal_isascending() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_isascending(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetHeadersRequestMessage)
  return target;
}

size_t GetHeadersRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetHeadersRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string startHash = 1;
  if (!this->_internal_starthash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starthash());
  }

  // uint64 limit = 2;
  if (this->_internal_limit() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_limit());
  }

  // bool isAscending = 3;
  if (this->_internal_isascending() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetHeadersRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetHeadersRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetHeadersRequestMessage::GetClassData() const { return &_class_data_; }

void GetHeadersRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetHeadersRequestMessage *>(to)->MergeFrom(
      static_cast<const GetHeadersRequestMessage &>(from));
}


void GetHeadersRequestMessage::MergeFrom(const GetHeadersRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetHeadersRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starthash().empty()) {
    _internal_set_starthash(from._internal_starthash());
  }
  if (from._internal_limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
  if (from._internal_isascending() != 0) {
    _internal_set_isascending(from._internal_isascending());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetHeadersRequestMessage::CopyFrom(const GetHeadersRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetHeadersRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHeadersRequestMessage::IsInitialized() const {
  return true;
}

void GetHeadersRequestMessage::InternalSwap(GetHeadersRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &starthash_, lhs_arena,
      &other->starthash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetHeadersRequestMessage, isascending_)
      + sizeof(GetHeadersRequestMessage::isascending_)
      - PROTOBUF_FIELD_OFFSET(GetHeadersRequestMessage, limit_)>(
          reinterpret_cast<char*>(&limit_),
          reinterpret_cast<char*>(&other->limit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetHeadersRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[64]);
}

// ===================================================================

class GetHeadersResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetHeadersResponseMessage* msg);
};

const ::protowire::RPCError&
GetHeadersResponseMessage::_Internal::error(const GetHeadersResponseMessage* msg) {
  return *msg->error_;
}
GetHeadersResponseMessage::GetHeadersResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  headers_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetHeadersResponseMessage)
}
GetHeadersResponseMessage::GetHeadersResponseMessage(const GetHeadersResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      headers_(from.headers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetHeadersResponseMessage)
}

inline void GetHeadersResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetHeadersResponseMessage::~GetHeadersResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetHeadersResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetHeadersResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetHeadersResponseMessage::ArenaDtor(void* object) {
  GetHeadersResponseMessage* _this = reinterpret_cast< GetHeadersResponseMessage* >(object);
  (void)_this;
}
void GetHeadersResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetHeadersResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetHeadersResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetHeadersResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetHeadersResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string headers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_headers();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetHeadersResponseMessage.headers"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetHeadersResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetHeadersResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string headers = 1;
  for (int i = 0, n = this->_internal_headers_size(); i < n; i++) {
    const auto& s = this->_internal_headers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetHeadersResponseMessage.headers");
    target = stream->WriteString(1, s, target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetHeadersResponseMessage)
  return target;
}

size_t GetHeadersResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetHeadersResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string headers = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(headers_.size());
  for (int i = 0, n = headers_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      headers_.Get(i));
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetHeadersResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetHeadersResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetHeadersResponseMessage::GetClassData() const { return &_class_data_; }

void GetHeadersResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetHeadersResponseMessage *>(to)->MergeFrom(
      static_cast<const GetHeadersResponseMessage &>(from));
}


void GetHeadersResponseMessage::MergeFrom(const GetHeadersResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetHeadersResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetHeadersResponseMessage::CopyFrom(const GetHeadersResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetHeadersResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHeadersResponseMessage::IsInitialized() const {
  return true;
}

void GetHeadersResponseMessage::InternalSwap(GetHeadersResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  headers_.InternalSwap(&other->headers_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetHeadersResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[65]);
}

// ===================================================================

class NotifyUtxosChangedRequestMessage::_Internal {
 public:
};

NotifyUtxosChangedRequestMessage::NotifyUtxosChangedRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  addresses_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyUtxosChangedRequestMessage)
}
NotifyUtxosChangedRequestMessage::NotifyUtxosChangedRequestMessage(const NotifyUtxosChangedRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyUtxosChangedRequestMessage)
}

inline void NotifyUtxosChangedRequestMessage::SharedCtor() {
}

NotifyUtxosChangedRequestMessage::~NotifyUtxosChangedRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyUtxosChangedRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyUtxosChangedRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyUtxosChangedRequestMessage::ArenaDtor(void* object) {
  NotifyUtxosChangedRequestMessage* _this = reinterpret_cast< NotifyUtxosChangedRequestMessage* >(object);
  (void)_this;
}
void NotifyUtxosChangedRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyUtxosChangedRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyUtxosChangedRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyUtxosChangedRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyUtxosChangedRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string addresses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addresses();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.NotifyUtxosChangedRequestMessage.addresses"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyUtxosChangedRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyUtxosChangedRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->_internal_addresses_size(); i < n; i++) {
    const auto& s = this->_internal_addresses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.NotifyUtxosChangedRequestMessage.addresses");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyUtxosChangedRequestMessage)
  return target;
}

size_t NotifyUtxosChangedRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyUtxosChangedRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addresses_.size());
  for (int i = 0, n = addresses_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addresses_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyUtxosChangedRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyUtxosChangedRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyUtxosChangedRequestMessage::GetClassData() const { return &_class_data_; }

void NotifyUtxosChangedRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyUtxosChangedRequestMessage *>(to)->MergeFrom(
      static_cast<const NotifyUtxosChangedRequestMessage &>(from));
}


void NotifyUtxosChangedRequestMessage::MergeFrom(const NotifyUtxosChangedRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyUtxosChangedRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyUtxosChangedRequestMessage::CopyFrom(const NotifyUtxosChangedRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyUtxosChangedRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUtxosChangedRequestMessage::IsInitialized() const {
  return true;
}

void NotifyUtxosChangedRequestMessage::InternalSwap(NotifyUtxosChangedRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  addresses_.InternalSwap(&other->addresses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyUtxosChangedRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[66]);
}

// ===================================================================

class NotifyUtxosChangedResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const NotifyUtxosChangedResponseMessage* msg);
};

const ::protowire::RPCError&
NotifyUtxosChangedResponseMessage::_Internal::error(const NotifyUtxosChangedResponseMessage* msg) {
  return *msg->error_;
}
NotifyUtxosChangedResponseMessage::NotifyUtxosChangedResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyUtxosChangedResponseMessage)
}
NotifyUtxosChangedResponseMessage::NotifyUtxosChangedResponseMessage(const NotifyUtxosChangedResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyUtxosChangedResponseMessage)
}

inline void NotifyUtxosChangedResponseMessage::SharedCtor() {
error_ = nullptr;
}

NotifyUtxosChangedResponseMessage::~NotifyUtxosChangedResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyUtxosChangedResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyUtxosChangedResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void NotifyUtxosChangedResponseMessage::ArenaDtor(void* object) {
  NotifyUtxosChangedResponseMessage* _this = reinterpret_cast< NotifyUtxosChangedResponseMessage* >(object);
  (void)_this;
}
void NotifyUtxosChangedResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyUtxosChangedResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyUtxosChangedResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyUtxosChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyUtxosChangedResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyUtxosChangedResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyUtxosChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyUtxosChangedResponseMessage)
  return target;
}

size_t NotifyUtxosChangedResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyUtxosChangedResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyUtxosChangedResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyUtxosChangedResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyUtxosChangedResponseMessage::GetClassData() const { return &_class_data_; }

void NotifyUtxosChangedResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyUtxosChangedResponseMessage *>(to)->MergeFrom(
      static_cast<const NotifyUtxosChangedResponseMessage &>(from));
}


void NotifyUtxosChangedResponseMessage::MergeFrom(const NotifyUtxosChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyUtxosChangedResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyUtxosChangedResponseMessage::CopyFrom(const NotifyUtxosChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyUtxosChangedResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUtxosChangedResponseMessage::IsInitialized() const {
  return true;
}

void NotifyUtxosChangedResponseMessage::InternalSwap(NotifyUtxosChangedResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyUtxosChangedResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[67]);
}

// ===================================================================

class UtxosChangedNotificationMessage::_Internal {
 public:
};

UtxosChangedNotificationMessage::UtxosChangedNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  added_(arena),
  removed_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.UtxosChangedNotificationMessage)
}
UtxosChangedNotificationMessage::UtxosChangedNotificationMessage(const UtxosChangedNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      added_(from.added_),
      removed_(from.removed_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.UtxosChangedNotificationMessage)
}

inline void UtxosChangedNotificationMessage::SharedCtor() {
}

UtxosChangedNotificationMessage::~UtxosChangedNotificationMessage() {
  // @@protoc_insertion_point(destructor:protowire.UtxosChangedNotificationMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UtxosChangedNotificationMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UtxosChangedNotificationMessage::ArenaDtor(void* object) {
  UtxosChangedNotificationMessage* _this = reinterpret_cast< UtxosChangedNotificationMessage* >(object);
  (void)_this;
}
void UtxosChangedNotificationMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UtxosChangedNotificationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UtxosChangedNotificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.UtxosChangedNotificationMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  added_.Clear();
  removed_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UtxosChangedNotificationMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protowire.UtxosByAddressesEntry added = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_added(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.UtxosByAddressesEntry removed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_removed(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UtxosChangedNotificationMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.UtxosChangedNotificationMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protowire.UtxosByAddressesEntry added = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_added_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_added(i), target, stream);
  }

  // repeated .protowire.UtxosByAddressesEntry removed = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_removed_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_removed(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.UtxosChangedNotificationMessage)
  return target;
}

size_t UtxosChangedNotificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.UtxosChangedNotificationMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.UtxosByAddressesEntry added = 1;
  total_size += 1UL * this->_internal_added_size();
  for (const auto& msg : this->added_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .protowire.UtxosByAddressesEntry removed = 2;
  total_size += 1UL * this->_internal_removed_size();
  for (const auto& msg : this->removed_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UtxosChangedNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UtxosChangedNotificationMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UtxosChangedNotificationMessage::GetClassData() const { return &_class_data_; }

void UtxosChangedNotificationMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UtxosChangedNotificationMessage *>(to)->MergeFrom(
      static_cast<const UtxosChangedNotificationMessage &>(from));
}


void UtxosChangedNotificationMessage::MergeFrom(const UtxosChangedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.UtxosChangedNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  added_.MergeFrom(from.added_);
  removed_.MergeFrom(from.removed_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UtxosChangedNotificationMessage::CopyFrom(const UtxosChangedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.UtxosChangedNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UtxosChangedNotificationMessage::IsInitialized() const {
  return true;
}

void UtxosChangedNotificationMessage::InternalSwap(UtxosChangedNotificationMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  added_.InternalSwap(&other->added_);
  removed_.InternalSwap(&other->removed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UtxosChangedNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[68]);
}

// ===================================================================

class UtxosByAddressesEntry::_Internal {
 public:
  static const ::protowire::RpcOutpoint& outpoint(const UtxosByAddressesEntry* msg);
  static const ::protowire::RpcUtxoEntry& utxoentry(const UtxosByAddressesEntry* msg);
};

const ::protowire::RpcOutpoint&
UtxosByAddressesEntry::_Internal::outpoint(const UtxosByAddressesEntry* msg) {
  return *msg->outpoint_;
}
const ::protowire::RpcUtxoEntry&
UtxosByAddressesEntry::_Internal::utxoentry(const UtxosByAddressesEntry* msg) {
  return *msg->utxoentry_;
}
UtxosByAddressesEntry::UtxosByAddressesEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.UtxosByAddressesEntry)
}
UtxosByAddressesEntry::UtxosByAddressesEntry(const UtxosByAddressesEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_outpoint()) {
    outpoint_ = new ::protowire::RpcOutpoint(*from.outpoint_);
  } else {
    outpoint_ = nullptr;
  }
  if (from._internal_has_utxoentry()) {
    utxoentry_ = new ::protowire::RpcUtxoEntry(*from.utxoentry_);
  } else {
    utxoentry_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.UtxosByAddressesEntry)
}

inline void UtxosByAddressesEntry::SharedCtor() {
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&outpoint_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&utxoentry_) -
    reinterpret_cast<char*>(&outpoint_)) + sizeof(utxoentry_));
}

UtxosByAddressesEntry::~UtxosByAddressesEntry() {
  // @@protoc_insertion_point(destructor:protowire.UtxosByAddressesEntry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UtxosByAddressesEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete outpoint_;
  if (this != internal_default_instance()) delete utxoentry_;
}

void UtxosByAddressesEntry::ArenaDtor(void* object) {
  UtxosByAddressesEntry* _this = reinterpret_cast< UtxosByAddressesEntry* >(object);
  (void)_this;
}
void UtxosByAddressesEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UtxosByAddressesEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UtxosByAddressesEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.UtxosByAddressesEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && outpoint_ != nullptr) {
    delete outpoint_;
  }
  outpoint_ = nullptr;
  if (GetArenaForAllocation() == nullptr && utxoentry_ != nullptr) {
    delete utxoentry_;
  }
  utxoentry_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UtxosByAddressesEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.UtxosByAddressesEntry.address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcOutpoint outpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_outpoint(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RpcUtxoEntry utxoEntry = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_utxoentry(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UtxosByAddressesEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.UtxosByAddressesEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.UtxosByAddressesEntry.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // .protowire.RpcOutpoint outpoint = 2;
  if (this->_internal_has_outpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::outpoint(this), target, stream);
  }

  // .protowire.RpcUtxoEntry utxoEntry = 3;
  if (this->_internal_has_utxoentry()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::utxoentry(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.UtxosByAddressesEntry)
  return target;
}

size_t UtxosByAddressesEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.UtxosByAddressesEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // .protowire.RpcOutpoint outpoint = 2;
  if (this->_internal_has_outpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *outpoint_);
  }

  // .protowire.RpcUtxoEntry utxoEntry = 3;
  if (this->_internal_has_utxoentry()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *utxoentry_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UtxosByAddressesEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UtxosByAddressesEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UtxosByAddressesEntry::GetClassData() const { return &_class_data_; }

void UtxosByAddressesEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UtxosByAddressesEntry *>(to)->MergeFrom(
      static_cast<const UtxosByAddressesEntry &>(from));
}


void UtxosByAddressesEntry::MergeFrom(const UtxosByAddressesEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.UtxosByAddressesEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _internal_set_address(from._internal_address());
  }
  if (from._internal_has_outpoint()) {
    _internal_mutable_outpoint()->::protowire::RpcOutpoint::MergeFrom(from._internal_outpoint());
  }
  if (from._internal_has_utxoentry()) {
    _internal_mutable_utxoentry()->::protowire::RpcUtxoEntry::MergeFrom(from._internal_utxoentry());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UtxosByAddressesEntry::CopyFrom(const UtxosByAddressesEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.UtxosByAddressesEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UtxosByAddressesEntry::IsInitialized() const {
  return true;
}

void UtxosByAddressesEntry::InternalSwap(UtxosByAddressesEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &address_, lhs_arena,
      &other->address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UtxosByAddressesEntry, utxoentry_)
      + sizeof(UtxosByAddressesEntry::utxoentry_)
      - PROTOBUF_FIELD_OFFSET(UtxosByAddressesEntry, outpoint_)>(
          reinterpret_cast<char*>(&outpoint_),
          reinterpret_cast<char*>(&other->outpoint_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UtxosByAddressesEntry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[69]);
}

// ===================================================================

class StopNotifyingUtxosChangedRequestMessage::_Internal {
 public:
};

StopNotifyingUtxosChangedRequestMessage::StopNotifyingUtxosChangedRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  addresses_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.StopNotifyingUtxosChangedRequestMessage)
}
StopNotifyingUtxosChangedRequestMessage::StopNotifyingUtxosChangedRequestMessage(const StopNotifyingUtxosChangedRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.StopNotifyingUtxosChangedRequestMessage)
}

inline void StopNotifyingUtxosChangedRequestMessage::SharedCtor() {
}

StopNotifyingUtxosChangedRequestMessage::~StopNotifyingUtxosChangedRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.StopNotifyingUtxosChangedRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StopNotifyingUtxosChangedRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StopNotifyingUtxosChangedRequestMessage::ArenaDtor(void* object) {
  StopNotifyingUtxosChangedRequestMessage* _this = reinterpret_cast< StopNotifyingUtxosChangedRequestMessage* >(object);
  (void)_this;
}
void StopNotifyingUtxosChangedRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopNotifyingUtxosChangedRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopNotifyingUtxosChangedRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.StopNotifyingUtxosChangedRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopNotifyingUtxosChangedRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string addresses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addresses();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.StopNotifyingUtxosChangedRequestMessage.addresses"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopNotifyingUtxosChangedRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.StopNotifyingUtxosChangedRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->_internal_addresses_size(); i < n; i++) {
    const auto& s = this->_internal_addresses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.StopNotifyingUtxosChangedRequestMessage.addresses");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.StopNotifyingUtxosChangedRequestMessage)
  return target;
}

size_t StopNotifyingUtxosChangedRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.StopNotifyingUtxosChangedRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addresses_.size());
  for (int i = 0, n = addresses_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addresses_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopNotifyingUtxosChangedRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StopNotifyingUtxosChangedRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopNotifyingUtxosChangedRequestMessage::GetClassData() const { return &_class_data_; }

void StopNotifyingUtxosChangedRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StopNotifyingUtxosChangedRequestMessage *>(to)->MergeFrom(
      static_cast<const StopNotifyingUtxosChangedRequestMessage &>(from));
}


void StopNotifyingUtxosChangedRequestMessage::MergeFrom(const StopNotifyingUtxosChangedRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.StopNotifyingUtxosChangedRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopNotifyingUtxosChangedRequestMessage::CopyFrom(const StopNotifyingUtxosChangedRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.StopNotifyingUtxosChangedRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopNotifyingUtxosChangedRequestMessage::IsInitialized() const {
  return true;
}

void StopNotifyingUtxosChangedRequestMessage::InternalSwap(StopNotifyingUtxosChangedRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  addresses_.InternalSwap(&other->addresses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopNotifyingUtxosChangedRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[70]);
}

// ===================================================================

class StopNotifyingUtxosChangedResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const StopNotifyingUtxosChangedResponseMessage* msg);
};

const ::protowire::RPCError&
StopNotifyingUtxosChangedResponseMessage::_Internal::error(const StopNotifyingUtxosChangedResponseMessage* msg) {
  return *msg->error_;
}
StopNotifyingUtxosChangedResponseMessage::StopNotifyingUtxosChangedResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.StopNotifyingUtxosChangedResponseMessage)
}
StopNotifyingUtxosChangedResponseMessage::StopNotifyingUtxosChangedResponseMessage(const StopNotifyingUtxosChangedResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.StopNotifyingUtxosChangedResponseMessage)
}

inline void StopNotifyingUtxosChangedResponseMessage::SharedCtor() {
error_ = nullptr;
}

StopNotifyingUtxosChangedResponseMessage::~StopNotifyingUtxosChangedResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.StopNotifyingUtxosChangedResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StopNotifyingUtxosChangedResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void StopNotifyingUtxosChangedResponseMessage::ArenaDtor(void* object) {
  StopNotifyingUtxosChangedResponseMessage* _this = reinterpret_cast< StopNotifyingUtxosChangedResponseMessage* >(object);
  (void)_this;
}
void StopNotifyingUtxosChangedResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopNotifyingUtxosChangedResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopNotifyingUtxosChangedResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.StopNotifyingUtxosChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopNotifyingUtxosChangedResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopNotifyingUtxosChangedResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.StopNotifyingUtxosChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.StopNotifyingUtxosChangedResponseMessage)
  return target;
}

size_t StopNotifyingUtxosChangedResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.StopNotifyingUtxosChangedResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopNotifyingUtxosChangedResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StopNotifyingUtxosChangedResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopNotifyingUtxosChangedResponseMessage::GetClassData() const { return &_class_data_; }

void StopNotifyingUtxosChangedResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StopNotifyingUtxosChangedResponseMessage *>(to)->MergeFrom(
      static_cast<const StopNotifyingUtxosChangedResponseMessage &>(from));
}


void StopNotifyingUtxosChangedResponseMessage::MergeFrom(const StopNotifyingUtxosChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.StopNotifyingUtxosChangedResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopNotifyingUtxosChangedResponseMessage::CopyFrom(const StopNotifyingUtxosChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.StopNotifyingUtxosChangedResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopNotifyingUtxosChangedResponseMessage::IsInitialized() const {
  return true;
}

void StopNotifyingUtxosChangedResponseMessage::InternalSwap(StopNotifyingUtxosChangedResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopNotifyingUtxosChangedResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[71]);
}

// ===================================================================

class GetUtxosByAddressesRequestMessage::_Internal {
 public:
};

GetUtxosByAddressesRequestMessage::GetUtxosByAddressesRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  addresses_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetUtxosByAddressesRequestMessage)
}
GetUtxosByAddressesRequestMessage::GetUtxosByAddressesRequestMessage(const GetUtxosByAddressesRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetUtxosByAddressesRequestMessage)
}

inline void GetUtxosByAddressesRequestMessage::SharedCtor() {
}

GetUtxosByAddressesRequestMessage::~GetUtxosByAddressesRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetUtxosByAddressesRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetUtxosByAddressesRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetUtxosByAddressesRequestMessage::ArenaDtor(void* object) {
  GetUtxosByAddressesRequestMessage* _this = reinterpret_cast< GetUtxosByAddressesRequestMessage* >(object);
  (void)_this;
}
void GetUtxosByAddressesRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetUtxosByAddressesRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetUtxosByAddressesRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetUtxosByAddressesRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUtxosByAddressesRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string addresses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addresses();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetUtxosByAddressesRequestMessage.addresses"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUtxosByAddressesRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetUtxosByAddressesRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->_internal_addresses_size(); i < n; i++) {
    const auto& s = this->_internal_addresses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetUtxosByAddressesRequestMessage.addresses");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetUtxosByAddressesRequestMessage)
  return target;
}

size_t GetUtxosByAddressesRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetUtxosByAddressesRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addresses_.size());
  for (int i = 0, n = addresses_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addresses_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUtxosByAddressesRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetUtxosByAddressesRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUtxosByAddressesRequestMessage::GetClassData() const { return &_class_data_; }

void GetUtxosByAddressesRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetUtxosByAddressesRequestMessage *>(to)->MergeFrom(
      static_cast<const GetUtxosByAddressesRequestMessage &>(from));
}


void GetUtxosByAddressesRequestMessage::MergeFrom(const GetUtxosByAddressesRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetUtxosByAddressesRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUtxosByAddressesRequestMessage::CopyFrom(const GetUtxosByAddressesRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetUtxosByAddressesRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUtxosByAddressesRequestMessage::IsInitialized() const {
  return true;
}

void GetUtxosByAddressesRequestMessage::InternalSwap(GetUtxosByAddressesRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  addresses_.InternalSwap(&other->addresses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUtxosByAddressesRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[72]);
}

// ===================================================================

class GetUtxosByAddressesResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetUtxosByAddressesResponseMessage* msg);
};

const ::protowire::RPCError&
GetUtxosByAddressesResponseMessage::_Internal::error(const GetUtxosByAddressesResponseMessage* msg) {
  return *msg->error_;
}
GetUtxosByAddressesResponseMessage::GetUtxosByAddressesResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetUtxosByAddressesResponseMessage)
}
GetUtxosByAddressesResponseMessage::GetUtxosByAddressesResponseMessage(const GetUtxosByAddressesResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetUtxosByAddressesResponseMessage)
}

inline void GetUtxosByAddressesResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetUtxosByAddressesResponseMessage::~GetUtxosByAddressesResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetUtxosByAddressesResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetUtxosByAddressesResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetUtxosByAddressesResponseMessage::ArenaDtor(void* object) {
  GetUtxosByAddressesResponseMessage* _this = reinterpret_cast< GetUtxosByAddressesResponseMessage* >(object);
  (void)_this;
}
void GetUtxosByAddressesResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetUtxosByAddressesResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetUtxosByAddressesResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetUtxosByAddressesResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUtxosByAddressesResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protowire.UtxosByAddressesEntry entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUtxosByAddressesResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetUtxosByAddressesResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protowire.UtxosByAddressesEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entries(i), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetUtxosByAddressesResponseMessage)
  return target;
}

size_t GetUtxosByAddressesResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetUtxosByAddressesResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.UtxosByAddressesEntry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUtxosByAddressesResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetUtxosByAddressesResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUtxosByAddressesResponseMessage::GetClassData() const { return &_class_data_; }

void GetUtxosByAddressesResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetUtxosByAddressesResponseMessage *>(to)->MergeFrom(
      static_cast<const GetUtxosByAddressesResponseMessage &>(from));
}


void GetUtxosByAddressesResponseMessage::MergeFrom(const GetUtxosByAddressesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetUtxosByAddressesResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUtxosByAddressesResponseMessage::CopyFrom(const GetUtxosByAddressesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetUtxosByAddressesResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUtxosByAddressesResponseMessage::IsInitialized() const {
  return true;
}

void GetUtxosByAddressesResponseMessage::InternalSwap(GetUtxosByAddressesResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUtxosByAddressesResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[73]);
}

// ===================================================================

class GetBalanceByAddressRequestMessage::_Internal {
 public:
};

GetBalanceByAddressRequestMessage::GetBalanceByAddressRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBalanceByAddressRequestMessage)
}
GetBalanceByAddressRequestMessage::GetBalanceByAddressRequestMessage(const GetBalanceByAddressRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetBalanceByAddressRequestMessage)
}

inline void GetBalanceByAddressRequestMessage::SharedCtor() {
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBalanceByAddressRequestMessage::~GetBalanceByAddressRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBalanceByAddressRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBalanceByAddressRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBalanceByAddressRequestMessage::ArenaDtor(void* object) {
  GetBalanceByAddressRequestMessage* _this = reinterpret_cast< GetBalanceByAddressRequestMessage* >(object);
  (void)_this;
}
void GetBalanceByAddressRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBalanceByAddressRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBalanceByAddressRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBalanceByAddressRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBalanceByAddressRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBalanceByAddressRequestMessage.address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBalanceByAddressRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBalanceByAddressRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBalanceByAddressRequestMessage.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBalanceByAddressRequestMessage)
  return target;
}

size_t GetBalanceByAddressRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBalanceByAddressRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBalanceByAddressRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBalanceByAddressRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBalanceByAddressRequestMessage::GetClassData() const { return &_class_data_; }

void GetBalanceByAddressRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBalanceByAddressRequestMessage *>(to)->MergeFrom(
      static_cast<const GetBalanceByAddressRequestMessage &>(from));
}


void GetBalanceByAddressRequestMessage::MergeFrom(const GetBalanceByAddressRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBalanceByAddressRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _internal_set_address(from._internal_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBalanceByAddressRequestMessage::CopyFrom(const GetBalanceByAddressRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBalanceByAddressRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalanceByAddressRequestMessage::IsInitialized() const {
  return true;
}

void GetBalanceByAddressRequestMessage::InternalSwap(GetBalanceByAddressRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &address_, lhs_arena,
      &other->address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBalanceByAddressRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[74]);
}

// ===================================================================

class GetBalanceByAddressResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetBalanceByAddressResponseMessage* msg);
};

const ::protowire::RPCError&
GetBalanceByAddressResponseMessage::_Internal::error(const GetBalanceByAddressResponseMessage* msg) {
  return *msg->error_;
}
GetBalanceByAddressResponseMessage::GetBalanceByAddressResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBalanceByAddressResponseMessage)
}
GetBalanceByAddressResponseMessage::GetBalanceByAddressResponseMessage(const GetBalanceByAddressResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  balance_ = from.balance_;
  // @@protoc_insertion_point(copy_constructor:protowire.GetBalanceByAddressResponseMessage)
}

inline void GetBalanceByAddressResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&error_)) + sizeof(balance_));
}

GetBalanceByAddressResponseMessage::~GetBalanceByAddressResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBalanceByAddressResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBalanceByAddressResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetBalanceByAddressResponseMessage::ArenaDtor(void* object) {
  GetBalanceByAddressResponseMessage* _this = reinterpret_cast< GetBalanceByAddressResponseMessage* >(object);
  (void)_this;
}
void GetBalanceByAddressResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBalanceByAddressResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBalanceByAddressResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBalanceByAddressResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  balance_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBalanceByAddressResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 balance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          balance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBalanceByAddressResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBalanceByAddressResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 balance = 1;
  if (this->_internal_balance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_balance(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBalanceByAddressResponseMessage)
  return target;
}

size_t GetBalanceByAddressResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBalanceByAddressResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 balance = 1;
  if (this->_internal_balance() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_balance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBalanceByAddressResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBalanceByAddressResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBalanceByAddressResponseMessage::GetClassData() const { return &_class_data_; }

void GetBalanceByAddressResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBalanceByAddressResponseMessage *>(to)->MergeFrom(
      static_cast<const GetBalanceByAddressResponseMessage &>(from));
}


void GetBalanceByAddressResponseMessage::MergeFrom(const GetBalanceByAddressResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBalanceByAddressResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_balance() != 0) {
    _internal_set_balance(from._internal_balance());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBalanceByAddressResponseMessage::CopyFrom(const GetBalanceByAddressResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBalanceByAddressResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalanceByAddressResponseMessage::IsInitialized() const {
  return true;
}

void GetBalanceByAddressResponseMessage::InternalSwap(GetBalanceByAddressResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBalanceByAddressResponseMessage, balance_)
      + sizeof(GetBalanceByAddressResponseMessage::balance_)
      - PROTOBUF_FIELD_OFFSET(GetBalanceByAddressResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBalanceByAddressResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[75]);
}

// ===================================================================

class GetBalancesByAddressesRequestMessage::_Internal {
 public:
};

GetBalancesByAddressesRequestMessage::GetBalancesByAddressesRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  addresses_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBalancesByAddressesRequestMessage)
}
GetBalancesByAddressesRequestMessage::GetBalancesByAddressesRequestMessage(const GetBalancesByAddressesRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetBalancesByAddressesRequestMessage)
}

inline void GetBalancesByAddressesRequestMessage::SharedCtor() {
}

GetBalancesByAddressesRequestMessage::~GetBalancesByAddressesRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBalancesByAddressesRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBalancesByAddressesRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBalancesByAddressesRequestMessage::ArenaDtor(void* object) {
  GetBalancesByAddressesRequestMessage* _this = reinterpret_cast< GetBalancesByAddressesRequestMessage* >(object);
  (void)_this;
}
void GetBalancesByAddressesRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBalancesByAddressesRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBalancesByAddressesRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBalancesByAddressesRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBalancesByAddressesRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string addresses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addresses();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetBalancesByAddressesRequestMessage.addresses"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBalancesByAddressesRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBalancesByAddressesRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->_internal_addresses_size(); i < n; i++) {
    const auto& s = this->_internal_addresses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetBalancesByAddressesRequestMessage.addresses");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBalancesByAddressesRequestMessage)
  return target;
}

size_t GetBalancesByAddressesRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBalancesByAddressesRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addresses_.size());
  for (int i = 0, n = addresses_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addresses_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBalancesByAddressesRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBalancesByAddressesRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBalancesByAddressesRequestMessage::GetClassData() const { return &_class_data_; }

void GetBalancesByAddressesRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBalancesByAddressesRequestMessage *>(to)->MergeFrom(
      static_cast<const GetBalancesByAddressesRequestMessage &>(from));
}


void GetBalancesByAddressesRequestMessage::MergeFrom(const GetBalancesByAddressesRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBalancesByAddressesRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBalancesByAddressesRequestMessage::CopyFrom(const GetBalancesByAddressesRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBalancesByAddressesRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalancesByAddressesRequestMessage::IsInitialized() const {
  return true;
}

void GetBalancesByAddressesRequestMessage::InternalSwap(GetBalancesByAddressesRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  addresses_.InternalSwap(&other->addresses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBalancesByAddressesRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[76]);
}

// ===================================================================

class BalancesByAddressEntry::_Internal {
 public:
  static const ::protowire::RPCError& error(const BalancesByAddressEntry* msg);
};

const ::protowire::RPCError&
BalancesByAddressEntry::_Internal::error(const BalancesByAddressEntry* msg) {
  return *msg->error_;
}
BalancesByAddressEntry::BalancesByAddressEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.BalancesByAddressEntry)
}
BalancesByAddressEntry::BalancesByAddressEntry(const BalancesByAddressEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  balance_ = from.balance_;
  // @@protoc_insertion_point(copy_constructor:protowire.BalancesByAddressEntry)
}

inline void BalancesByAddressEntry::SharedCtor() {
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&balance_) -
    reinterpret_cast<char*>(&error_)) + sizeof(balance_));
}

BalancesByAddressEntry::~BalancesByAddressEntry() {
  // @@protoc_insertion_point(destructor:protowire.BalancesByAddressEntry)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BalancesByAddressEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void BalancesByAddressEntry::ArenaDtor(void* object) {
  BalancesByAddressEntry* _this = reinterpret_cast< BalancesByAddressEntry* >(object);
  (void)_this;
}
void BalancesByAddressEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BalancesByAddressEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BalancesByAddressEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.BalancesByAddressEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  balance_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BalancesByAddressEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.BalancesByAddressEntry.address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 balance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          balance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BalancesByAddressEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.BalancesByAddressEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.BalancesByAddressEntry.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // uint64 balance = 2;
  if (this->_internal_balance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_balance(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.BalancesByAddressEntry)
  return target;
}

size_t BalancesByAddressEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.BalancesByAddressEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 balance = 2;
  if (this->_internal_balance() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_balance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BalancesByAddressEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BalancesByAddressEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BalancesByAddressEntry::GetClassData() const { return &_class_data_; }

void BalancesByAddressEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BalancesByAddressEntry *>(to)->MergeFrom(
      static_cast<const BalancesByAddressEntry &>(from));
}


void BalancesByAddressEntry::MergeFrom(const BalancesByAddressEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.BalancesByAddressEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _internal_set_address(from._internal_address());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_balance() != 0) {
    _internal_set_balance(from._internal_balance());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BalancesByAddressEntry::CopyFrom(const BalancesByAddressEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.BalancesByAddressEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BalancesByAddressEntry::IsInitialized() const {
  return true;
}

void BalancesByAddressEntry::InternalSwap(BalancesByAddressEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &address_, lhs_arena,
      &other->address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BalancesByAddressEntry, balance_)
      + sizeof(BalancesByAddressEntry::balance_)
      - PROTOBUF_FIELD_OFFSET(BalancesByAddressEntry, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BalancesByAddressEntry::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[77]);
}

// ===================================================================

class GetBalancesByAddressesResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetBalancesByAddressesResponseMessage* msg);
};

const ::protowire::RPCError&
GetBalancesByAddressesResponseMessage::_Internal::error(const GetBalancesByAddressesResponseMessage* msg) {
  return *msg->error_;
}
GetBalancesByAddressesResponseMessage::GetBalancesByAddressesResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetBalancesByAddressesResponseMessage)
}
GetBalancesByAddressesResponseMessage::GetBalancesByAddressesResponseMessage(const GetBalancesByAddressesResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetBalancesByAddressesResponseMessage)
}

inline void GetBalancesByAddressesResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetBalancesByAddressesResponseMessage::~GetBalancesByAddressesResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetBalancesByAddressesResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBalancesByAddressesResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetBalancesByAddressesResponseMessage::ArenaDtor(void* object) {
  GetBalancesByAddressesResponseMessage* _this = reinterpret_cast< GetBalancesByAddressesResponseMessage* >(object);
  (void)_this;
}
void GetBalancesByAddressesResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBalancesByAddressesResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBalancesByAddressesResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetBalancesByAddressesResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBalancesByAddressesResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protowire.BalancesByAddressEntry entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBalancesByAddressesResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetBalancesByAddressesResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protowire.BalancesByAddressEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entries(i), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetBalancesByAddressesResponseMessage)
  return target;
}

size_t GetBalancesByAddressesResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetBalancesByAddressesResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.BalancesByAddressEntry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBalancesByAddressesResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBalancesByAddressesResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBalancesByAddressesResponseMessage::GetClassData() const { return &_class_data_; }

void GetBalancesByAddressesResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBalancesByAddressesResponseMessage *>(to)->MergeFrom(
      static_cast<const GetBalancesByAddressesResponseMessage &>(from));
}


void GetBalancesByAddressesResponseMessage::MergeFrom(const GetBalancesByAddressesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetBalancesByAddressesResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBalancesByAddressesResponseMessage::CopyFrom(const GetBalancesByAddressesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetBalancesByAddressesResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBalancesByAddressesResponseMessage::IsInitialized() const {
  return true;
}

void GetBalancesByAddressesResponseMessage::InternalSwap(GetBalancesByAddressesResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBalancesByAddressesResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[78]);
}

// ===================================================================

class GetVirtualSelectedParentBlueScoreRequestMessage::_Internal {
 public:
};

GetVirtualSelectedParentBlueScoreRequestMessage::GetVirtualSelectedParentBlueScoreRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetVirtualSelectedParentBlueScoreRequestMessage)
}
GetVirtualSelectedParentBlueScoreRequestMessage::GetVirtualSelectedParentBlueScoreRequestMessage(const GetVirtualSelectedParentBlueScoreRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetVirtualSelectedParentBlueScoreRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtualSelectedParentBlueScoreRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtualSelectedParentBlueScoreRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualSelectedParentBlueScoreRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[79]);
}

// ===================================================================

class GetVirtualSelectedParentBlueScoreResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetVirtualSelectedParentBlueScoreResponseMessage* msg);
};

const ::protowire::RPCError&
GetVirtualSelectedParentBlueScoreResponseMessage::_Internal::error(const GetVirtualSelectedParentBlueScoreResponseMessage* msg) {
  return *msg->error_;
}
GetVirtualSelectedParentBlueScoreResponseMessage::GetVirtualSelectedParentBlueScoreResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
}
GetVirtualSelectedParentBlueScoreResponseMessage::GetVirtualSelectedParentBlueScoreResponseMessage(const GetVirtualSelectedParentBlueScoreResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  bluescore_ = from.bluescore_;
  // @@protoc_insertion_point(copy_constructor:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
}

inline void GetVirtualSelectedParentBlueScoreResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bluescore_) -
    reinterpret_cast<char*>(&error_)) + sizeof(bluescore_));
}

GetVirtualSelectedParentBlueScoreResponseMessage::~GetVirtualSelectedParentBlueScoreResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetVirtualSelectedParentBlueScoreResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetVirtualSelectedParentBlueScoreResponseMessage::ArenaDtor(void* object) {
  GetVirtualSelectedParentBlueScoreResponseMessage* _this = reinterpret_cast< GetVirtualSelectedParentBlueScoreResponseMessage* >(object);
  (void)_this;
}
void GetVirtualSelectedParentBlueScoreResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVirtualSelectedParentBlueScoreResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVirtualSelectedParentBlueScoreResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  bluescore_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualSelectedParentBlueScoreResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 blueScore = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          bluescore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVirtualSelectedParentBlueScoreResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 blueScore = 1;
  if (this->_internal_bluescore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_bluescore(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
  return target;
}

size_t GetVirtualSelectedParentBlueScoreResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 blueScore = 1;
  if (this->_internal_bluescore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_bluescore());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtualSelectedParentBlueScoreResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVirtualSelectedParentBlueScoreResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtualSelectedParentBlueScoreResponseMessage::GetClassData() const { return &_class_data_; }

void GetVirtualSelectedParentBlueScoreResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVirtualSelectedParentBlueScoreResponseMessage *>(to)->MergeFrom(
      static_cast<const GetVirtualSelectedParentBlueScoreResponseMessage &>(from));
}


void GetVirtualSelectedParentBlueScoreResponseMessage::MergeFrom(const GetVirtualSelectedParentBlueScoreResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_bluescore() != 0) {
    _internal_set_bluescore(from._internal_bluescore());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVirtualSelectedParentBlueScoreResponseMessage::CopyFrom(const GetVirtualSelectedParentBlueScoreResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetVirtualSelectedParentBlueScoreResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualSelectedParentBlueScoreResponseMessage::IsInitialized() const {
  return true;
}

void GetVirtualSelectedParentBlueScoreResponseMessage::InternalSwap(GetVirtualSelectedParentBlueScoreResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetVirtualSelectedParentBlueScoreResponseMessage, bluescore_)
      + sizeof(GetVirtualSelectedParentBlueScoreResponseMessage::bluescore_)
      - PROTOBUF_FIELD_OFFSET(GetVirtualSelectedParentBlueScoreResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualSelectedParentBlueScoreResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[80]);
}

// ===================================================================

class NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::_Internal {
 public:
};

NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage)
}
NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage(const NotifyVirtualSelectedParentBlueScoreChangedRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyVirtualSelectedParentBlueScoreChangedRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[81]);
}

// ===================================================================

class NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const NotifyVirtualSelectedParentBlueScoreChangedResponseMessage* msg);
};

const ::protowire::RPCError&
NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::_Internal::error(const NotifyVirtualSelectedParentBlueScoreChangedResponseMessage* msg) {
  return *msg->error_;
}
NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
}
NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage(const NotifyVirtualSelectedParentBlueScoreChangedResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
}

inline void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::SharedCtor() {
error_ = nullptr;
}

NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::~NotifyVirtualSelectedParentBlueScoreChangedResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::ArenaDtor(void* object) {
  NotifyVirtualSelectedParentBlueScoreChangedResponseMessage* _this = reinterpret_cast< NotifyVirtualSelectedParentBlueScoreChangedResponseMessage* >(object);
  (void)_this;
}
void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
  return target;
}

size_t NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::GetClassData() const { return &_class_data_; }

void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyVirtualSelectedParentBlueScoreChangedResponseMessage *>(to)->MergeFrom(
      static_cast<const NotifyVirtualSelectedParentBlueScoreChangedResponseMessage &>(from));
}


void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::MergeFrom(const NotifyVirtualSelectedParentBlueScoreChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::CopyFrom(const NotifyVirtualSelectedParentBlueScoreChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::IsInitialized() const {
  return true;
}

void NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::InternalSwap(NotifyVirtualSelectedParentBlueScoreChangedResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyVirtualSelectedParentBlueScoreChangedResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[82]);
}

// ===================================================================

class VirtualSelectedParentBlueScoreChangedNotificationMessage::_Internal {
 public:
};

VirtualSelectedParentBlueScoreChangedNotificationMessage::VirtualSelectedParentBlueScoreChangedNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
}
VirtualSelectedParentBlueScoreChangedNotificationMessage::VirtualSelectedParentBlueScoreChangedNotificationMessage(const VirtualSelectedParentBlueScoreChangedNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  virtualselectedparentbluescore_ = from.virtualselectedparentbluescore_;
  // @@protoc_insertion_point(copy_constructor:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
}

inline void VirtualSelectedParentBlueScoreChangedNotificationMessage::SharedCtor() {
virtualselectedparentbluescore_ = uint64_t{0u};
}

VirtualSelectedParentBlueScoreChangedNotificationMessage::~VirtualSelectedParentBlueScoreChangedNotificationMessage() {
  // @@protoc_insertion_point(destructor:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void VirtualSelectedParentBlueScoreChangedNotificationMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VirtualSelectedParentBlueScoreChangedNotificationMessage::ArenaDtor(void* object) {
  VirtualSelectedParentBlueScoreChangedNotificationMessage* _this = reinterpret_cast< VirtualSelectedParentBlueScoreChangedNotificationMessage* >(object);
  (void)_this;
}
void VirtualSelectedParentBlueScoreChangedNotificationMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VirtualSelectedParentBlueScoreChangedNotificationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VirtualSelectedParentBlueScoreChangedNotificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  virtualselectedparentbluescore_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VirtualSelectedParentBlueScoreChangedNotificationMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 virtualSelectedParentBlueScore = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          virtualselectedparentbluescore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VirtualSelectedParentBlueScoreChangedNotificationMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 virtualSelectedParentBlueScore = 1;
  if (this->_internal_virtualselectedparentbluescore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_virtualselectedparentbluescore(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
  return target;
}

size_t VirtualSelectedParentBlueScoreChangedNotificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 virtualSelectedParentBlueScore = 1;
  if (this->_internal_virtualselectedparentbluescore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_virtualselectedparentbluescore());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VirtualSelectedParentBlueScoreChangedNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VirtualSelectedParentBlueScoreChangedNotificationMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VirtualSelectedParentBlueScoreChangedNotificationMessage::GetClassData() const { return &_class_data_; }

void VirtualSelectedParentBlueScoreChangedNotificationMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VirtualSelectedParentBlueScoreChangedNotificationMessage *>(to)->MergeFrom(
      static_cast<const VirtualSelectedParentBlueScoreChangedNotificationMessage &>(from));
}


void VirtualSelectedParentBlueScoreChangedNotificationMessage::MergeFrom(const VirtualSelectedParentBlueScoreChangedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_virtualselectedparentbluescore() != 0) {
    _internal_set_virtualselectedparentbluescore(from._internal_virtualselectedparentbluescore());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VirtualSelectedParentBlueScoreChangedNotificationMessage::CopyFrom(const VirtualSelectedParentBlueScoreChangedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtualSelectedParentBlueScoreChangedNotificationMessage::IsInitialized() const {
  return true;
}

void VirtualSelectedParentBlueScoreChangedNotificationMessage::InternalSwap(VirtualSelectedParentBlueScoreChangedNotificationMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(virtualselectedparentbluescore_, other->virtualselectedparentbluescore_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VirtualSelectedParentBlueScoreChangedNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[83]);
}

// ===================================================================

class NotifyVirtualDaaScoreChangedRequestMessage::_Internal {
 public:
};

NotifyVirtualDaaScoreChangedRequestMessage::NotifyVirtualDaaScoreChangedRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyVirtualDaaScoreChangedRequestMessage)
}
NotifyVirtualDaaScoreChangedRequestMessage::NotifyVirtualDaaScoreChangedRequestMessage(const NotifyVirtualDaaScoreChangedRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyVirtualDaaScoreChangedRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyVirtualDaaScoreChangedRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyVirtualDaaScoreChangedRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyVirtualDaaScoreChangedRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[84]);
}

// ===================================================================

class NotifyVirtualDaaScoreChangedResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const NotifyVirtualDaaScoreChangedResponseMessage* msg);
};

const ::protowire::RPCError&
NotifyVirtualDaaScoreChangedResponseMessage::_Internal::error(const NotifyVirtualDaaScoreChangedResponseMessage* msg) {
  return *msg->error_;
}
NotifyVirtualDaaScoreChangedResponseMessage::NotifyVirtualDaaScoreChangedResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
}
NotifyVirtualDaaScoreChangedResponseMessage::NotifyVirtualDaaScoreChangedResponseMessage(const NotifyVirtualDaaScoreChangedResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
}

inline void NotifyVirtualDaaScoreChangedResponseMessage::SharedCtor() {
error_ = nullptr;
}

NotifyVirtualDaaScoreChangedResponseMessage::~NotifyVirtualDaaScoreChangedResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyVirtualDaaScoreChangedResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void NotifyVirtualDaaScoreChangedResponseMessage::ArenaDtor(void* object) {
  NotifyVirtualDaaScoreChangedResponseMessage* _this = reinterpret_cast< NotifyVirtualDaaScoreChangedResponseMessage* >(object);
  (void)_this;
}
void NotifyVirtualDaaScoreChangedResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyVirtualDaaScoreChangedResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyVirtualDaaScoreChangedResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyVirtualDaaScoreChangedResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyVirtualDaaScoreChangedResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
  return target;
}

size_t NotifyVirtualDaaScoreChangedResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyVirtualDaaScoreChangedResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyVirtualDaaScoreChangedResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyVirtualDaaScoreChangedResponseMessage::GetClassData() const { return &_class_data_; }

void NotifyVirtualDaaScoreChangedResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyVirtualDaaScoreChangedResponseMessage *>(to)->MergeFrom(
      static_cast<const NotifyVirtualDaaScoreChangedResponseMessage &>(from));
}


void NotifyVirtualDaaScoreChangedResponseMessage::MergeFrom(const NotifyVirtualDaaScoreChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyVirtualDaaScoreChangedResponseMessage::CopyFrom(const NotifyVirtualDaaScoreChangedResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyVirtualDaaScoreChangedResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyVirtualDaaScoreChangedResponseMessage::IsInitialized() const {
  return true;
}

void NotifyVirtualDaaScoreChangedResponseMessage::InternalSwap(NotifyVirtualDaaScoreChangedResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyVirtualDaaScoreChangedResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[85]);
}

// ===================================================================

class VirtualDaaScoreChangedNotificationMessage::_Internal {
 public:
};

VirtualDaaScoreChangedNotificationMessage::VirtualDaaScoreChangedNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.VirtualDaaScoreChangedNotificationMessage)
}
VirtualDaaScoreChangedNotificationMessage::VirtualDaaScoreChangedNotificationMessage(const VirtualDaaScoreChangedNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  virtualdaascore_ = from.virtualdaascore_;
  // @@protoc_insertion_point(copy_constructor:protowire.VirtualDaaScoreChangedNotificationMessage)
}

inline void VirtualDaaScoreChangedNotificationMessage::SharedCtor() {
virtualdaascore_ = uint64_t{0u};
}

VirtualDaaScoreChangedNotificationMessage::~VirtualDaaScoreChangedNotificationMessage() {
  // @@protoc_insertion_point(destructor:protowire.VirtualDaaScoreChangedNotificationMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void VirtualDaaScoreChangedNotificationMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VirtualDaaScoreChangedNotificationMessage::ArenaDtor(void* object) {
  VirtualDaaScoreChangedNotificationMessage* _this = reinterpret_cast< VirtualDaaScoreChangedNotificationMessage* >(object);
  (void)_this;
}
void VirtualDaaScoreChangedNotificationMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VirtualDaaScoreChangedNotificationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VirtualDaaScoreChangedNotificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.VirtualDaaScoreChangedNotificationMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  virtualdaascore_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VirtualDaaScoreChangedNotificationMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 virtualDaaScore = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          virtualdaascore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VirtualDaaScoreChangedNotificationMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.VirtualDaaScoreChangedNotificationMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 virtualDaaScore = 1;
  if (this->_internal_virtualdaascore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_virtualdaascore(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.VirtualDaaScoreChangedNotificationMessage)
  return target;
}

size_t VirtualDaaScoreChangedNotificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.VirtualDaaScoreChangedNotificationMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 virtualDaaScore = 1;
  if (this->_internal_virtualdaascore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_virtualdaascore());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VirtualDaaScoreChangedNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VirtualDaaScoreChangedNotificationMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VirtualDaaScoreChangedNotificationMessage::GetClassData() const { return &_class_data_; }

void VirtualDaaScoreChangedNotificationMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VirtualDaaScoreChangedNotificationMessage *>(to)->MergeFrom(
      static_cast<const VirtualDaaScoreChangedNotificationMessage &>(from));
}


void VirtualDaaScoreChangedNotificationMessage::MergeFrom(const VirtualDaaScoreChangedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.VirtualDaaScoreChangedNotificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_virtualdaascore() != 0) {
    _internal_set_virtualdaascore(from._internal_virtualdaascore());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VirtualDaaScoreChangedNotificationMessage::CopyFrom(const VirtualDaaScoreChangedNotificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.VirtualDaaScoreChangedNotificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtualDaaScoreChangedNotificationMessage::IsInitialized() const {
  return true;
}

void VirtualDaaScoreChangedNotificationMessage::InternalSwap(VirtualDaaScoreChangedNotificationMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(virtualdaascore_, other->virtualdaascore_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VirtualDaaScoreChangedNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[86]);
}

// ===================================================================

class NotifyPruningPointUTXOSetOverrideRequestMessage::_Internal {
 public:
};

NotifyPruningPointUTXOSetOverrideRequestMessage::NotifyPruningPointUTXOSetOverrideRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyPruningPointUTXOSetOverrideRequestMessage)
}
NotifyPruningPointUTXOSetOverrideRequestMessage::NotifyPruningPointUTXOSetOverrideRequestMessage(const NotifyPruningPointUTXOSetOverrideRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyPruningPointUTXOSetOverrideRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyPruningPointUTXOSetOverrideRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyPruningPointUTXOSetOverrideRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyPruningPointUTXOSetOverrideRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[87]);
}

// ===================================================================

class NotifyPruningPointUTXOSetOverrideResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const NotifyPruningPointUTXOSetOverrideResponseMessage* msg);
};

const ::protowire::RPCError&
NotifyPruningPointUTXOSetOverrideResponseMessage::_Internal::error(const NotifyPruningPointUTXOSetOverrideResponseMessage* msg) {
  return *msg->error_;
}
NotifyPruningPointUTXOSetOverrideResponseMessage::NotifyPruningPointUTXOSetOverrideResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
}
NotifyPruningPointUTXOSetOverrideResponseMessage::NotifyPruningPointUTXOSetOverrideResponseMessage(const NotifyPruningPointUTXOSetOverrideResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
}

inline void NotifyPruningPointUTXOSetOverrideResponseMessage::SharedCtor() {
error_ = nullptr;
}

NotifyPruningPointUTXOSetOverrideResponseMessage::~NotifyPruningPointUTXOSetOverrideResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyPruningPointUTXOSetOverrideResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void NotifyPruningPointUTXOSetOverrideResponseMessage::ArenaDtor(void* object) {
  NotifyPruningPointUTXOSetOverrideResponseMessage* _this = reinterpret_cast< NotifyPruningPointUTXOSetOverrideResponseMessage* >(object);
  (void)_this;
}
void NotifyPruningPointUTXOSetOverrideResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyPruningPointUTXOSetOverrideResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyPruningPointUTXOSetOverrideResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyPruningPointUTXOSetOverrideResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyPruningPointUTXOSetOverrideResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
  return target;
}

size_t NotifyPruningPointUTXOSetOverrideResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyPruningPointUTXOSetOverrideResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyPruningPointUTXOSetOverrideResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyPruningPointUTXOSetOverrideResponseMessage::GetClassData() const { return &_class_data_; }

void NotifyPruningPointUTXOSetOverrideResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyPruningPointUTXOSetOverrideResponseMessage *>(to)->MergeFrom(
      static_cast<const NotifyPruningPointUTXOSetOverrideResponseMessage &>(from));
}


void NotifyPruningPointUTXOSetOverrideResponseMessage::MergeFrom(const NotifyPruningPointUTXOSetOverrideResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyPruningPointUTXOSetOverrideResponseMessage::CopyFrom(const NotifyPruningPointUTXOSetOverrideResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyPruningPointUTXOSetOverrideResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPruningPointUTXOSetOverrideResponseMessage::IsInitialized() const {
  return true;
}

void NotifyPruningPointUTXOSetOverrideResponseMessage::InternalSwap(NotifyPruningPointUTXOSetOverrideResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyPruningPointUTXOSetOverrideResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[88]);
}

// ===================================================================

class PruningPointUTXOSetOverrideNotificationMessage::_Internal {
 public:
};

PruningPointUTXOSetOverrideNotificationMessage::PruningPointUTXOSetOverrideNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.PruningPointUTXOSetOverrideNotificationMessage)
}
PruningPointUTXOSetOverrideNotificationMessage::PruningPointUTXOSetOverrideNotificationMessage(const PruningPointUTXOSetOverrideNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.PruningPointUTXOSetOverrideNotificationMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PruningPointUTXOSetOverrideNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PruningPointUTXOSetOverrideNotificationMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PruningPointUTXOSetOverrideNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[89]);
}

// ===================================================================

class StopNotifyingPruningPointUTXOSetOverrideRequestMessage::_Internal {
 public:
};

StopNotifyingPruningPointUTXOSetOverrideRequestMessage::StopNotifyingPruningPointUTXOSetOverrideRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.StopNotifyingPruningPointUTXOSetOverrideRequestMessage)
}
StopNotifyingPruningPointUTXOSetOverrideRequestMessage::StopNotifyingPruningPointUTXOSetOverrideRequestMessage(const StopNotifyingPruningPointUTXOSetOverrideRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.StopNotifyingPruningPointUTXOSetOverrideRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopNotifyingPruningPointUTXOSetOverrideRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopNotifyingPruningPointUTXOSetOverrideRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopNotifyingPruningPointUTXOSetOverrideRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[90]);
}

// ===================================================================

class StopNotifyingPruningPointUTXOSetOverrideResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const StopNotifyingPruningPointUTXOSetOverrideResponseMessage* msg);
};

const ::protowire::RPCError&
StopNotifyingPruningPointUTXOSetOverrideResponseMessage::_Internal::error(const StopNotifyingPruningPointUTXOSetOverrideResponseMessage* msg) {
  return *msg->error_;
}
StopNotifyingPruningPointUTXOSetOverrideResponseMessage::StopNotifyingPruningPointUTXOSetOverrideResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
}
StopNotifyingPruningPointUTXOSetOverrideResponseMessage::StopNotifyingPruningPointUTXOSetOverrideResponseMessage(const StopNotifyingPruningPointUTXOSetOverrideResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
}

inline void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::SharedCtor() {
error_ = nullptr;
}

StopNotifyingPruningPointUTXOSetOverrideResponseMessage::~StopNotifyingPruningPointUTXOSetOverrideResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::ArenaDtor(void* object) {
  StopNotifyingPruningPointUTXOSetOverrideResponseMessage* _this = reinterpret_cast< StopNotifyingPruningPointUTXOSetOverrideResponseMessage* >(object);
  (void)_this;
}
void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopNotifyingPruningPointUTXOSetOverrideResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopNotifyingPruningPointUTXOSetOverrideResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
  return target;
}

size_t StopNotifyingPruningPointUTXOSetOverrideResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopNotifyingPruningPointUTXOSetOverrideResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StopNotifyingPruningPointUTXOSetOverrideResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopNotifyingPruningPointUTXOSetOverrideResponseMessage::GetClassData() const { return &_class_data_; }

void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StopNotifyingPruningPointUTXOSetOverrideResponseMessage *>(to)->MergeFrom(
      static_cast<const StopNotifyingPruningPointUTXOSetOverrideResponseMessage &>(from));
}


void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::MergeFrom(const StopNotifyingPruningPointUTXOSetOverrideResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::CopyFrom(const StopNotifyingPruningPointUTXOSetOverrideResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopNotifyingPruningPointUTXOSetOverrideResponseMessage::IsInitialized() const {
  return true;
}

void StopNotifyingPruningPointUTXOSetOverrideResponseMessage::InternalSwap(StopNotifyingPruningPointUTXOSetOverrideResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopNotifyingPruningPointUTXOSetOverrideResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[91]);
}

// ===================================================================

class BanRequestMessage::_Internal {
 public:
};

BanRequestMessage::BanRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.BanRequestMessage)
}
BanRequestMessage::BanRequestMessage(const BanRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip().empty()) {
    ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.BanRequestMessage)
}

inline void BanRequestMessage::SharedCtor() {
ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BanRequestMessage::~BanRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.BanRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BanRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BanRequestMessage::ArenaDtor(void* object) {
  BanRequestMessage* _this = reinterpret_cast< BanRequestMessage* >(object);
  (void)_this;
}
void BanRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BanRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BanRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.BanRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BanRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.BanRequestMessage.ip"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BanRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.BanRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.BanRequestMessage.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.BanRequestMessage)
  return target;
}

size_t BanRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.BanRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BanRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BanRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BanRequestMessage::GetClassData() const { return &_class_data_; }

void BanRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BanRequestMessage *>(to)->MergeFrom(
      static_cast<const BanRequestMessage &>(from));
}


void BanRequestMessage::MergeFrom(const BanRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.BanRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _internal_set_ip(from._internal_ip());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BanRequestMessage::CopyFrom(const BanRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.BanRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BanRequestMessage::IsInitialized() const {
  return true;
}

void BanRequestMessage::InternalSwap(BanRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ip_, lhs_arena,
      &other->ip_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BanRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[92]);
}

// ===================================================================

class BanResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const BanResponseMessage* msg);
};

const ::protowire::RPCError&
BanResponseMessage::_Internal::error(const BanResponseMessage* msg) {
  return *msg->error_;
}
BanResponseMessage::BanResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.BanResponseMessage)
}
BanResponseMessage::BanResponseMessage(const BanResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.BanResponseMessage)
}

inline void BanResponseMessage::SharedCtor() {
error_ = nullptr;
}

BanResponseMessage::~BanResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.BanResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BanResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void BanResponseMessage::ArenaDtor(void* object) {
  BanResponseMessage* _this = reinterpret_cast< BanResponseMessage* >(object);
  (void)_this;
}
void BanResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BanResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BanResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.BanResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BanResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BanResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.BanResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.BanResponseMessage)
  return target;
}

size_t BanResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.BanResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BanResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BanResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BanResponseMessage::GetClassData() const { return &_class_data_; }

void BanResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BanResponseMessage *>(to)->MergeFrom(
      static_cast<const BanResponseMessage &>(from));
}


void BanResponseMessage::MergeFrom(const BanResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.BanResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BanResponseMessage::CopyFrom(const BanResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.BanResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BanResponseMessage::IsInitialized() const {
  return true;
}

void BanResponseMessage::InternalSwap(BanResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BanResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[93]);
}

// ===================================================================

class UnbanRequestMessage::_Internal {
 public:
};

UnbanRequestMessage::UnbanRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.UnbanRequestMessage)
}
UnbanRequestMessage::UnbanRequestMessage(const UnbanRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip().empty()) {
    ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.UnbanRequestMessage)
}

inline void UnbanRequestMessage::SharedCtor() {
ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnbanRequestMessage::~UnbanRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.UnbanRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UnbanRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnbanRequestMessage::ArenaDtor(void* object) {
  UnbanRequestMessage* _this = reinterpret_cast< UnbanRequestMessage* >(object);
  (void)_this;
}
void UnbanRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnbanRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnbanRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.UnbanRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnbanRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.UnbanRequestMessage.ip"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnbanRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.UnbanRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.UnbanRequestMessage.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.UnbanRequestMessage)
  return target;
}

size_t UnbanRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.UnbanRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnbanRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnbanRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnbanRequestMessage::GetClassData() const { return &_class_data_; }

void UnbanRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnbanRequestMessage *>(to)->MergeFrom(
      static_cast<const UnbanRequestMessage &>(from));
}


void UnbanRequestMessage::MergeFrom(const UnbanRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.UnbanRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _internal_set_ip(from._internal_ip());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnbanRequestMessage::CopyFrom(const UnbanRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.UnbanRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnbanRequestMessage::IsInitialized() const {
  return true;
}

void UnbanRequestMessage::InternalSwap(UnbanRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ip_, lhs_arena,
      &other->ip_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UnbanRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[94]);
}

// ===================================================================

class UnbanResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const UnbanResponseMessage* msg);
};

const ::protowire::RPCError&
UnbanResponseMessage::_Internal::error(const UnbanResponseMessage* msg) {
  return *msg->error_;
}
UnbanResponseMessage::UnbanResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.UnbanResponseMessage)
}
UnbanResponseMessage::UnbanResponseMessage(const UnbanResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.UnbanResponseMessage)
}

inline void UnbanResponseMessage::SharedCtor() {
error_ = nullptr;
}

UnbanResponseMessage::~UnbanResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.UnbanResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UnbanResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void UnbanResponseMessage::ArenaDtor(void* object) {
  UnbanResponseMessage* _this = reinterpret_cast< UnbanResponseMessage* >(object);
  (void)_this;
}
void UnbanResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnbanResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnbanResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.UnbanResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnbanResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnbanResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.UnbanResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.UnbanResponseMessage)
  return target;
}

size_t UnbanResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.UnbanResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnbanResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnbanResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnbanResponseMessage::GetClassData() const { return &_class_data_; }

void UnbanResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnbanResponseMessage *>(to)->MergeFrom(
      static_cast<const UnbanResponseMessage &>(from));
}


void UnbanResponseMessage::MergeFrom(const UnbanResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.UnbanResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnbanResponseMessage::CopyFrom(const UnbanResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.UnbanResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnbanResponseMessage::IsInitialized() const {
  return true;
}

void UnbanResponseMessage::InternalSwap(UnbanResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnbanResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[95]);
}

// ===================================================================

class GetInfoRequestMessage::_Internal {
 public:
};

GetInfoRequestMessage::GetInfoRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetInfoRequestMessage)
}
GetInfoRequestMessage::GetInfoRequestMessage(const GetInfoRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetInfoRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInfoRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInfoRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetInfoRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[96]);
}

// ===================================================================

class GetInfoResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetInfoResponseMessage* msg);
};

const ::protowire::RPCError&
GetInfoResponseMessage::_Internal::error(const GetInfoResponseMessage* msg) {
  return *msg->error_;
}
GetInfoResponseMessage::GetInfoResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetInfoResponseMessage)
}
GetInfoResponseMessage::GetInfoResponseMessage(const GetInfoResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  p2pid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    p2pid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_p2pid().empty()) {
    p2pid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_p2pid(), 
      GetArenaForAllocation());
  }
  serverversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    serverversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_serverversion().empty()) {
    serverversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serverversion(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  ::memcpy(&mempoolsize_, &from.mempoolsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&issynced_) -
    reinterpret_cast<char*>(&mempoolsize_)) + sizeof(issynced_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetInfoResponseMessage)
}

inline void GetInfoResponseMessage::SharedCtor() {
p2pid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  p2pid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
serverversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  serverversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&issynced_) -
    reinterpret_cast<char*>(&error_)) + sizeof(issynced_));
}

GetInfoResponseMessage::~GetInfoResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetInfoResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetInfoResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  p2pid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serverversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void GetInfoResponseMessage::ArenaDtor(void* object) {
  GetInfoResponseMessage* _this = reinterpret_cast< GetInfoResponseMessage* >(object);
  (void)_this;
}
void GetInfoResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInfoResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInfoResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetInfoResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  p2pid_.ClearToEmpty();
  serverversion_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  ::memset(&mempoolsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&issynced_) -
      reinterpret_cast<char*>(&mempoolsize_)) + sizeof(issynced_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInfoResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string p2pId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_p2pid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetInfoResponseMessage.p2pId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 mempoolSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          mempoolsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string serverVersion = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_serverversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetInfoResponseMessage.serverVersion"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isUtxoIndexed = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          isutxoindexed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isSynced = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          issynced_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInfoResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetInfoResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string p2pId = 1;
  if (!this->_internal_p2pid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_p2pid().data(), static_cast<int>(this->_internal_p2pid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetInfoResponseMessage.p2pId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_p2pid(), target);
  }

  // uint64 mempoolSize = 2;
  if (this->_internal_mempoolsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_mempoolsize(), target);
  }

  // string serverVersion = 3;
  if (!this->_internal_serverversion().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serverversion().data(), static_cast<int>(this->_internal_serverversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetInfoResponseMessage.serverVersion");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_serverversion(), target);
  }

  // bool isUtxoIndexed = 4;
  if (this->_internal_isutxoindexed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_isutxoindexed(), target);
  }

  // bool isSynced = 5;
  if (this->_internal_issynced() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_issynced(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetInfoResponseMessage)
  return target;
}

size_t GetInfoResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetInfoResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string p2pId = 1;
  if (!this->_internal_p2pid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_p2pid());
  }

  // string serverVersion = 3;
  if (!this->_internal_serverversion().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serverversion());
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 mempoolSize = 2;
  if (this->_internal_mempoolsize() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_mempoolsize());
  }

  // bool isUtxoIndexed = 4;
  if (this->_internal_isutxoindexed() != 0) {
    total_size += 1 + 1;
  }

  // bool isSynced = 5;
  if (this->_internal_issynced() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInfoResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInfoResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInfoResponseMessage::GetClassData() const { return &_class_data_; }

void GetInfoResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInfoResponseMessage *>(to)->MergeFrom(
      static_cast<const GetInfoResponseMessage &>(from));
}


void GetInfoResponseMessage::MergeFrom(const GetInfoResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetInfoResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_p2pid().empty()) {
    _internal_set_p2pid(from._internal_p2pid());
  }
  if (!from._internal_serverversion().empty()) {
    _internal_set_serverversion(from._internal_serverversion());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_mempoolsize() != 0) {
    _internal_set_mempoolsize(from._internal_mempoolsize());
  }
  if (from._internal_isutxoindexed() != 0) {
    _internal_set_isutxoindexed(from._internal_isutxoindexed());
  }
  if (from._internal_issynced() != 0) {
    _internal_set_issynced(from._internal_issynced());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInfoResponseMessage::CopyFrom(const GetInfoResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetInfoResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoResponseMessage::IsInitialized() const {
  return true;
}

void GetInfoResponseMessage::InternalSwap(GetInfoResponseMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &p2pid_, lhs_arena,
      &other->p2pid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &serverversion_, lhs_arena,
      &other->serverversion_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetInfoResponseMessage, issynced_)
      + sizeof(GetInfoResponseMessage::issynced_)
      - PROTOBUF_FIELD_OFFSET(GetInfoResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInfoResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[97]);
}

// ===================================================================

class EstimateNetworkHashesPerSecondRequestMessage::_Internal {
 public:
};

EstimateNetworkHashesPerSecondRequestMessage::EstimateNetworkHashesPerSecondRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.EstimateNetworkHashesPerSecondRequestMessage)
}
EstimateNetworkHashesPerSecondRequestMessage::EstimateNetworkHashesPerSecondRequestMessage(const EstimateNetworkHashesPerSecondRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  starthash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    starthash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starthash().empty()) {
    starthash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_starthash(), 
      GetArenaForAllocation());
  }
  windowsize_ = from.windowsize_;
  // @@protoc_insertion_point(copy_constructor:protowire.EstimateNetworkHashesPerSecondRequestMessage)
}

inline void EstimateNetworkHashesPerSecondRequestMessage::SharedCtor() {
starthash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  starthash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
windowsize_ = 0u;
}

EstimateNetworkHashesPerSecondRequestMessage::~EstimateNetworkHashesPerSecondRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.EstimateNetworkHashesPerSecondRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EstimateNetworkHashesPerSecondRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  starthash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EstimateNetworkHashesPerSecondRequestMessage::ArenaDtor(void* object) {
  EstimateNetworkHashesPerSecondRequestMessage* _this = reinterpret_cast< EstimateNetworkHashesPerSecondRequestMessage* >(object);
  (void)_this;
}
void EstimateNetworkHashesPerSecondRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstimateNetworkHashesPerSecondRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EstimateNetworkHashesPerSecondRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.EstimateNetworkHashesPerSecondRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  starthash_.ClearToEmpty();
  windowsize_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstimateNetworkHashesPerSecondRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 windowSize = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          windowsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string startHash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_starthash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.EstimateNetworkHashesPerSecondRequestMessage.startHash"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EstimateNetworkHashesPerSecondRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.EstimateNetworkHashesPerSecondRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 windowSize = 1;
  if (this->_internal_windowsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_windowsize(), target);
  }

  // string startHash = 2;
  if (!this->_internal_starthash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starthash().data(), static_cast<int>(this->_internal_starthash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.EstimateNetworkHashesPerSecondRequestMessage.startHash");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_starthash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.EstimateNetworkHashesPerSecondRequestMessage)
  return target;
}

size_t EstimateNetworkHashesPerSecondRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.EstimateNetworkHashesPerSecondRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string startHash = 2;
  if (!this->_internal_starthash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starthash());
  }

  // uint32 windowSize = 1;
  if (this->_internal_windowsize() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_windowsize());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EstimateNetworkHashesPerSecondRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EstimateNetworkHashesPerSecondRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EstimateNetworkHashesPerSecondRequestMessage::GetClassData() const { return &_class_data_; }

void EstimateNetworkHashesPerSecondRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EstimateNetworkHashesPerSecondRequestMessage *>(to)->MergeFrom(
      static_cast<const EstimateNetworkHashesPerSecondRequestMessage &>(from));
}


void EstimateNetworkHashesPerSecondRequestMessage::MergeFrom(const EstimateNetworkHashesPerSecondRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.EstimateNetworkHashesPerSecondRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starthash().empty()) {
    _internal_set_starthash(from._internal_starthash());
  }
  if (from._internal_windowsize() != 0) {
    _internal_set_windowsize(from._internal_windowsize());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EstimateNetworkHashesPerSecondRequestMessage::CopyFrom(const EstimateNetworkHashesPerSecondRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.EstimateNetworkHashesPerSecondRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimateNetworkHashesPerSecondRequestMessage::IsInitialized() const {
  return true;
}

void EstimateNetworkHashesPerSecondRequestMessage::InternalSwap(EstimateNetworkHashesPerSecondRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &starthash_, lhs_arena,
      &other->starthash_, rhs_arena
  );
  swap(windowsize_, other->windowsize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EstimateNetworkHashesPerSecondRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[98]);
}

// ===================================================================

class EstimateNetworkHashesPerSecondResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const EstimateNetworkHashesPerSecondResponseMessage* msg);
};

const ::protowire::RPCError&
EstimateNetworkHashesPerSecondResponseMessage::_Internal::error(const EstimateNetworkHashesPerSecondResponseMessage* msg) {
  return *msg->error_;
}
EstimateNetworkHashesPerSecondResponseMessage::EstimateNetworkHashesPerSecondResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.EstimateNetworkHashesPerSecondResponseMessage)
}
EstimateNetworkHashesPerSecondResponseMessage::EstimateNetworkHashesPerSecondResponseMessage(const EstimateNetworkHashesPerSecondResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  networkhashespersecond_ = from.networkhashespersecond_;
  // @@protoc_insertion_point(copy_constructor:protowire.EstimateNetworkHashesPerSecondResponseMessage)
}

inline void EstimateNetworkHashesPerSecondResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&networkhashespersecond_) -
    reinterpret_cast<char*>(&error_)) + sizeof(networkhashespersecond_));
}

EstimateNetworkHashesPerSecondResponseMessage::~EstimateNetworkHashesPerSecondResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.EstimateNetworkHashesPerSecondResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EstimateNetworkHashesPerSecondResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void EstimateNetworkHashesPerSecondResponseMessage::ArenaDtor(void* object) {
  EstimateNetworkHashesPerSecondResponseMessage* _this = reinterpret_cast< EstimateNetworkHashesPerSecondResponseMessage* >(object);
  (void)_this;
}
void EstimateNetworkHashesPerSecondResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstimateNetworkHashesPerSecondResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EstimateNetworkHashesPerSecondResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.EstimateNetworkHashesPerSecondResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  networkhashespersecond_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstimateNetworkHashesPerSecondResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 networkHashesPerSecond = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          networkhashespersecond_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EstimateNetworkHashesPerSecondResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.EstimateNetworkHashesPerSecondResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 networkHashesPerSecond = 1;
  if (this->_internal_networkhashespersecond() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_networkhashespersecond(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.EstimateNetworkHashesPerSecondResponseMessage)
  return target;
}

size_t EstimateNetworkHashesPerSecondResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.EstimateNetworkHashesPerSecondResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 networkHashesPerSecond = 1;
  if (this->_internal_networkhashespersecond() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_networkhashespersecond());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EstimateNetworkHashesPerSecondResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EstimateNetworkHashesPerSecondResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EstimateNetworkHashesPerSecondResponseMessage::GetClassData() const { return &_class_data_; }

void EstimateNetworkHashesPerSecondResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EstimateNetworkHashesPerSecondResponseMessage *>(to)->MergeFrom(
      static_cast<const EstimateNetworkHashesPerSecondResponseMessage &>(from));
}


void EstimateNetworkHashesPerSecondResponseMessage::MergeFrom(const EstimateNetworkHashesPerSecondResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.EstimateNetworkHashesPerSecondResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_networkhashespersecond() != 0) {
    _internal_set_networkhashespersecond(from._internal_networkhashespersecond());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EstimateNetworkHashesPerSecondResponseMessage::CopyFrom(const EstimateNetworkHashesPerSecondResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.EstimateNetworkHashesPerSecondResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimateNetworkHashesPerSecondResponseMessage::IsInitialized() const {
  return true;
}

void EstimateNetworkHashesPerSecondResponseMessage::InternalSwap(EstimateNetworkHashesPerSecondResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EstimateNetworkHashesPerSecondResponseMessage, networkhashespersecond_)
      + sizeof(EstimateNetworkHashesPerSecondResponseMessage::networkhashespersecond_)
      - PROTOBUF_FIELD_OFFSET(EstimateNetworkHashesPerSecondResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EstimateNetworkHashesPerSecondResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[99]);
}

// ===================================================================

class NotifyNewBlockTemplateRequestMessage::_Internal {
 public:
};

NotifyNewBlockTemplateRequestMessage::NotifyNewBlockTemplateRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyNewBlockTemplateRequestMessage)
}
NotifyNewBlockTemplateRequestMessage::NotifyNewBlockTemplateRequestMessage(const NotifyNewBlockTemplateRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyNewBlockTemplateRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyNewBlockTemplateRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyNewBlockTemplateRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyNewBlockTemplateRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[100]);
}

// ===================================================================

class NotifyNewBlockTemplateResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const NotifyNewBlockTemplateResponseMessage* msg);
};

const ::protowire::RPCError&
NotifyNewBlockTemplateResponseMessage::_Internal::error(const NotifyNewBlockTemplateResponseMessage* msg) {
  return *msg->error_;
}
NotifyNewBlockTemplateResponseMessage::NotifyNewBlockTemplateResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.NotifyNewBlockTemplateResponseMessage)
}
NotifyNewBlockTemplateResponseMessage::NotifyNewBlockTemplateResponseMessage(const NotifyNewBlockTemplateResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.NotifyNewBlockTemplateResponseMessage)
}

inline void NotifyNewBlockTemplateResponseMessage::SharedCtor() {
error_ = nullptr;
}

NotifyNewBlockTemplateResponseMessage::~NotifyNewBlockTemplateResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.NotifyNewBlockTemplateResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NotifyNewBlockTemplateResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void NotifyNewBlockTemplateResponseMessage::ArenaDtor(void* object) {
  NotifyNewBlockTemplateResponseMessage* _this = reinterpret_cast< NotifyNewBlockTemplateResponseMessage* >(object);
  (void)_this;
}
void NotifyNewBlockTemplateResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyNewBlockTemplateResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NotifyNewBlockTemplateResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.NotifyNewBlockTemplateResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyNewBlockTemplateResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyNewBlockTemplateResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.NotifyNewBlockTemplateResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.NotifyNewBlockTemplateResponseMessage)
  return target;
}

size_t NotifyNewBlockTemplateResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.NotifyNewBlockTemplateResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyNewBlockTemplateResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NotifyNewBlockTemplateResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyNewBlockTemplateResponseMessage::GetClassData() const { return &_class_data_; }

void NotifyNewBlockTemplateResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NotifyNewBlockTemplateResponseMessage *>(to)->MergeFrom(
      static_cast<const NotifyNewBlockTemplateResponseMessage &>(from));
}


void NotifyNewBlockTemplateResponseMessage::MergeFrom(const NotifyNewBlockTemplateResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.NotifyNewBlockTemplateResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyNewBlockTemplateResponseMessage::CopyFrom(const NotifyNewBlockTemplateResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.NotifyNewBlockTemplateResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyNewBlockTemplateResponseMessage::IsInitialized() const {
  return true;
}

void NotifyNewBlockTemplateResponseMessage::InternalSwap(NotifyNewBlockTemplateResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyNewBlockTemplateResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[101]);
}

// ===================================================================

class NewBlockTemplateNotificationMessage::_Internal {
 public:
};

NewBlockTemplateNotificationMessage::NewBlockTemplateNotificationMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.NewBlockTemplateNotificationMessage)
}
NewBlockTemplateNotificationMessage::NewBlockTemplateNotificationMessage(const NewBlockTemplateNotificationMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.NewBlockTemplateNotificationMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewBlockTemplateNotificationMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewBlockTemplateNotificationMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NewBlockTemplateNotificationMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[102]);
}

// ===================================================================

class MempoolEntryByAddress::_Internal {
 public:
};

MempoolEntryByAddress::MempoolEntryByAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  sending_(arena),
  receiving_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.MempoolEntryByAddress)
}
MempoolEntryByAddress::MempoolEntryByAddress(const MempoolEntryByAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sending_(from.sending_),
      receiving_(from.receiving_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protowire.MempoolEntryByAddress)
}

inline void MempoolEntryByAddress::SharedCtor() {
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MempoolEntryByAddress::~MempoolEntryByAddress() {
  // @@protoc_insertion_point(destructor:protowire.MempoolEntryByAddress)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MempoolEntryByAddress::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MempoolEntryByAddress::ArenaDtor(void* object) {
  MempoolEntryByAddress* _this = reinterpret_cast< MempoolEntryByAddress* >(object);
  (void)_this;
}
void MempoolEntryByAddress::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MempoolEntryByAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MempoolEntryByAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.MempoolEntryByAddress)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sending_.Clear();
  receiving_.Clear();
  address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MempoolEntryByAddress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.MempoolEntryByAddress.address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.MempoolEntry sending = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sending(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .protowire.MempoolEntry receiving = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_receiving(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MempoolEntryByAddress::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.MempoolEntryByAddress)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.MempoolEntryByAddress.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // repeated .protowire.MempoolEntry sending = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sending_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_sending(i), target, stream);
  }

  // repeated .protowire.MempoolEntry receiving = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_receiving_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_receiving(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.MempoolEntryByAddress)
  return target;
}

size_t MempoolEntryByAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.MempoolEntryByAddress)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.MempoolEntry sending = 2;
  total_size += 1UL * this->_internal_sending_size();
  for (const auto& msg : this->sending_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .protowire.MempoolEntry receiving = 3;
  total_size += 1UL * this->_internal_receiving_size();
  for (const auto& msg : this->receiving_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MempoolEntryByAddress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MempoolEntryByAddress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MempoolEntryByAddress::GetClassData() const { return &_class_data_; }

void MempoolEntryByAddress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MempoolEntryByAddress *>(to)->MergeFrom(
      static_cast<const MempoolEntryByAddress &>(from));
}


void MempoolEntryByAddress::MergeFrom(const MempoolEntryByAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.MempoolEntryByAddress)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  sending_.MergeFrom(from.sending_);
  receiving_.MergeFrom(from.receiving_);
  if (!from._internal_address().empty()) {
    _internal_set_address(from._internal_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MempoolEntryByAddress::CopyFrom(const MempoolEntryByAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.MempoolEntryByAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MempoolEntryByAddress::IsInitialized() const {
  return true;
}

void MempoolEntryByAddress::InternalSwap(MempoolEntryByAddress* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  sending_.InternalSwap(&other->sending_);
  receiving_.InternalSwap(&other->receiving_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &address_, lhs_arena,
      &other->address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MempoolEntryByAddress::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[103]);
}

// ===================================================================

class GetMempoolEntriesByAddressesRequestMessage::_Internal {
 public:
};

GetMempoolEntriesByAddressesRequestMessage::GetMempoolEntriesByAddressesRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  addresses_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetMempoolEntriesByAddressesRequestMessage)
}
GetMempoolEntriesByAddressesRequestMessage::GetMempoolEntriesByAddressesRequestMessage(const GetMempoolEntriesByAddressesRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&includeorphanpool_, &from.includeorphanpool_,
    static_cast<size_t>(reinterpret_cast<char*>(&filtertransactionpool_) -
    reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetMempoolEntriesByAddressesRequestMessage)
}

inline void GetMempoolEntriesByAddressesRequestMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&includeorphanpool_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&filtertransactionpool_) -
    reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
}

GetMempoolEntriesByAddressesRequestMessage::~GetMempoolEntriesByAddressesRequestMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetMempoolEntriesByAddressesRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMempoolEntriesByAddressesRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMempoolEntriesByAddressesRequestMessage::ArenaDtor(void* object) {
  GetMempoolEntriesByAddressesRequestMessage* _this = reinterpret_cast< GetMempoolEntriesByAddressesRequestMessage* >(object);
  (void)_this;
}
void GetMempoolEntriesByAddressesRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMempoolEntriesByAddressesRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMempoolEntriesByAddressesRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetMempoolEntriesByAddressesRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  ::memset(&includeorphanpool_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filtertransactionpool_) -
      reinterpret_cast<char*>(&includeorphanpool_)) + sizeof(filtertransactionpool_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMempoolEntriesByAddressesRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string addresses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_addresses();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protowire.GetMempoolEntriesByAddressesRequestMessage.addresses"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool includeOrphanPool = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          includeorphanpool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool filterTransactionPool = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          filtertransactionpool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMempoolEntriesByAddressesRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetMempoolEntriesByAddressesRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string addresses = 1;
  for (int i = 0, n = this->_internal_addresses_size(); i < n; i++) {
    const auto& s = this->_internal_addresses(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protowire.GetMempoolEntriesByAddressesRequestMessage.addresses");
    target = stream->WriteString(1, s, target);
  }

  // bool includeOrphanPool = 2;
  if (this->_internal_includeorphanpool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_includeorphanpool(), target);
  }

  // bool filterTransactionPool = 3;
  if (this->_internal_filtertransactionpool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_filtertransactionpool(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetMempoolEntriesByAddressesRequestMessage)
  return target;
}

size_t GetMempoolEntriesByAddressesRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetMempoolEntriesByAddressesRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string addresses = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(addresses_.size());
  for (int i = 0, n = addresses_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      addresses_.Get(i));
  }

  // bool includeOrphanPool = 2;
  if (this->_internal_includeorphanpool() != 0) {
    total_size += 1 + 1;
  }

  // bool filterTransactionPool = 3;
  if (this->_internal_filtertransactionpool() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMempoolEntriesByAddressesRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMempoolEntriesByAddressesRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMempoolEntriesByAddressesRequestMessage::GetClassData() const { return &_class_data_; }

void GetMempoolEntriesByAddressesRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMempoolEntriesByAddressesRequestMessage *>(to)->MergeFrom(
      static_cast<const GetMempoolEntriesByAddressesRequestMessage &>(from));
}


void GetMempoolEntriesByAddressesRequestMessage::MergeFrom(const GetMempoolEntriesByAddressesRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetMempoolEntriesByAddressesRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from._internal_includeorphanpool() != 0) {
    _internal_set_includeorphanpool(from._internal_includeorphanpool());
  }
  if (from._internal_filtertransactionpool() != 0) {
    _internal_set_filtertransactionpool(from._internal_filtertransactionpool());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMempoolEntriesByAddressesRequestMessage::CopyFrom(const GetMempoolEntriesByAddressesRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetMempoolEntriesByAddressesRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolEntriesByAddressesRequestMessage::IsInitialized() const {
  return true;
}

void GetMempoolEntriesByAddressesRequestMessage::InternalSwap(GetMempoolEntriesByAddressesRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  addresses_.InternalSwap(&other->addresses_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMempoolEntriesByAddressesRequestMessage, filtertransactionpool_)
      + sizeof(GetMempoolEntriesByAddressesRequestMessage::filtertransactionpool_)
      - PROTOBUF_FIELD_OFFSET(GetMempoolEntriesByAddressesRequestMessage, includeorphanpool_)>(
          reinterpret_cast<char*>(&includeorphanpool_),
          reinterpret_cast<char*>(&other->includeorphanpool_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMempoolEntriesByAddressesRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[104]);
}

// ===================================================================

class GetMempoolEntriesByAddressesResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetMempoolEntriesByAddressesResponseMessage* msg);
};

const ::protowire::RPCError&
GetMempoolEntriesByAddressesResponseMessage::_Internal::error(const GetMempoolEntriesByAddressesResponseMessage* msg) {
  return *msg->error_;
}
GetMempoolEntriesByAddressesResponseMessage::GetMempoolEntriesByAddressesResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetMempoolEntriesByAddressesResponseMessage)
}
GetMempoolEntriesByAddressesResponseMessage::GetMempoolEntriesByAddressesResponseMessage(const GetMempoolEntriesByAddressesResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protowire.GetMempoolEntriesByAddressesResponseMessage)
}

inline void GetMempoolEntriesByAddressesResponseMessage::SharedCtor() {
error_ = nullptr;
}

GetMempoolEntriesByAddressesResponseMessage::~GetMempoolEntriesByAddressesResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetMempoolEntriesByAddressesResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMempoolEntriesByAddressesResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetMempoolEntriesByAddressesResponseMessage::ArenaDtor(void* object) {
  GetMempoolEntriesByAddressesResponseMessage* _this = reinterpret_cast< GetMempoolEntriesByAddressesResponseMessage* >(object);
  (void)_this;
}
void GetMempoolEntriesByAddressesResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMempoolEntriesByAddressesResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMempoolEntriesByAddressesResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetMempoolEntriesByAddressesResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMempoolEntriesByAddressesResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .protowire.MempoolEntryByAddress entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMempoolEntriesByAddressesResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetMempoolEntriesByAddressesResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protowire.MempoolEntryByAddress entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entries(i), target, stream);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetMempoolEntriesByAddressesResponseMessage)
  return target;
}

size_t GetMempoolEntriesByAddressesResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetMempoolEntriesByAddressesResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protowire.MempoolEntryByAddress entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMempoolEntriesByAddressesResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMempoolEntriesByAddressesResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMempoolEntriesByAddressesResponseMessage::GetClassData() const { return &_class_data_; }

void GetMempoolEntriesByAddressesResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMempoolEntriesByAddressesResponseMessage *>(to)->MergeFrom(
      static_cast<const GetMempoolEntriesByAddressesResponseMessage &>(from));
}


void GetMempoolEntriesByAddressesResponseMessage::MergeFrom(const GetMempoolEntriesByAddressesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetMempoolEntriesByAddressesResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMempoolEntriesByAddressesResponseMessage::CopyFrom(const GetMempoolEntriesByAddressesResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetMempoolEntriesByAddressesResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMempoolEntriesByAddressesResponseMessage::IsInitialized() const {
  return true;
}

void GetMempoolEntriesByAddressesResponseMessage::InternalSwap(GetMempoolEntriesByAddressesResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  swap(error_, other->error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMempoolEntriesByAddressesResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[105]);
}

// ===================================================================

class GetCoinSupplyRequestMessage::_Internal {
 public:
};

GetCoinSupplyRequestMessage::GetCoinSupplyRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:protowire.GetCoinSupplyRequestMessage)
}
GetCoinSupplyRequestMessage::GetCoinSupplyRequestMessage(const GetCoinSupplyRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protowire.GetCoinSupplyRequestMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCoinSupplyRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCoinSupplyRequestMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetCoinSupplyRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[106]);
}

// ===================================================================

class GetCoinSupplyResponseMessage::_Internal {
 public:
  static const ::protowire::RPCError& error(const GetCoinSupplyResponseMessage* msg);
};

const ::protowire::RPCError&
GetCoinSupplyResponseMessage::_Internal::error(const GetCoinSupplyResponseMessage* msg) {
  return *msg->error_;
}
GetCoinSupplyResponseMessage::GetCoinSupplyResponseMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:protowire.GetCoinSupplyResponseMessage)
}
GetCoinSupplyResponseMessage::GetCoinSupplyResponseMessage(const GetCoinSupplyResponseMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_error()) {
    error_ = new ::protowire::RPCError(*from.error_);
  } else {
    error_ = nullptr;
  }
  ::memcpy(&maxsompi_, &from.maxsompi_,
    static_cast<size_t>(reinterpret_cast<char*>(&circulatingsompi_) -
    reinterpret_cast<char*>(&maxsompi_)) + sizeof(circulatingsompi_));
  // @@protoc_insertion_point(copy_constructor:protowire.GetCoinSupplyResponseMessage)
}

inline void GetCoinSupplyResponseMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&error_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&circulatingsompi_) -
    reinterpret_cast<char*>(&error_)) + sizeof(circulatingsompi_));
}

GetCoinSupplyResponseMessage::~GetCoinSupplyResponseMessage() {
  // @@protoc_insertion_point(destructor:protowire.GetCoinSupplyResponseMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetCoinSupplyResponseMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete error_;
}

void GetCoinSupplyResponseMessage::ArenaDtor(void* object) {
  GetCoinSupplyResponseMessage* _this = reinterpret_cast< GetCoinSupplyResponseMessage* >(object);
  (void)_this;
}
void GetCoinSupplyResponseMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCoinSupplyResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCoinSupplyResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protowire.GetCoinSupplyResponseMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  ::memset(&maxsompi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&circulatingsompi_) -
      reinterpret_cast<char*>(&maxsompi_)) + sizeof(circulatingsompi_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCoinSupplyResponseMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 maxSompi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          maxsompi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 circulatingSompi = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          circulatingsompi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .protowire.RPCError error = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCoinSupplyResponseMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protowire.GetCoinSupplyResponseMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 maxSompi = 1;
  if (this->_internal_maxsompi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_maxsompi(), target);
  }

  // uint64 circulatingSompi = 2;
  if (this->_internal_circulatingsompi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_circulatingsompi(), target);
  }

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1000, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protowire.GetCoinSupplyResponseMessage)
  return target;
}

size_t GetCoinSupplyResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protowire.GetCoinSupplyResponseMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protowire.RPCError error = 1000;
  if (this->_internal_has_error()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 maxSompi = 1;
  if (this->_internal_maxsompi() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_maxsompi());
  }

  // uint64 circulatingSompi = 2;
  if (this->_internal_circulatingsompi() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_circulatingsompi());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCoinSupplyResponseMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCoinSupplyResponseMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCoinSupplyResponseMessage::GetClassData() const { return &_class_data_; }

void GetCoinSupplyResponseMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetCoinSupplyResponseMessage *>(to)->MergeFrom(
      static_cast<const GetCoinSupplyResponseMessage &>(from));
}


void GetCoinSupplyResponseMessage::MergeFrom(const GetCoinSupplyResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protowire.GetCoinSupplyResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _internal_mutable_error()->::protowire::RPCError::MergeFrom(from._internal_error());
  }
  if (from._internal_maxsompi() != 0) {
    _internal_set_maxsompi(from._internal_maxsompi());
  }
  if (from._internal_circulatingsompi() != 0) {
    _internal_set_circulatingsompi(from._internal_circulatingsompi());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCoinSupplyResponseMessage::CopyFrom(const GetCoinSupplyResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protowire.GetCoinSupplyResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCoinSupplyResponseMessage::IsInitialized() const {
  return true;
}

void GetCoinSupplyResponseMessage::InternalSwap(GetCoinSupplyResponseMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCoinSupplyResponseMessage, circulatingsompi_)
      + sizeof(GetCoinSupplyResponseMessage::circulatingsompi_)
      - PROTOBUF_FIELD_OFFSET(GetCoinSupplyResponseMessage, error_)>(
          reinterpret_cast<char*>(&error_),
          reinterpret_cast<char*>(&other->error_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCoinSupplyResponseMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2eproto_getter, &descriptor_table_rpc_2eproto_once,
      file_level_metadata_rpc_2eproto[107]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protowire
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protowire::RPCError* Arena::CreateMaybeMessage< ::protowire::RPCError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RPCError >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcBlock* Arena::CreateMaybeMessage< ::protowire::RpcBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcBlockHeader* Arena::CreateMaybeMessage< ::protowire::RpcBlockHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcBlockHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcBlockLevelParents* Arena::CreateMaybeMessage< ::protowire::RpcBlockLevelParents >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcBlockLevelParents >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcBlockVerboseData* Arena::CreateMaybeMessage< ::protowire::RpcBlockVerboseData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcBlockVerboseData >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcTransaction* Arena::CreateMaybeMessage< ::protowire::RpcTransaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcTransaction >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcTransactionInput* Arena::CreateMaybeMessage< ::protowire::RpcTransactionInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcTransactionInput >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcScriptPublicKey* Arena::CreateMaybeMessage< ::protowire::RpcScriptPublicKey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcScriptPublicKey >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcTransactionOutput* Arena::CreateMaybeMessage< ::protowire::RpcTransactionOutput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcTransactionOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcOutpoint* Arena::CreateMaybeMessage< ::protowire::RpcOutpoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcOutpoint >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcUtxoEntry* Arena::CreateMaybeMessage< ::protowire::RpcUtxoEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcUtxoEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcTransactionVerboseData* Arena::CreateMaybeMessage< ::protowire::RpcTransactionVerboseData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcTransactionVerboseData >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcTransactionInputVerboseData* Arena::CreateMaybeMessage< ::protowire::RpcTransactionInputVerboseData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcTransactionInputVerboseData >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::RpcTransactionOutputVerboseData* Arena::CreateMaybeMessage< ::protowire::RpcTransactionOutputVerboseData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::RpcTransactionOutputVerboseData >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetCurrentNetworkRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetCurrentNetworkRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetCurrentNetworkRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetCurrentNetworkResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetCurrentNetworkResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetCurrentNetworkResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::SubmitBlockRequestMessage* Arena::CreateMaybeMessage< ::protowire::SubmitBlockRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::SubmitBlockRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::SubmitBlockResponseMessage* Arena::CreateMaybeMessage< ::protowire::SubmitBlockResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::SubmitBlockResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlockTemplateRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetBlockTemplateRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlockTemplateRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlockTemplateResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetBlockTemplateResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlockTemplateResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyBlockAddedRequestMessage* Arena::CreateMaybeMessage< ::protowire::NotifyBlockAddedRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyBlockAddedRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyBlockAddedResponseMessage* Arena::CreateMaybeMessage< ::protowire::NotifyBlockAddedResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyBlockAddedResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::BlockAddedNotificationMessage* Arena::CreateMaybeMessage< ::protowire::BlockAddedNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::BlockAddedNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetPeerAddressesRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetPeerAddressesRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetPeerAddressesRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetPeerAddressesResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetPeerAddressesResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetPeerAddressesResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetPeerAddressesKnownAddressMessage* Arena::CreateMaybeMessage< ::protowire::GetPeerAddressesKnownAddressMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetPeerAddressesKnownAddressMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetSelectedTipHashRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetSelectedTipHashRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetSelectedTipHashRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetSelectedTipHashResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetSelectedTipHashResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetSelectedTipHashResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetMempoolEntryRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetMempoolEntryRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetMempoolEntryRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetMempoolEntryResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetMempoolEntryResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetMempoolEntryResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetMempoolEntriesRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetMempoolEntriesRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetMempoolEntriesRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetMempoolEntriesResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetMempoolEntriesResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetMempoolEntriesResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::MempoolEntry* Arena::CreateMaybeMessage< ::protowire::MempoolEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::MempoolEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetConnectedPeerInfoRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetConnectedPeerInfoRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetConnectedPeerInfoRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetConnectedPeerInfoResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetConnectedPeerInfoResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetConnectedPeerInfoResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetConnectedPeerInfoMessage* Arena::CreateMaybeMessage< ::protowire::GetConnectedPeerInfoMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetConnectedPeerInfoMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::AddPeerRequestMessage* Arena::CreateMaybeMessage< ::protowire::AddPeerRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::AddPeerRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::AddPeerResponseMessage* Arena::CreateMaybeMessage< ::protowire::AddPeerResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::AddPeerResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::SubmitTransactionRequestMessage* Arena::CreateMaybeMessage< ::protowire::SubmitTransactionRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::SubmitTransactionRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::SubmitTransactionResponseMessage* Arena::CreateMaybeMessage< ::protowire::SubmitTransactionResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::SubmitTransactionResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage* Arena::CreateMaybeMessage< ::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyVirtualSelectedParentChainChangedRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage* Arena::CreateMaybeMessage< ::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyVirtualSelectedParentChainChangedResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::VirtualSelectedParentChainChangedNotificationMessage* Arena::CreateMaybeMessage< ::protowire::VirtualSelectedParentChainChangedNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::VirtualSelectedParentChainChangedNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlockRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetBlockRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlockRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlockResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetBlockResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlockResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetSubnetworkRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetSubnetworkRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetSubnetworkRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetSubnetworkResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetSubnetworkResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetSubnetworkResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetVirtualSelectedParentChainFromBlockRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::AcceptedTransactionIds* Arena::CreateMaybeMessage< ::protowire::AcceptedTransactionIds >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::AcceptedTransactionIds >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetVirtualSelectedParentChainFromBlockResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlocksRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetBlocksRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlocksRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlocksResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetBlocksResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlocksResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlockCountRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetBlockCountRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlockCountRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlockCountResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetBlockCountResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlockCountResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlockDagInfoRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetBlockDagInfoRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlockDagInfoRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBlockDagInfoResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetBlockDagInfoResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBlockDagInfoResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::ResolveFinalityConflictRequestMessage* Arena::CreateMaybeMessage< ::protowire::ResolveFinalityConflictRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::ResolveFinalityConflictRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::ResolveFinalityConflictResponseMessage* Arena::CreateMaybeMessage< ::protowire::ResolveFinalityConflictResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::ResolveFinalityConflictResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyFinalityConflictsRequestMessage* Arena::CreateMaybeMessage< ::protowire::NotifyFinalityConflictsRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyFinalityConflictsRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyFinalityConflictsResponseMessage* Arena::CreateMaybeMessage< ::protowire::NotifyFinalityConflictsResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyFinalityConflictsResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::FinalityConflictNotificationMessage* Arena::CreateMaybeMessage< ::protowire::FinalityConflictNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::FinalityConflictNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::FinalityConflictResolvedNotificationMessage* Arena::CreateMaybeMessage< ::protowire::FinalityConflictResolvedNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::FinalityConflictResolvedNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::ShutDownRequestMessage* Arena::CreateMaybeMessage< ::protowire::ShutDownRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::ShutDownRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::ShutDownResponseMessage* Arena::CreateMaybeMessage< ::protowire::ShutDownResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::ShutDownResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetHeadersRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetHeadersRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetHeadersRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetHeadersResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetHeadersResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetHeadersResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyUtxosChangedRequestMessage* Arena::CreateMaybeMessage< ::protowire::NotifyUtxosChangedRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyUtxosChangedRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyUtxosChangedResponseMessage* Arena::CreateMaybeMessage< ::protowire::NotifyUtxosChangedResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyUtxosChangedResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::UtxosChangedNotificationMessage* Arena::CreateMaybeMessage< ::protowire::UtxosChangedNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::UtxosChangedNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::UtxosByAddressesEntry* Arena::CreateMaybeMessage< ::protowire::UtxosByAddressesEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::UtxosByAddressesEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::StopNotifyingUtxosChangedRequestMessage* Arena::CreateMaybeMessage< ::protowire::StopNotifyingUtxosChangedRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::StopNotifyingUtxosChangedRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::StopNotifyingUtxosChangedResponseMessage* Arena::CreateMaybeMessage< ::protowire::StopNotifyingUtxosChangedResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::StopNotifyingUtxosChangedResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetUtxosByAddressesRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetUtxosByAddressesRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetUtxosByAddressesRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetUtxosByAddressesResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetUtxosByAddressesResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetUtxosByAddressesResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBalanceByAddressRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetBalanceByAddressRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBalanceByAddressRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBalanceByAddressResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetBalanceByAddressResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBalanceByAddressResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBalancesByAddressesRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetBalancesByAddressesRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBalancesByAddressesRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::BalancesByAddressEntry* Arena::CreateMaybeMessage< ::protowire::BalancesByAddressEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::BalancesByAddressEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetBalancesByAddressesResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetBalancesByAddressesResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetBalancesByAddressesResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetVirtualSelectedParentBlueScoreRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetVirtualSelectedParentBlueScoreRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetVirtualSelectedParentBlueScoreRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetVirtualSelectedParentBlueScoreResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetVirtualSelectedParentBlueScoreResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetVirtualSelectedParentBlueScoreResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage* Arena::CreateMaybeMessage< ::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyVirtualSelectedParentBlueScoreChangedRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage* Arena::CreateMaybeMessage< ::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyVirtualSelectedParentBlueScoreChangedResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage* Arena::CreateMaybeMessage< ::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::VirtualSelectedParentBlueScoreChangedNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyVirtualDaaScoreChangedRequestMessage* Arena::CreateMaybeMessage< ::protowire::NotifyVirtualDaaScoreChangedRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyVirtualDaaScoreChangedRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyVirtualDaaScoreChangedResponseMessage* Arena::CreateMaybeMessage< ::protowire::NotifyVirtualDaaScoreChangedResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyVirtualDaaScoreChangedResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::VirtualDaaScoreChangedNotificationMessage* Arena::CreateMaybeMessage< ::protowire::VirtualDaaScoreChangedNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::VirtualDaaScoreChangedNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage* Arena::CreateMaybeMessage< ::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyPruningPointUTXOSetOverrideRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage* Arena::CreateMaybeMessage< ::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyPruningPointUTXOSetOverrideResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::PruningPointUTXOSetOverrideNotificationMessage* Arena::CreateMaybeMessage< ::protowire::PruningPointUTXOSetOverrideNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::PruningPointUTXOSetOverrideNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage* Arena::CreateMaybeMessage< ::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::StopNotifyingPruningPointUTXOSetOverrideRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage* Arena::CreateMaybeMessage< ::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::StopNotifyingPruningPointUTXOSetOverrideResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::BanRequestMessage* Arena::CreateMaybeMessage< ::protowire::BanRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::BanRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::BanResponseMessage* Arena::CreateMaybeMessage< ::protowire::BanResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::BanResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::UnbanRequestMessage* Arena::CreateMaybeMessage< ::protowire::UnbanRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::UnbanRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::UnbanResponseMessage* Arena::CreateMaybeMessage< ::protowire::UnbanResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::UnbanResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetInfoRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetInfoRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetInfoRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetInfoResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetInfoResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetInfoResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::EstimateNetworkHashesPerSecondRequestMessage* Arena::CreateMaybeMessage< ::protowire::EstimateNetworkHashesPerSecondRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::EstimateNetworkHashesPerSecondRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::EstimateNetworkHashesPerSecondResponseMessage* Arena::CreateMaybeMessage< ::protowire::EstimateNetworkHashesPerSecondResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::EstimateNetworkHashesPerSecondResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyNewBlockTemplateRequestMessage* Arena::CreateMaybeMessage< ::protowire::NotifyNewBlockTemplateRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyNewBlockTemplateRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NotifyNewBlockTemplateResponseMessage* Arena::CreateMaybeMessage< ::protowire::NotifyNewBlockTemplateResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NotifyNewBlockTemplateResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::NewBlockTemplateNotificationMessage* Arena::CreateMaybeMessage< ::protowire::NewBlockTemplateNotificationMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::NewBlockTemplateNotificationMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::MempoolEntryByAddress* Arena::CreateMaybeMessage< ::protowire::MempoolEntryByAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::MempoolEntryByAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetMempoolEntriesByAddressesRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetMempoolEntriesByAddressesRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetMempoolEntriesByAddressesRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetMempoolEntriesByAddressesResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetMempoolEntriesByAddressesResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetMempoolEntriesByAddressesResponseMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetCoinSupplyRequestMessage* Arena::CreateMaybeMessage< ::protowire::GetCoinSupplyRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetCoinSupplyRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::protowire::GetCoinSupplyResponseMessage* Arena::CreateMaybeMessage< ::protowire::GetCoinSupplyResponseMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protowire::GetCoinSupplyResponseMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
